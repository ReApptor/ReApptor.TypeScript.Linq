<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Dropdown.NoItems" xml:space="preserve">
    <value>Данные не найдены</value>
  </data>
  <data name="Dropdown.NoData" xml:space="preserve">
    <value>Нет данных</value>
  </data>
  <data name="Dropdown.FilterResults" xml:space="preserve">
    <value>RU: Filter results</value>
  </data>
  <data name="Dropdown.GetResults" xml:space="preserve">
    <value>Начните писать, чтобы увидеть данные</value>
  </data>
  <data name="Dropdown.Add" xml:space="preserve">
    <value>Новый</value>
  </data>
  <data name="Dropdown.NothingSelected" xml:space="preserve">
    <value>Ничего не выбрано</value>
  </data>
  <data name="Dropdown.MultipleSelected" xml:space="preserve">
    <value>{0} выбран(о)</value>
  </data>
  <data name="List.Loading" xml:space="preserve">
    <value>Загрузка...</value>
  </data>
  <data name="SignatureWidget.Clear" xml:space="preserve">
    <value>Очистить</value>
  </data>
  <data name="SignatureWidget.Done" xml:space="preserve">
    <value>Завершить</value>
  </data>
  <data name="Modal.SaveChanges" xml:space="preserve">
    <value>Сохранить изменения</value>
  </data>
  <data name="Modal.Close" xml:space="preserve">
    <value>Закрыть</value>
  </data>
  <data name="PageContainer.PageHelp" xml:space="preserve">
    <value>Справка</value>
  </data>
  <data name="NavigationWidget.Previous" xml:space="preserve">
    <value>RU: Previous</value>
  </data>
  <data name="NavigationWidget.ReturnToPrevious" xml:space="preserve">
    <value>RU: Return to previous step</value>
  </data>
  <data name="NavigationWidget.Next" xml:space="preserve">
    <value>RU: Next</value>
  </data>
  <data name="NavigationWidget.GoToNext" xml:space="preserve">
    <value>RU: Go to next step</value>
  </data>
  <data name="ConfirmationDialog.AreYouSure" xml:space="preserve">
    <value>Вы уверены?</value>
  </data>
  <data name="ConfirmationDialog.CloseButton" xml:space="preserve">
    <value>Отмена</value>
  </data>
  <data name="ConfirmationDialog.Comment" xml:space="preserve">
    <value>Пожалуйста, оставьте комментарий</value>
  </data>
  <data name="ConfirmationDialog.ConfirmButton" xml:space="preserve">
    <value>Подтвердить</value>
  </data>
  <data name="AddressDivider.Address" xml:space="preserve">
    <value>Адрес</value>
  </data>
  <data name="VirtualAddressDivider.Street" xml:space="preserve">
    <value>RU: Street</value>
  </data>
  <data name="VirtualAddressDivider.City" xml:space="preserve">
    <value>RU: City</value>
  </data>
  <data name="VirtualAddressDivider.Postalcode" xml:space="preserve">
    <value>RU: Postal code</value>
  </data>
  <data name="FileInput.DragAndDrop" xml:space="preserve">
    <value>RU: Drag'n'drop file here, or click to select</value>
  </data>
  <data name="FileInput.Readonly" xml:space="preserve">
    <value>RU: File is readonly</value>
  </data>
  <data name="DocumentPreviewModal.Preview" xml:space="preserve">
    <value>RU: Preview</value>
  </data>
  <data name="FileInput.ChooseFile" xml:space="preserve">
    <value>RU: Choose file</value>
  </data>
  <data name="LocationPickerModal.SetLocation" xml:space="preserve">
    <value>RU: Set location</value>
  </data>
  <data name="LocationPickerModal.Subtitle" xml:space="preserve">
    <value>RU: Choose location on map</value>
  </data>
  <data name="LocationPickerModal.Title" xml:space="preserve">
    <value>RU: Location picker</value>
  </data>
  <data name="Alert" xml:space="preserve">
    <value />
  </data>
  <data name="TextInput" xml:space="preserve">
    <value />
  </data>
  <data name="TopNav" xml:space="preserve">
    <value />
  </data>
  <data name="Footer.Frontpage" xml:space="preserve">
    <value>RU: Frontpage</value>
  </data>
  <data name="Icon" xml:space="preserve">
    <value />
  </data>
  <data name="DropdownWidget" xml:space="preserve">
    <value />
  </data>
  <data name="PasswordInput.HelpText.Length" xml:space="preserve">
    <value>RU: at least 8 characters long</value>
  </data>
  <data name="DocumentPreviewModal.Download" xml:space="preserve">
    <value>Загрузить</value>
  </data>
  <data name="FileInput.Preview" xml:space="preserve">
    <value>RU: Preview</value>
  </data>
  <data name="QrWidget.Scan.Error" xml:space="preserve">
    <value>RU: QR code scanner not available, probably no permissions to camera on you mobile device.</value>
  </data>
  <data name="Month.April" xml:space="preserve">
    <value>Апрель</value>
  </data>
  <data name="Month.August" xml:space="preserve">
    <value>Август</value>
  </data>
  <data name="Month.December" xml:space="preserve">
    <value>Декабрь</value>
  </data>
  <data name="Month.February" xml:space="preserve">
    <value>Февраль</value>
  </data>
  <data name="Month.January" xml:space="preserve">
    <value>Январь</value>
  </data>
  <data name="Month.July" xml:space="preserve">
    <value>Июль</value>
  </data>
  <data name="Month.June" xml:space="preserve">
    <value>Июнь</value>
  </data>
  <data name="Month.March" xml:space="preserve">
    <value>Март</value>
  </data>
  <data name="Month.May" xml:space="preserve">
    <value>Май</value>
  </data>
  <data name="Month.November" xml:space="preserve">
    <value>Ноябрь</value>
  </data>
  <data name="Month.October" xml:space="preserve">
    <value>Октябрь</value>
  </data>
  <data name="Month.September" xml:space="preserve">
    <value>Декабрь</value>
  </data>
  <data name="PasswordForm.HelpText.UpperCase" xml:space="preserve">
    <value>RU: one uppercase ('A'-'Z') character</value>
  </data>
  <data name="PasswordForm.HelpText.LowerCase" xml:space="preserve">
    <value>RU: one lowercase ('a'-'z') character</value>
  </data>
  <data name="PasswordForm.HelpText.Number" xml:space="preserve">
    <value>RU: one number</value>
  </data>
  <data name="PasswordForm.HelpText.SpecialCharacter" xml:space="preserve">
    <value>RU: one special character</value>
  </data>
  <data name="PasswordForm.ResetPassword.PasswordsDontMatchMessage" xml:space="preserve">
    <value>RU: Passwords don't match</value>
  </data>
  <data name="PasswordForm.ChangePassword.CurrentPassword" xml:space="preserve">
    <value>RU: Current password</value>
  </data>
  <data name="PasswordForm.LoginPage.PasswordInput" xml:space="preserve">
    <value>RU: Password</value>
  </data>
  <data name="PasswordForm.ResetPassword.ConfirmPasswordInput" xml:space="preserve">
    <value>RU: Confirm password</value>
  </data>
  <data name="PasswordForm.Save" xml:space="preserve">
    <value>RU: Save</value>
  </data>
  <data name="ImageInput.DocumentTypeNotSupported" xml:space="preserve">
    <value>RU: Document type is not supported, choose file with extension {0}</value>
  </data>
  <data name="ImageInput.DocumentTooBig" xml:space="preserve">
    <value>RU: Document file is too big</value>
  </data>
  <data name="ImageModal.PreviewNotSupported" xml:space="preserve">
    <value>RU: Preview is not supported for this type of file, but you can download it instead</value>
  </data>
  <data name="ImageModal.Download" xml:space="preserve">
    <value>Загрузить</value>
  </data>
  <data name="Footer.Contact" xml:space="preserve">
    <value>RU: Contact information</value>
  </data>
  <data name="AddressDivider.Street" xml:space="preserve">
    <value>RU: Street</value>
  </data>
  <data name="AddressDivider.City" xml:space="preserve">
    <value>RU: City</value>
  </data>
  <data name="AddressDivider.PostalCode" xml:space="preserve">
    <value>RU: Postal code</value>
  </data>
  <data name="BaseInput.Validators.DocumentTooBig" xml:space="preserve">
    <value>RU: Document file is too big</value>
  </data>
  <data name="BaseInput.Validators.DocumentTypeNotSupported" xml:space="preserve">
    <value>RU: Document type is not supported, choose file with extension {0}</value>
  </data>
  <data name="BaseInput.Validators.Length" xml:space="preserve">
    <value>RU: Text is too short</value>
  </data>
  <data name="BaseInput.Validators.NumberRange" xml:space="preserve">
    <value>RU: Value must be in range {0} - {1}</value>
  </data>
  <data name="BaseInput.Validators.Required" xml:space="preserve">
    <value>RU: {0} is required</value>
  </data>
  <data name="BaseInput.Validators.TotalSizeTooBig" xml:space="preserve">
    <value>RU: Total size of documents is too big</value>
  </data>
  <data name="ImageInput.Back" xml:space="preserve">
    <value>RU: Back</value>
  </data>
  <data name="ImageInput.Browse" xml:space="preserve">
    <value>RU: Browse</value>
  </data>
  <data name="ImageInput.Camera" xml:space="preserve">
    <value>RU: Camera</value>
  </data>
  <data name="ImageInput.Delete" xml:space="preserve">
    <value>RU: Delete</value>
  </data>
  <data name="ImageInput.Edit" xml:space="preserve">
    <value>RU: Edit</value>
  </data>
  <data name="ImageInput.Save" xml:space="preserve">
    <value>RU: Save</value>
  </data>
  <data name="ImageInput.RotateLeft" xml:space="preserve">
    <value>RU: RotateLeft</value>
  </data>
  <data name="ImageInput.RotateRight" xml:space="preserve">
    <value>RU: RotateRight</value>
  </data>
  <data name="ImageInput.Preview" xml:space="preserve">
    <value>RU: Preview</value>
  </data>
  <data name="ImageInput.DropIt" xml:space="preserve">
    <value>RU: Drop it</value>
  </data>
</root>