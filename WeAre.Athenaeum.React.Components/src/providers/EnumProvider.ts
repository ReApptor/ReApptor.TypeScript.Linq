//Autogenerated

import {BaseEnumProvider, SortDirection} from "@weare/athenaeum-toolkit";
import {WebApplicationType} from "@weare/athenaeum-react-common";
import {SelectListItem} from "@/components/Form/Inputs/Dropdown/SelectListItem";
import {LoginResultStatus, OrganizationContractLevel, OrganizationContractType, WorkDayState, UserSalaryAggregateType, CustomerApprovalType, ConstructionSiteOrWarehouseType, TaskStatusFilter, ConstructionSiteStatus, WorkOrderStatus, ConstructionSiteWorkOrderStatus, UserRoleGroup, ProductUnit, PasswordValidationError, SavePasswordResultStatus, InvitationType, AuditTimestamp, AuthType} from "@/models/Enums";
import Localizer from "@/localization/Localizer";

class EnumProvider extends BaseEnumProvider<SelectListItem> {

    // #region Private

    private readonly _types: string[] = ["WebApplicationType", "LoginResultStatus", "OrganizationContractLevel", "OrganizationContractType", "WorkDayState", "UserSalaryAggregateType", "CustomerApprovalType", "ConstructionSiteOrWarehouseType", "TaskStatusFilter", "ConstructionSiteStatus", "WorkOrderStatus", "ConstructionSiteWorkOrderStatus", "UserRoleGroup", "ProductUnit", "PasswordValidationError", "SavePasswordResultStatus", "InvitationType", "AuditTimestamp", "AuthType", "SortDirection"];

    protected get types(): readonly string[] {
        return this._types;
    }

    protected createSelectListItem(value: string, text: string, subtext: string): SelectListItem {
        return new SelectListItem(value, text, subtext);
    }
    
    // #endregion
    
    constructor() {
        super();
    }

    // #region WebApplicationType

    public getWebApplicationTypeItem(value: WebApplicationType): SelectListItem {
        return this.transform(WebApplicationType, "WebApplicationType", value);
    }

    public getWebApplicationTypeItems(reverse: boolean = false): SelectListItem[] {
        return this.getItems(WebApplicationType, "WebApplicationType", reverse);
    }

    public getWebApplicationTypeName(value: WebApplicationType): string {
        return this.getWebApplicationTypeItem(value).text;
    }

    public getWebApplicationTypeText(value: WebApplicationType): string {
        return Localizer.get(this.getWebApplicationTypeName(value));
    }

    public getWebApplicationTypeDescription(value: WebApplicationType): string {
        return this.getWebApplicationTypeItem(value).subtext;
    }

    // #endregion

    // #region LoginResultStatus

    public getLoginResultStatusItem(value: LoginResultStatus): SelectListItem {
        return this.transform(LoginResultStatus, "LoginResultStatus", value);
    }

    public getLoginResultStatusItems(reverse: boolean = false): SelectListItem[] {
        return this.getItems(LoginResultStatus, "LoginResultStatus", reverse);
    }

    public getLoginResultStatusName(value: LoginResultStatus): string {
        return this.getLoginResultStatusItem(value).text;
    }

    public getLoginResultStatusText(value: LoginResultStatus): string {
        return Localizer.get(this.getLoginResultStatusName(value));
    }

    public getLoginResultStatusDescription(value: LoginResultStatus): string {
        return this.getLoginResultStatusItem(value).subtext;
    }

    // #endregion

    // #region OrganizationContractLevel

    public getOrganizationContractLevelItem(value: OrganizationContractLevel): SelectListItem {
        return this.transform(OrganizationContractLevel, "OrganizationContractLevel", value);
    }

    public getOrganizationContractLevelItems(reverse: boolean = false): SelectListItem[] {
        return this.getItems(OrganizationContractLevel, "OrganizationContractLevel", reverse);
    }

    public getOrganizationContractLevelName(value: OrganizationContractLevel): string {
        return this.getOrganizationContractLevelItem(value).text;
    }

    public getOrganizationContractLevelText(value: OrganizationContractLevel): string {
        return Localizer.get(this.getOrganizationContractLevelName(value));
    }

    public getOrganizationContractLevelDescription(value: OrganizationContractLevel): string {
        return this.getOrganizationContractLevelItem(value).subtext;
    }

    // #endregion

    // #region OrganizationContractType

    public getOrganizationContractTypeItem(value: OrganizationContractType): SelectListItem {
        return this.transform(OrganizationContractType, "OrganizationContractType", value);
    }

    public getOrganizationContractTypeItems(reverse: boolean = false): SelectListItem[] {
        return this.getItems(OrganizationContractType, "OrganizationContractType", reverse);
    }

    public getOrganizationContractTypeName(value: OrganizationContractType): string {
        return this.getOrganizationContractTypeItem(value).text;
    }

    public getOrganizationContractTypeText(value: OrganizationContractType): string {
        return Localizer.get(this.getOrganizationContractTypeName(value));
    }

    public getOrganizationContractTypeDescription(value: OrganizationContractType): string {
        return this.getOrganizationContractTypeItem(value).subtext;
    }

    // #endregion

    // #region WorkDayState

    public getWorkDayStateItem(value: WorkDayState): SelectListItem {
        return this.transform(WorkDayState, "WorkDayState", value);
    }

    public getWorkDayStateItems(reverse: boolean = false): SelectListItem[] {
        return this.getItems(WorkDayState, "WorkDayState", reverse);
    }

    public getWorkDayStateName(value: WorkDayState): string {
        return this.getWorkDayStateItem(value).text;
    }

    public getWorkDayStateText(value: WorkDayState): string {
        return Localizer.get(this.getWorkDayStateName(value));
    }

    public getWorkDayStateDescription(value: WorkDayState): string {
        return this.getWorkDayStateItem(value).subtext;
    }

    // #endregion

    // #region UserSalaryAggregateType

    public getUserSalaryAggregateTypeItem(value: UserSalaryAggregateType): SelectListItem {
        return this.transform(UserSalaryAggregateType, "UserSalaryAggregateType", value);
    }

    public getUserSalaryAggregateTypeItems(reverse: boolean = false): SelectListItem[] {
        return this.getItems(UserSalaryAggregateType, "UserSalaryAggregateType", reverse);
    }

    public getUserSalaryAggregateTypeName(value: UserSalaryAggregateType): string {
        return this.getUserSalaryAggregateTypeItem(value).text;
    }

    public getUserSalaryAggregateTypeText(value: UserSalaryAggregateType): string {
        return Localizer.get(this.getUserSalaryAggregateTypeName(value));
    }

    public getUserSalaryAggregateTypeDescription(value: UserSalaryAggregateType): string {
        return this.getUserSalaryAggregateTypeItem(value).subtext;
    }

    // #endregion

    // #region CustomerApprovalType

    public getCustomerApprovalTypeItem(value: CustomerApprovalType): SelectListItem {
        return this.transform(CustomerApprovalType, "CustomerApprovalType", value);
    }

    public getCustomerApprovalTypeItems(reverse: boolean = false): SelectListItem[] {
        return this.getItems(CustomerApprovalType, "CustomerApprovalType", reverse);
    }

    public getCustomerApprovalTypeName(value: CustomerApprovalType): string {
        return this.getCustomerApprovalTypeItem(value).text;
    }

    public getCustomerApprovalTypeText(value: CustomerApprovalType): string {
        return Localizer.get(this.getCustomerApprovalTypeName(value));
    }

    public getCustomerApprovalTypeDescription(value: CustomerApprovalType): string {
        return this.getCustomerApprovalTypeItem(value).subtext;
    }

    // #endregion

    // #region ConstructionSiteOrWarehouseType

    public getConstructionSiteOrWarehouseTypeItem(value: ConstructionSiteOrWarehouseType): SelectListItem {
        return this.transform(ConstructionSiteOrWarehouseType, "ConstructionSiteOrWarehouseType", value);
    }

    public getConstructionSiteOrWarehouseTypeItems(reverse: boolean = false): SelectListItem[] {
        return this.getItems(ConstructionSiteOrWarehouseType, "ConstructionSiteOrWarehouseType", reverse);
    }

    public getConstructionSiteOrWarehouseTypeName(value: ConstructionSiteOrWarehouseType): string {
        return this.getConstructionSiteOrWarehouseTypeItem(value).text;
    }

    public getConstructionSiteOrWarehouseTypeText(value: ConstructionSiteOrWarehouseType): string {
        return Localizer.get(this.getConstructionSiteOrWarehouseTypeName(value));
    }

    public getConstructionSiteOrWarehouseTypeDescription(value: ConstructionSiteOrWarehouseType): string {
        return this.getConstructionSiteOrWarehouseTypeItem(value).subtext;
    }

    // #endregion

    // #region TaskStatusFilter

    public getTaskStatusFilterItem(value: TaskStatusFilter): SelectListItem {
        return this.transform(TaskStatusFilter, "TaskStatusFilter", value);
    }

    public getTaskStatusFilterItems(reverse: boolean = false): SelectListItem[] {
        return this.getItems(TaskStatusFilter, "TaskStatusFilter", reverse);
    }

    public getTaskStatusFilterName(value: TaskStatusFilter): string {
        return this.getTaskStatusFilterItem(value).text;
    }

    public getTaskStatusFilterText(value: TaskStatusFilter): string {
        return Localizer.get(this.getTaskStatusFilterName(value));
    }

    public getTaskStatusFilterDescription(value: TaskStatusFilter): string {
        return this.getTaskStatusFilterItem(value).subtext;
    }

    // #endregion

    // #region ConstructionSiteStatus

    public getConstructionSiteStatusItem(value: ConstructionSiteStatus): SelectListItem {
        return this.transform(ConstructionSiteStatus, "ConstructionSiteStatus", value);
    }

    public getConstructionSiteStatusItems(reverse: boolean = false): SelectListItem[] {
        return this.getItems(ConstructionSiteStatus, "ConstructionSiteStatus", reverse);
    }

    public getConstructionSiteStatusName(value: ConstructionSiteStatus): string {
        return this.getConstructionSiteStatusItem(value).text;
    }

    public getConstructionSiteStatusText(value: ConstructionSiteStatus): string {
        return Localizer.get(this.getConstructionSiteStatusName(value));
    }

    public getConstructionSiteStatusDescription(value: ConstructionSiteStatus): string {
        return this.getConstructionSiteStatusItem(value).subtext;
    }

    // #endregion

    // #region WorkOrderStatus

    public getWorkOrderStatusItem(value: WorkOrderStatus): SelectListItem {
        return this.transform(WorkOrderStatus, "WorkOrderStatus", value);
    }

    public getWorkOrderStatusItems(reverse: boolean = false): SelectListItem[] {
        return this.getItems(WorkOrderStatus, "WorkOrderStatus", reverse);
    }

    public getWorkOrderStatusName(value: WorkOrderStatus): string {
        return this.getWorkOrderStatusItem(value).text;
    }

    public getWorkOrderStatusText(value: WorkOrderStatus): string {
        return Localizer.get(this.getWorkOrderStatusName(value));
    }

    public getWorkOrderStatusDescription(value: WorkOrderStatus): string {
        return this.getWorkOrderStatusItem(value).subtext;
    }

    // #endregion

    // #region ConstructionSiteWorkOrderStatus

    public getConstructionSiteWorkOrderStatusItem(value: ConstructionSiteWorkOrderStatus): SelectListItem {
        return this.transform(ConstructionSiteWorkOrderStatus, "ConstructionSiteWorkOrderStatus", value);
    }

    public getConstructionSiteWorkOrderStatusItems(reverse: boolean = false): SelectListItem[] {
        return this.getItems(ConstructionSiteWorkOrderStatus, "ConstructionSiteWorkOrderStatus", reverse);
    }

    public getConstructionSiteWorkOrderStatusName(value: ConstructionSiteWorkOrderStatus): string {
        return this.getConstructionSiteWorkOrderStatusItem(value).text;
    }

    public getConstructionSiteWorkOrderStatusText(value: ConstructionSiteWorkOrderStatus): string {
        return Localizer.get(this.getConstructionSiteWorkOrderStatusName(value));
    }

    public getConstructionSiteWorkOrderStatusDescription(value: ConstructionSiteWorkOrderStatus): string {
        return this.getConstructionSiteWorkOrderStatusItem(value).subtext;
    }

    // #endregion

    // #region UserRoleGroup

    public getUserRoleGroupItem(value: UserRoleGroup): SelectListItem {
        return this.transform(UserRoleGroup, "UserRoleGroup", value);
    }

    public getUserRoleGroupItems(reverse: boolean = false): SelectListItem[] {
        return this.getItems(UserRoleGroup, "UserRoleGroup", reverse);
    }

    public getUserRoleGroupName(value: UserRoleGroup): string {
        return this.getUserRoleGroupItem(value).text;
    }

    public getUserRoleGroupText(value: UserRoleGroup): string {
        return Localizer.get(this.getUserRoleGroupName(value));
    }

    public getUserRoleGroupDescription(value: UserRoleGroup): string {
        return this.getUserRoleGroupItem(value).subtext;
    }

    // #endregion

    // #region ProductUnit

    public getProductUnitItem(value: ProductUnit): SelectListItem {
        return this.transform(ProductUnit, "ProductUnit", value);
    }

    public getProductUnitItems(reverse: boolean = false): SelectListItem[] {
        return this.getItems(ProductUnit, "ProductUnit", reverse);
    }

    public getProductUnitName(value: ProductUnit): string {
        return this.getProductUnitItem(value).text;
    }

    public getProductUnitText(value: ProductUnit): string {
        return Localizer.get(this.getProductUnitName(value));
    }

    public getProductUnitDescription(value: ProductUnit): string {
        return this.getProductUnitItem(value).subtext;
    }

    // #endregion

    // #region PasswordValidationError

    public getPasswordValidationErrorItem(value: PasswordValidationError): SelectListItem {
        return this.transform(PasswordValidationError, "PasswordValidationError", value);
    }

    public getPasswordValidationErrorItems(reverse: boolean = false): SelectListItem[] {
        return this.getItems(PasswordValidationError, "PasswordValidationError", reverse);
    }

    public getPasswordValidationErrorName(value: PasswordValidationError): string {
        return this.getPasswordValidationErrorItem(value).text;
    }

    public getPasswordValidationErrorText(value: PasswordValidationError): string {
        return Localizer.get(this.getPasswordValidationErrorName(value));
    }

    public getPasswordValidationErrorDescription(value: PasswordValidationError): string {
        return this.getPasswordValidationErrorItem(value).subtext;
    }

    // #endregion

    // #region SavePasswordResultStatus

    public getSavePasswordResultStatusItem(value: SavePasswordResultStatus): SelectListItem {
        return this.transform(SavePasswordResultStatus, "SavePasswordResultStatus", value);
    }

    public getSavePasswordResultStatusItems(reverse: boolean = false): SelectListItem[] {
        return this.getItems(SavePasswordResultStatus, "SavePasswordResultStatus", reverse);
    }

    public getSavePasswordResultStatusName(value: SavePasswordResultStatus): string {
        return this.getSavePasswordResultStatusItem(value).text;
    }

    public getSavePasswordResultStatusText(value: SavePasswordResultStatus): string {
        return Localizer.get(this.getSavePasswordResultStatusName(value));
    }

    public getSavePasswordResultStatusDescription(value: SavePasswordResultStatus): string {
        return this.getSavePasswordResultStatusItem(value).subtext;
    }

    // #endregion

    // #region InvitationType

    public getInvitationTypeItem(value: InvitationType): SelectListItem {
        return this.transform(InvitationType, "InvitationType", value);
    }

    public getInvitationTypeItems(reverse: boolean = false): SelectListItem[] {
        return this.getItems(InvitationType, "InvitationType", reverse);
    }

    public getInvitationTypeName(value: InvitationType): string {
        return this.getInvitationTypeItem(value).text;
    }

    public getInvitationTypeText(value: InvitationType): string {
        return Localizer.get(this.getInvitationTypeName(value));
    }

    public getInvitationTypeDescription(value: InvitationType): string {
        return this.getInvitationTypeItem(value).subtext;
    }

    // #endregion

    // #region AuditTimestamp

    public getAuditTimestampItem(value: AuditTimestamp): SelectListItem {
        return this.transform(AuditTimestamp, "AuditTimestamp", value);
    }

    public getAuditTimestampItems(reverse: boolean = false): SelectListItem[] {
        return this.getItems(AuditTimestamp, "AuditTimestamp", reverse);
    }

    public getAuditTimestampName(value: AuditTimestamp): string {
        return this.getAuditTimestampItem(value).text;
    }

    public getAuditTimestampText(value: AuditTimestamp): string {
        return Localizer.get(this.getAuditTimestampName(value));
    }

    public getAuditTimestampDescription(value: AuditTimestamp): string {
        return this.getAuditTimestampItem(value).subtext;
    }

    // #endregion

    // #region AuthType

    public getAuthTypeItem(value: AuthType): SelectListItem {
        return this.transform(AuthType, "AuthType", value);
    }

    public getAuthTypeItems(reverse: boolean = false): SelectListItem[] {
        return this.getItems(AuthType, "AuthType", reverse);
    }

    public getAuthTypeName(value: AuthType): string {
        return this.getAuthTypeItem(value).text;
    }

    public getAuthTypeText(value: AuthType): string {
        return Localizer.get(this.getAuthTypeName(value));
    }

    public getAuthTypeDescription(value: AuthType): string {
        return this.getAuthTypeItem(value).subtext;
    }

    // #endregion

    // #region SortDirection

    public getSortDirectionItem(value: SortDirection): SelectListItem {
        return this.transform(SortDirection, "SortDirection", value);
    }

    public getSortDirectionItems(reverse: boolean = false): SelectListItem[] {
        return this.getItems(SortDirection, "SortDirection", reverse);
    }

    public getSortDirectionName(value: SortDirection): string {
        return this.getSortDirectionItem(value).text;
    }

    public getSortDirectionText(value: SortDirection): string {
        return Localizer.get(this.getSortDirectionName(value));
    }

    public getSortDirectionDescription(value: SortDirection): string {
        return this.getSortDirectionItem(value).subtext;
    }

    // #endregion
}

//Singleton
export default new EnumProvider();