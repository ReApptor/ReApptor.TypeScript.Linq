//Autogenerated

import {BaseComponentLocalizer} from "@weare/athenaeum-react-common";

class BaseInputLocalizer extends BaseComponentLocalizer {

    //Constants
    public readonly validatorsRequiredLanguageItemName: string = `Validators.Required`;
    public readonly validatorsLengthLanguageItemName: string = `Validators.Length`;
    public readonly validatorsNumberRangeLanguageItemName: string = `Validators.NumberRange`;
    public readonly validatorsDocumentTypeNotSupportedLanguageItemName: string = `Validators.DocumentTypeNotSupported`;
    public readonly validatorsDocumentTooBigLanguageItemName: string = `Validators.DocumentTooBig`;
    public readonly validatorsTotalSizeTooBigLanguageItemName: string = `Validators.TotalSizeTooBig`;

    constructor() {

        super(
            [
                { code: "en", label: "English" },
                { code: "da", label: "Dansk" },
                { code: "fi", label: "Suomi" },
                { code: "nb", label: "Norsk bokmål" },
                { code: "pl", label: "Polski" },
                { code: "ru", label: "Русский" },
                { code: "sv", label: "Svenska" },
                { code: "uk", label: "Українська" }
            ],
            "en");
        
        //Initializer
        this.set(this.validatorsRequiredLanguageItemName, { language: `en`, value: `{0} is required` }, { language: `uk`, value: `Потрібно {0}` }, { language: `sv`, value: `{0} krävs` }, { language: `ru`, value: `Требуется {0}` }, { language: `pl`, value: `{0} jest wymagany` }, { language: `nb`, value: `{0} er påkrevd` }, { language: `fi`, value: `{0} on pakollinen` }, { language: `da`, value: `{0} er påkrævet` },);
        this.set(this.validatorsLengthLanguageItemName, { language: `en`, value: `Text is too short` }, { language: `uk`, value: `Текст надто короткий` }, { language: `sv`, value: `Text för kort` }, { language: `ru`, value: `Текст слишком короткий` }, { language: `pl`, value: `Tekst za krótki` }, { language: `nb`, value: `Teksten er for kort` }, { language: `fi`, value: `Teksti on liian lyhyt` }, { language: `da`, value: `Teksten er for kort` },);
        this.set(this.validatorsNumberRangeLanguageItemName, { language: `en`, value: `Value must be in range {0} - {1}` }, { language: `uk`, value: `Значення має бути в діапазоні {0} - {1}` }, { language: `sv`, value: `Värde måste vara inom intervallet {0} - {1}` }, { language: `ru`, value: `Значение должно быть в диапазоне {0} - {1}` }, { language: `pl`, value: `Liczba musi się zawierać w przedziale {0} - {1}` }, { language: `nb`, value: `Verdien må være mellom {0} - {1}` }, { language: `fi`, value: `Arvon pitää olla väliltä {0} - {1}` }, { language: `da`, value: `Værdien skal være i området {0} - {1}` },);
        this.set(this.validatorsDocumentTypeNotSupportedLanguageItemName, { language: `en`, value: `Document type is not supported, choose file with extension {0}` }, { language: `uk`, value: `Тип документа не підтримується, виберіть файл з розширенням {0}` }, { language: `sv`, value: `Dokumenttyp stöds inte. Välj dokument som är {0}.` }, { language: `ru`, value: `Тип документа не поддерживается, выберите файл с расширением {0}` }, { language: `pl`, value: `Format dokumentu nieprawidłowy. Wybierz dokument {0}` }, { language: `nb`, value: `Dokumenttype støttes ikke. Velg fil med filtypen {0}` }, { language: `fi`, value: `Dokumentin tyyppi ei ole tuettu. Valitse tiedosto, joka on {0}` }, { language: `da`, value: `Dokumenttype understøttes ikke. Vælg fil med udvidelse {0}` },);
        this.set(this.validatorsDocumentTooBigLanguageItemName, { language: `en`, value: `Document file is too big` }, { language: `uk`, value: `Файл документа занадто великий` }, { language: `sv`, value: `Dokument filen är för stor` }, { language: `ru`, value: `Файл документа слишком большой` }, { language: `pl`, value: `Dokument jest za duży` }, { language: `nb`, value: `Dokumentfilen er for stor` }, { language: `fi`, value: `Dokumentti-tiedoston koko on liian suuri` }, { language: `da`, value: `Dokumentfilen er for stor` },);
        this.set(this.validatorsTotalSizeTooBigLanguageItemName, { language: `en`, value: `Total size of documents is too big` }, { language: `uk`, value: `Загальний розмір документів занадто великий` }, { language: `sv`, value: `Dokumentens totala storlek är för stor` }, { language: `ru`, value: `Общий размер документов слишком велик` }, { language: `pl`, value: `Rozmiar pliku za duży` }, { language: `nb`, value: `Dokumentets totale størrelse er for stor` }, { language: `fi`, value: `Dokumenttien kokonaiskoko on liian suuri` }, { language: `da`, value: `Den samlede størrelse af dokumenter er for stor` },);
    }

    /**
    /* "Validators.Required" ({0} is required)
    */
    public get validatorsRequired() : string {
        return this.get(this.validatorsRequiredLanguageItemName);
    }

    /**
    /* "Validators.Length" (Text is too short)
    */
    public get validatorsLength() : string {
        return this.get(this.validatorsLengthLanguageItemName);
    }

    /**
    /* "Validators.NumberRange" (Value must be in range {0} - {1})
    */
    public get validatorsNumberRange() : string {
        return this.get(this.validatorsNumberRangeLanguageItemName);
    }

    /**
    /* "Validators.DocumentTypeNotSupported" (Document type is not supported, choose file with extension {0})
    */
    public get validatorsDocumentTypeNotSupported() : string {
        return this.get(this.validatorsDocumentTypeNotSupportedLanguageItemName);
    }

    /**
    /* "Validators.DocumentTooBig" (Document file is too big)
    */
    public get validatorsDocumentTooBig() : string {
        return this.get(this.validatorsDocumentTooBigLanguageItemName);
    }

    /**
    /* "Validators.TotalSizeTooBig" (Total size of documents is too big)
    */
    public get validatorsTotalSizeTooBig() : string {
        return this.get(this.validatorsTotalSizeTooBigLanguageItemName);
    }
}

//Singleton
export default new BaseInputLocalizer();