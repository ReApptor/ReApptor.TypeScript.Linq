//Autogenerated

//import BaseLocalizer from "./BaseLocalizer";
import { BaseLocalizer } from "@weare/athenaeum-toolkit";

class Localizer extends BaseLocalizer {

    //Constants
    public readonly topNavFrontpageLanguageItemName: string = `TopNav.Frontpage`;
    public readonly widgetNewSiteLabelLanguageItemName: string = `Widget.NewSite.Label`;
    public readonly topNavLoginLanguageItemName: string = `TopNav.Login`;
    public readonly topNavEmployeesLanguageItemName: string = `TopNav.Employees`;
    public readonly topNavWarehouseLanguageItemName: string = `TopNav.Warehouse`;
    public readonly topNavConstructionSitesLanguageItemName: string = `TopNav.ConstructionSites`;
    public readonly topNavInvoicesLanguageItemName: string = `TopNav.Invoices`;
    public readonly topNavWorkReportsLanguageItemName: string = `TopNav.WorkReports`;
    public readonly topNavAuditsLanguageItemName: string = `TopNav.Audits`;
    public readonly topNavAdminLanguageItemName: string = `TopNav.Admin`;
    public readonly topNavConstructionSiteManagementLanguageItemName: string = `TopNav.ConstructionSiteManagement`;
    public readonly topNavAccountLanguageItemName: string = `TopNav.Account`;
    public readonly topNavWorkHoursLanguageItemName: string = `TopNav.WorkHours`;
    public readonly topNavLogoutLanguageItemName: string = `TopNav.Logout`;
    public readonly widgetConstructionSitesLabelLanguageItemName: string = `Widget.ConstructionSites.Label`;
    public readonly widgetConstructionSitesDescriptionLanguageItemName: string = `Widget.ConstructionSites.Description`;
    public readonly widgetNewSiteDescriptionLanguageItemName: string = `Widget.NewSite.Description`;
    public readonly widgetNewTaskLabelLanguageItemName: string = `Widget.NewTask.Label`;
    public readonly widgetNewTaskDescriptionLanguageItemName: string = `Widget.NewTask.Description`;
    public readonly widgetEmployeesDescriptionLanguageItemName: string = `Widget.Employees.Description`;
    public readonly widgetInvoicesDescriptionLanguageItemName: string = `Widget.Invoices.Description`;
    public readonly widgetInvoicingPeriodLabelLanguageItemName: string = `Widget.InvoicingPeriod.Label`;
    public readonly widgetInvoicingPeriodDescriptionLanguageItemName: string = `Widget.InvoicingPeriod.Description`;
    public readonly widgetSalaryPeriodLabelLanguageItemName: string = `Widget.SalaryPeriod.Label`;
    public readonly widgetSalaryPeriodDescriptionLanguageItemName: string = `Widget.SalaryPeriod.Description`;
    public readonly widgetBudgetDataSet1LabelLanguageItemName: string = `Widget.BudgetData.Set1Label`;
    public readonly widgetBudgetDataSet2LabelLanguageItemName: string = `Widget.BudgetData.Set2Label`;
    public readonly widgetBudgetDataPerimeterFrameLabelLanguageItemName: string = `Widget.BudgetData.PerimeterFrame.Label`;
    public readonly widgetBudgetDataModuleLabelLanguageItemName: string = `Widget.BudgetData.Module.Label`;
    public readonly widgetBudgetDataWeatherShelterLabelLanguageItemName: string = `Widget.BudgetData.WeatherShelter.Label`;
    public readonly widgetMyWorkReportsLabelLanguageItemName: string = `Widget.MyWorkReports.Label`;
    public readonly widgetMyWorkReportsDescriptionLanguageItemName: string = `Widget.MyWorkReports.Description`;
    public readonly widgetMyInvoicesLabelLanguageItemName: string = `Widget.MyInvoices.Label`;
    public readonly widgetMyInvoicesDescriptionLanguageItemName: string = `Widget.MyInvoices.Description`;
    public readonly widgetMyAuditsLabelLanguageItemName: string = `Widget.MyAudits.Label`;
    public readonly widgetMyAuditsDescriptionLanguageItemName: string = `Widget.MyAudits.Description`;
    public readonly widgetRentaLinkLabelLanguageItemName: string = `Widget.RentaLink.Label`;
    public readonly widgetRentaLinkDescriptionLanguageItemName: string = `Widget.RentaLink.Description`;
    public readonly widgetLoginDescriptionLanguageItemName: string = `Widget.Login.Description`;
    public readonly validatorsEmailLanguageItemName: string = `Validators.Email`;
    public readonly validatorsPasswordLanguageItemName: string = `Validators.Password`;
    public readonly validatorsPhoneLanguageItemName: string = `Validators.Phone`;
    public readonly validatorsRequiredLanguageItemName: string = `Validators.Required`;
    public readonly validatorsNumberRangeLanguageItemName: string = `Validators.NumberRange`;
    public readonly loginPageLoginButtonLanguageItemName: string = `LoginPage.LoginButton`;
    public readonly loginPageSsoButtonLanguageItemName: string = `LoginPage.SsoButton`;
    public readonly loginPageForgotPasswordButtonLanguageItemName: string = `LoginPage.ForgotPasswordButton`;
    public readonly loginPageEmailInputLanguageItemName: string = `LoginPage.EmailInput`;
    public readonly linkExpiredLanguageItemName: string = `Link.Expired`;
    public readonly linkUsedLanguageItemName: string = `Link.Used`;
    public readonly forgotPasswordPagePageTitleLanguageItemName: string = `ForgotPasswordPage.PageTitle`;
    public readonly forgotPasswordPageSuccessMessageLanguageItemName: string = `ForgotPasswordPage.SuccessMessage`;
    public readonly forgotPasswordPageFailedMessageLanguageItemName: string = `ForgotPasswordPage.FailedMessage`;
    public readonly forgotPasswordPageResetButtonLanguageItemName: string = `ForgotPasswordPage.ResetButton`;
    public readonly forgotPasswordPageLoginButtonLanguageItemName: string = `ForgotPasswordPage.LoginButton`;
    public readonly forgotPasswordPageHelpTextLanguageItemName: string = `ForgotPasswordPage.HelpText`;
    public readonly forgotPasswordPageEmailInputLanguageItemName: string = `ForgotPasswordPage.EmailInput`;
    public readonly loginPagePasswordInputLanguageItemName: string = `LoginPage.PasswordInput`;
    public readonly loginPageTitleLanguageItemName: string = `LoginPage.Title`;
    public readonly loginPageSubtitleLanguageItemName: string = `LoginPage.Subtitle`;
    public readonly enumLoginResultStatusNotFoundLanguageItemName: string = `Enum.LoginResultStatus.NotFound`;
    public readonly enumLoginResultStatusDeletedLanguageItemName: string = `Enum.LoginResultStatus.Deleted`;
    public readonly enumLoginResultStatusLockedLanguageItemName: string = `Enum.LoginResultStatus.Locked`;
    public readonly enumLoginResultStatusSecurityLanguageItemName: string = `Enum.LoginResultStatus.Security`;
    public readonly errorPageTitleLanguageItemName: string = `ErrorPage.Title`;
    public readonly errorPageErrorMessageLanguageItemName: string = `ErrorPage.ErrorMessage`;
    public readonly errorPageContactSupportLanguageItemName: string = `ErrorPage.ContactSupport`;
    public readonly contactSupportPageTitleLanguageItemName: string = `ContactSupportPage.Title`;
    public readonly formInputEmailLanguageItemName: string = `Form.Input.Email`;
    public readonly formInputReceiverEmailLanguageItemName: string = `Form.Input.ReceiverEmail`;
    public readonly formInputPhoneLanguageItemName: string = `Form.Input.Phone`;
    public readonly formInputFirstnameLanguageItemName: string = `Form.Input.Firstname`;
    public readonly formInputMiddlenameLanguageItemName: string = `Form.Input.Middlename`;
    public readonly formInputLastnameLanguageItemName: string = `Form.Input.Lastname`;
    public readonly formInputMessageLanguageItemName: string = `Form.Input.Message`;
    public readonly formInputAddressLanguageItemName: string = `Form.Input.Address`;
    public readonly formInputStreetLanguageItemName: string = `Form.Input.Street`;
    public readonly formInputCityLanguageItemName: string = `Form.Input.City`;
    public readonly formInputPostalcodeLanguageItemName: string = `Form.Input.Postalcode`;
    public readonly formInputPostalboxLanguageItemName: string = `Form.Input.Postalbox`;
    public readonly formInputLanguageLanguageItemName: string = `Form.Input.Language`;
    public readonly formInputEmployeeNumberLanguageItemName: string = `Form.Input.EmployeeNumber`;
    public readonly formInputCostPoolLanguageItemName: string = `Form.Input.CostPool`;
    public readonly formInputWorkCardIdLanguageItemName: string = `Form.Input.WorkCardId`;
    public readonly formInputTimeTrackingDeviceIdLanguageItemName: string = `Form.Input.TimeTrackingDeviceId`;
    public readonly formInputContractSalaryHourlyPriceLanguageItemName: string = `Form.Input.ContractSalaryHourlyPrice`;
    public readonly formInputRoleLanguageItemName: string = `Form.Input.Role`;
    public readonly formSendLanguageItemName: string = `Form.Send`;
    public readonly formSaveLanguageItemName: string = `Form.Save`;
    public readonly componentDropdownNoItemsLanguageItemName: string = `Component.Dropdown.NoItems`;
    public readonly componentDropdownNoDataLanguageItemName: string = `Component.Dropdown.NoData`;
    public readonly componentDropdownFilterResultsLanguageItemName: string = `Component.Dropdown.FilterResults`;
    public readonly componentDropdownGetResultsLanguageItemName: string = `Component.Dropdown.GetResults`;
    public readonly componentDropdownAddLanguageItemName: string = `Component.Dropdown.Add`;
    public readonly topNavContactSupportLanguageItemName: string = `TopNav.ContactSupport`;
    public readonly topNavWorkOrdersLanguageItemName: string = `TopNav.WorkOrders`;
    public readonly dayOfWeekSundayLanguageItemName: string = `DayOfWeek.Sunday`;
    public readonly dayOfWeekMondayLanguageItemName: string = `DayOfWeek.Monday`;
    public readonly dayOfWeekTuesdayLanguageItemName: string = `DayOfWeek.Tuesday`;
    public readonly dayOfWeekWednesdayLanguageItemName: string = `DayOfWeek.Wednesday`;
    public readonly dayOfWeekThursdayLanguageItemName: string = `DayOfWeek.Thursday`;
    public readonly dayOfWeekFridayLanguageItemName: string = `DayOfWeek.Friday`;
    public readonly dayOfWeekSaturdayLanguageItemName: string = `DayOfWeek.Saturday`;
    public readonly rentaTasksDashboardQRCodeLanguageItemName: string = `RentaTasks.Dashboard.QRCode`;
    public readonly rentaTasksDashboardQRCodeDescriptionLanguageItemName: string = `RentaTasks.Dashboard.QRCodeDescription`;
    public readonly rentaTasksDashboardCheckInLanguageItemName: string = `RentaTasks.Dashboard.CheckIn`;
    public readonly rentaTasksApproveDropdownWidgetTasksToCombineLanguageItemName: string = `RentaTasks.Approve.DropdownWidget.TasksToCombine`;
    public readonly rentaTasksApproveDropdownWidgetTasksCombinedLanguageItemName: string = `RentaTasks.Approve.DropdownWidget.TasksCombined`;
    public readonly rentaTasksSignatureAlertLanguageItemName: string = `RentaTasks.Signature.Alert`;
    public readonly rentaTasksSelectTaskMyTasksLanguageItemName: string = `RentaTasks.SelectTask.MyTasks`;
    public readonly rentaTasksSelectTaskNotAssignedLanguageItemName: string = `RentaTasks.SelectTask.NotAssigned`;
    public readonly rentaTasksSelectOrganizationNoOrganizationsLanguageItemName: string = `RentaTasks.SelectOrganization.NoOrganizations`;
    public readonly rentaTasksSelectSiteNotFoundLanguageItemName: string = `RentaTasks.SelectSite.NotFound`;
    public readonly rentaTasksSelectSiteNoAvailableSitesLanguageItemName: string = `RentaTasks.SelectSite.NoAvailableSites`;
    public readonly rentaTasksAssignMounterDropdownWidgetAssignMountersLanguageItemName: string = `RentaTasks.AssignMounter.DropdownWidget.AssignMounters`;
    public readonly rentaTasksAssignMounterDropdownWidgetMountersAssignedLanguageItemName: string = `RentaTasks.AssignMounter.DropdownWidget.MountersAssigned`;
    public readonly rentaTasksAddEquipmentDropdownWidgetNoEquipmentLanguageItemName: string = `RentaTasks.AddEquipment.DropdownWidget.NoEquipment`;
    public readonly rentaTasksAddEquipmentDropdownWidgetSpecifyAmountLanguageItemName: string = `RentaTasks.AddEquipment.DropdownWidget.SpecifyAmount`;
    public readonly rentaTasksAddEquipmentManualLanguageItemName: string = `RentaTasks.AddEquipment.Manual`;
    public readonly rentaTasksAddTaskManualLanguageItemName: string = `RentaTasks.AddTask.Manual`;
    public readonly rentaTasksControllerStepsTitleSelectSiteLanguageItemName: string = `RentaTasks.Controller.Steps.Title.SelectSite`;
    public readonly rentaTasksControllerStepsTitleSelectOrganizationLanguageItemName: string = `RentaTasks.Controller.Steps.Title.SelectOrganization`;
    public readonly rentaTasksControllerStepsTitleSelectTaskLanguageItemName: string = `RentaTasks.Controller.Steps.Title.SelectTask`;
    public readonly rentaTasksControllerStepsTitleAllowanceLanguageItemName: string = `RentaTasks.Controller.Steps.Title.Allowance`;
    public readonly rentaTasksControllerStepsTitleDistanceLanguageItemName: string = `RentaTasks.Controller.Steps.Title.Distance`;
    public readonly rentaTasksControllerStepsTitleTaskStatusLanguageItemName: string = `RentaTasks.Controller.Steps.Title.TaskStatus`;
    public readonly rentaTasksControllerStepsTitleEquipmentLanguageItemName: string = `RentaTasks.Controller.Steps.Title.Equipment`;
    public readonly rentaTasksControllerStepsTitleApproveLanguageItemName: string = `RentaTasks.Controller.Steps.Title.Approve`;
    public readonly rentaTasksControllerStepsTitleSignatureLanguageItemName: string = `RentaTasks.Controller.Steps.Title.Signature`;
    public readonly rentaTasksControllerStepsTitleNewTaskLanguageItemName: string = `RentaTasks.Controller.Steps.Title.NewTask`;
    public readonly rentaTasksControllerStepsTitleMountersLanguageItemName: string = `RentaTasks.Controller.Steps.Title.Mounters`;
    public readonly rentaManagementSummaryPageManualLanguageItemName: string = `RentaManagement.SummaryPage.Manual`;
    public readonly rentaManagementSummaryPageDescriptionLanguageItemName: string = `RentaManagement.SummaryPage.Description`;
    public readonly rentaManagementSummaryPageButtonTitleLanguageItemName: string = `RentaManagement.SummaryPage.Button.Title`;
    public readonly rentaManagementSelectModuleNoModulesLanguageItemName: string = `RentaManagement.SelectModule.NoModules`;
    public readonly rentaManagementSelectModuleDescriptionLanguageItemName: string = `RentaManagement.SelectModule.Description`;
    public readonly rentaManagementSelectModuleManualLanguageItemName: string = `RentaManagement.SelectModule.Manual`;
    public readonly rentaManagementSelectSiteNoSiteWithModulesLanguageItemName: string = `RentaManagement.SelectSite.NoSiteWithModules`;
    public readonly rentaManagementSelectAgreementNoAgreementLanguageItemName: string = `RentaManagement.SelectAgreement.NoAgreement`;
    public readonly rentaManagementSelectAgreementManualLanguageItemName: string = `RentaManagement.SelectAgreement.Manual`;
    public readonly rentaManagementSelectAgreementDescriptionLanguageItemName: string = `RentaManagement.SelectAgreement.Description`;
    public readonly rentaManagementSaveAuditSentLanguageItemName: string = `RentaManagement.SaveAudit.Sent`;
    public readonly rentaManagementSaveAuditManualLanguageItemName: string = `RentaManagement.SaveAudit.Manual`;
    public readonly rentaManagementDashboardManualLanguageItemName: string = `RentaManagement.Dashboard.Manual`;
    public readonly rentaManagementDashboardActivateLanguageItemName: string = `RentaManagement.Dashboard.Activate`;
    public readonly rentaManagementDashboardActivateDescriptionLanguageItemName: string = `RentaManagement.Dashboard.Activate.Description`;
    public readonly rentaManagementDashboardAuditLanguageItemName: string = `RentaManagement.Dashboard.Audit`;
    public readonly rentaManagementDashboardAuditDescriptionLanguageItemName: string = `RentaManagement.Dashboard.Audit.Description`;
    public readonly rentaManagementDashboardAddTaskLanguageItemName: string = `RentaManagement.Dashboard.AddTask`;
    public readonly rentaManagementDashboardAddTaskDescriptionLanguageItemName: string = `RentaManagement.Dashboard.AddTask.Description`;
    public readonly rentaManagementAuditParams4HighestLanguageItemName: string = `RentaManagement.AuditParams4.Highest`;
    public readonly rentaManagementAuditParams4SpacingLanguageItemName: string = `RentaManagement.AuditParams4.Spacing`;
    public readonly rentaManagementAuditParams3SnowloadLanguageItemName: string = `RentaManagement.AuditParams3.Snowload`;
    public readonly rentaManagementAuditParams3WindloadLanguageItemName: string = `RentaManagement.AuditParams3.Windload`;
    public readonly rentaManagementAuditParams3WeatherShelterLanguageItemName: string = `RentaManagement.AuditParams3.WeatherShelter`;
    public readonly rentaManagementAuditParams2LoadClassLanguageItemName: string = `RentaManagement.AuditParams2.LoadClass`;
    public readonly rentaManagementAuditParams2TypesLanguageItemName: string = `RentaManagement.AuditParams2.Types`;
    public readonly rentaManagementAuditParams2GuidesLanguageItemName: string = `RentaManagement.AuditParams2.Guides`;
    public readonly rentaManagementAuditParams2CustomLanguageItemName: string = `RentaManagement.AuditParams2.Custom`;
    public readonly rentaManagementAuditParams1AuditorLanguageItemName: string = `RentaManagement.AuditParams1.Auditor`;
    public readonly rentaManagementAuditParams1AuditDateLanguageItemName: string = `RentaManagement.AuditParams1.AuditDate`;
    public readonly rentaManagementAuditParams1HandoverDateLanguageItemName: string = `RentaManagement.AuditParams1.HandoverDate`;
    public readonly rentaManagementAuditModuleHeadingIdLanguageItemName: string = `RentaManagement.AuditModule.Heading.Id`;
    public readonly rentaManagementAuditModuleHeadingNameLanguageItemName: string = `RentaManagement.AuditModule.Heading.Name`;
    public readonly rentaManagementAuditModuleHeadingTypeLanguageItemName: string = `RentaManagement.AuditModule.Heading.Type`;
    public readonly rentaManagementAuditModuleHeadingAssemblyLanguageItemName: string = `RentaManagement.AuditModule.Heading.Assembly`;
    public readonly rentaManagementAuditModuleHeadingAuditDateLanguageItemName: string = `RentaManagement.AuditModule.Heading.AuditDate`;
    public readonly rentaManagementAuditModuleHeadingAuditResultLanguageItemName: string = `RentaManagement.AuditModule.Heading.AuditResult`;
    public readonly rentaManagementAuditModuleHeadingAuditApprovingLanguageItemName: string = `RentaManagement.AuditModule.Heading.AuditApproving`;
    public readonly rentaManagementAuditModuleHeadingAuditSentLanguageItemName: string = `RentaManagement.AuditModule.Heading.AuditSent`;
    public readonly rentaManagementControllerStepsTitleSelectSiteLanguageItemName: string = `RentaManagement.Controller.Steps.Title.SelectSite`;
    public readonly rentaManagementControllerStepsTitleSelectAgreementLanguageItemName: string = `RentaManagement.Controller.Steps.Title.SelectAgreement`;
    public readonly rentaManagementControllerStepsTitleSelectModuleLanguageItemName: string = `RentaManagement.Controller.Steps.Title.SelectModule`;
    public readonly rentaManagementControllerStepsTitleAuditLanguageItemName: string = `RentaManagement.Controller.Steps.Title.Audit`;
    public readonly rentaManagementControllerStepsTitleDateLanguageItemName: string = `RentaManagement.Controller.Steps.Title.Date`;
    public readonly rentaManagementControllerStepsTitleGuideLanguageItemName: string = `RentaManagement.Controller.Steps.Title.Guide`;
    public readonly rentaManagementControllerStepsTitleParamsLanguageItemName: string = `RentaManagement.Controller.Steps.Title.Params`;
    public readonly rentaManagementControllerStepsTitleCheckLanguageItemName: string = `RentaManagement.Controller.Steps.Title.Check`;
    public readonly rentaManagementControllerStepsTitleSummaryLanguageItemName: string = `RentaManagement.Controller.Steps.Title.Summary`;
    public readonly rentaManagementControllerStepsTitleSaveAuditLanguageItemName: string = `RentaManagement.Controller.Steps.Title.SaveAudit`;
    public readonly rentaManagementControllerQuestionFoundationLanguageItemName: string = `RentaManagement.Controller.Question.Foundation`;
    public readonly rentaManagementControllerQuestionUprightsLanguageItemName: string = `RentaManagement.Controller.Question.Uprights`;
    public readonly rentaManagementControllerQuestionBindingsAndSupportersLanguageItemName: string = `RentaManagement.Controller.Question.BindingsAndSupporters`;
    public readonly rentaManagementControllerQuestionSideEndBindingsLanguageItemName: string = `RentaManagement.Controller.Question.SideEndBindings`;
    public readonly rentaManagementControllerQuestionAnchorageLanguageItemName: string = `RentaManagement.Controller.Question.Anchorage`;
    public readonly rentaManagementControllerQuestionCounterTopsLanguageItemName: string = `RentaManagement.Controller.Question.CounterTops`;
    public readonly rentaManagementControllerQuestionSafetyBarriersLanguageItemName: string = `RentaManagement.Controller.Question.SafetyBarriers`;
    public readonly rentaManagementControllerQuestionAscentWaysLanguageItemName: string = `RentaManagement.Controller.Question.AscentWays`;
    public readonly rentaManagementControllerQuestionAuditCardLanguageItemName: string = `RentaManagement.Controller.Question.AuditCard`;
    public readonly rentaManagementControllerQuestionCoversLanguageItemName: string = `RentaManagement.Controller.Question.Covers`;
    public readonly enumDailyAllowanceMealLanguageItemName: string = `Enum.DailyAllowance.Meal`;
    public readonly enumDailyAllowanceMealDescriptionLanguageItemName: string = `Enum.DailyAllowance.Meal.Description`;
    public readonly enumDailyAllowanceDayLanguageItemName: string = `Enum.DailyAllowance.Day`;
    public readonly enumDailyAllowanceDayDescriptionLanguageItemName: string = `Enum.DailyAllowance.Day.Description`;
    public readonly enumDailyAllowanceHalfDayLanguageItemName: string = `Enum.DailyAllowance.HalfDay`;
    public readonly enumDailyAllowanceHalfDayDescriptionLanguageItemName: string = `Enum.DailyAllowance.HalfDay.Description`;
    public readonly componentDropdownNothingSelectedLanguageItemName: string = `Component.Dropdown.NothingSelected`;
    public readonly componentDropdownMultipleSelectedLanguageItemName: string = `Component.Dropdown.MultipleSelected`;
    public readonly dropdownGroupWarehousesLanguageItemName: string = `Dropdown.Group.Warehouses`;
    public readonly dropdownGroupConstructionSitesLanguageItemName: string = `Dropdown.Group.ConstructionSites`;
    public readonly rentaTasksDashboardSignInLanguageItemName: string = `RentaTasks.Dashboard.SignIn`;
    public readonly rentaTasksDashboardSignOutLanguageItemName: string = `RentaTasks.Dashboard.SignOut`;
    public readonly myAccountPageTitleLanguageItemName: string = `MyAccountPage.Title`;
    public readonly myAccountPageSubtitleLanguageItemName: string = `MyAccountPage.Subtitle`;
    public readonly myAccountPageMyInfoTabTitleLanguageItemName: string = `MyAccountPage.MyInfoTabTitle`;
    public readonly myAccountPageDataSavedLanguageItemName: string = `MyAccountPage.DataSaved`;
    public readonly myAccountPageMyDocumentsTabTitleLanguageItemName: string = `MyAccountPage.MyDocumentsTabTitle`;
    public readonly myAccountPageAcceptanceLanguageItemName: string = `MyAccountPage.Acceptance`;
    public readonly myAccountPageAcceptanceRequiredLanguageItemName: string = `MyAccountPage.Acceptance.Required`;
    public readonly myAccountPageAcceptanceTermsLanguageItemName: string = `MyAccountPage.Acceptance.Terms`;
    public readonly myAccountPageAcceptanceTermsTitleLanguageItemName: string = `MyAccountPage.Acceptance.Terms.Title`;
    public readonly myAccountPageAcceptanceTermsContentLanguageItemName: string = `MyAccountPage.Acceptance.Terms.Content`;
    public readonly myAccountPageAcceptancePrivacyNoticeLanguageItemName: string = `MyAccountPage.Acceptance.PrivacyNotice`;
    public readonly myAccountPageAcceptancePrivacyNoticeTitleLanguageItemName: string = `MyAccountPage.Acceptance.PrivacyNotice.Title`;
    public readonly myAccountPageAcceptancePrivacyNoticeContentLanguageItemName: string = `MyAccountPage.Acceptance.PrivacyNotice.Content`;
    public readonly myAccountPageUserAlreadyExistsLanguageItemName: string = `MyAccountPage.UserAlreadyExists`;
    public readonly loginPageSsoUserNotFoundLanguageItemName: string = `LoginPage.Sso.UserNotFound`;
    public readonly loginPageSsoFailedLanguageItemName: string = `LoginPage.Sso.Failed`;
    public readonly enumCustomerApprovalTypeEmailLanguageItemName: string = `Enum.CustomerApprovalType.Email`;
    public readonly enumCustomerApprovalTypePhoneLanguageItemName: string = `Enum.CustomerApprovalType.Phone`;
    public readonly enumCustomerApprovalTypePhoneDescriptionLanguageItemName: string = `Enum.CustomerApprovalType.Phone.Description`;
    public readonly enumCustomerApprovalTypeEmailDescriptionLanguageItemName: string = `Enum.CustomerApprovalType.Email.Description`;
    public readonly enumCustomerApprovalTypeSignatureLanguageItemName: string = `Enum.CustomerApprovalType.Signature`;
    public readonly enumCustomerApprovalTypeSignatureDescriptionLanguageItemName: string = `Enum.CustomerApprovalType.Signature.Description`;
    public readonly enumDailyAllowanceNoneLanguageItemName: string = `Enum.DailyAllowance.None`;
    public readonly enumDailyAllowanceNoneDescriptionLanguageItemName: string = `Enum.DailyAllowance.None.Description`;
    public readonly enumUserDocumentTypeCraneCertificateLanguageItemName: string = `Enum.UserDocumentType.CraneCertificate`;
    public readonly enumUserDocumentTypeDrivingLicenceLanguageItemName: string = `Enum.UserDocumentType.DrivingLicence`;
    public readonly enumUserDocumentTypeElectricalSafetyCardLanguageItemName: string = `Enum.UserDocumentType.ElectricalSafetyCard`;
    public readonly enumUserDocumentTypeFireWorkCardLanguageItemName: string = `Enum.UserDocumentType.FireWorkCard`;
    public readonly enumUserDocumentTypeFirstAidCardLanguageItemName: string = `Enum.UserDocumentType.FirstAidCard`;
    public readonly enumUserDocumentTypeForkliftCardLanguageItemName: string = `Enum.UserDocumentType.ForkliftCard`;
    public readonly enumUserDocumentTypeIdCardLanguageItemName: string = `Enum.UserDocumentType.IdCard`;
    public readonly enumUserDocumentTypeLifterCardLanguageItemName: string = `Enum.UserDocumentType.LifterCard`;
    public readonly enumUserDocumentTypeRoadSafetyCardLanguageItemName: string = `Enum.UserDocumentType.RoadSafetyCard`;
    public readonly enumUserDocumentTypeRoofFireWorkCardLanguageItemName: string = `Enum.UserDocumentType.RoofFireWorkCard`;
    public readonly enumUserDocumentTypeWetRoomCertificateLanguageItemName: string = `Enum.UserDocumentType.WetRoomCertificate`;
    public readonly enumUserDocumentTypeWorkSafetyCardLanguageItemName: string = `Enum.UserDocumentType.WorkSafetyCard`;
    public readonly enumModuleModelUndefinedLanguageItemName: string = `Enum.ModuleModel.Undefined`;
    public readonly enumModuleModelModuleLanguageItemName: string = `Enum.ModuleModel.Module`;
    public readonly enumModuleModelModulesLanguageItemName: string = `Enum.ModuleModel.Modules`;
    public readonly enumModuleModelPerimeterFrameLanguageItemName: string = `Enum.ModuleModel.PerimeterFrame`;
    public readonly enumModuleModelWeatherShelterLanguageItemName: string = `Enum.ModuleModel.WeatherShelter`;
    public readonly moduleModelCustomLanguageItemName: string = `ModuleModel.Custom`;
    public readonly enumUserDocumentLevelFirstLanguageItemName: string = `Enum.UserDocumentLevel.First`;
    public readonly enumUserDocumentLevelSecondLanguageItemName: string = `Enum.UserDocumentLevel.Second`;
    public readonly enumContractTaskTypeAssemblyLanguageItemName: string = `Enum.ContractTaskType.Assembly`;
    public readonly enumContractTaskTypeDismantleLanguageItemName: string = `Enum.ContractTaskType.Dismantle`;
    public readonly enumContractTaskTypeDeliveryLanguageItemName: string = `Enum.ContractTaskType.Delivery`;
    public readonly enumContractTaskTypeReturnLanguageItemName: string = `Enum.ContractTaskType.Return`;
    public readonly enumContractTaskTypeCoveringLanguageItemName: string = `Enum.ContractTaskType.Covering`;
    public readonly formInputFileDragAndDropLanguageItemName: string = `Form.Input.File.DragAndDrop`;
    public readonly formInputFileReadonlyLanguageItemName: string = `Form.Input.File.Readonly`;
    public readonly formInputFilePreviewLanguageItemName: string = `Form.Input.File.Preview`;
    public readonly formInputFileChooseFileLanguageItemName: string = `Form.Input.File.ChooseFile`;
    public readonly userDocumentSubtitleLanguageItemName: string = `UserDocument.Subtitle`;
    public readonly userDocumentTitleLanguageItemName: string = `UserDocument.Title`;
    public readonly userDocumentSendHelpTextLanguageItemName: string = `UserDocument.Send.HelpText`;
    public readonly userDocumentSendButtonLanguageItemName: string = `UserDocument.Send.Button`;
    public readonly userDocumentValidThruLanguageItemName: string = `UserDocument.ValidThru`;
    public readonly userDocumentImageLanguageItemName: string = `UserDocument.Image`;
    public readonly userDocumentLevelLanguageItemName: string = `UserDocument.Level`;
    public readonly enumWorkDayStateNormalLanguageItemName: string = `Enum.WorkDayState.Normal`;
    public readonly enumWorkDayStateNormalDescriptionLanguageItemName: string = `Enum.WorkDayState.Normal.Description`;
    public readonly enumWorkDayStateSickLeaveLanguageItemName: string = `Enum.WorkDayState.SickLeave`;
    public readonly enumWorkDayStateSickLeaveDescriptionLanguageItemName: string = `Enum.WorkDayState.SickLeave.Description`;
    public readonly enumWorkDayStateVacationLanguageItemName: string = `Enum.WorkDayState.Vacation`;
    public readonly enumWorkDayStateVacationDescriptionLanguageItemName: string = `Enum.WorkDayState.Vacation.Description`;
    public readonly enumWorkDayStateWeeklyRestLanguageItemName: string = `Enum.WorkDayState.WeeklyRest`;
    public readonly enumWorkDayStateWeeklyRestDescriptionLanguageItemName: string = `Enum.WorkDayState.WeeklyRest.Description`;
    public readonly enumWorkDayStatePaidDayOffLanguageItemName: string = `Enum.WorkDayState.PaidDayOff`;
    public readonly enumWorkDayStatePaidDayOffDescriptionLanguageItemName: string = `Enum.WorkDayState.PaidDayOff.Description`;
    public readonly enumWorkDayStateFlexHoursLanguageItemName: string = `Enum.WorkDayState.FlexHours`;
    public readonly enumWorkDayStateFlexHoursDescriptionLanguageItemName: string = `Enum.WorkDayState.FlexHours.Description`;
    public readonly userDocumentSendSuccessLanguageItemName: string = `UserDocumentSendSuccess`;
    public readonly genericAccessDeniedLanguageItemName: string = `Generic.AccessDenied`;
    public readonly genericDataSavedLanguageItemName: string = `Generic.DataSaved`;
    public readonly genericTaskLanguageItemName: string = `Generic.Task`;
    public readonly genericWarehouseLanguageItemName: string = `Generic.Warehouse`;
    public readonly genericTasksLanguageItemName: string = `Generic.Tasks`;
    public readonly genericNameLanguageItemName: string = `Generic.Name`;
    public readonly genericVatIdLanguageItemName: string = `Generic.VatId`;
    public readonly genericCostPoolLanguageItemName: string = `Generic.CostPool`;
    public readonly genericDetailsLanguageItemName: string = `Generic.Details`;
    public readonly warehousesPageTitleLanguageItemName: string = `Warehouses.PageTitle`;
    public readonly warehousePanelPanelTitleLanguageItemName: string = `WarehousePanel.PanelTitle`;
    public readonly warehousesExternalIdLanguageItemName: string = `Warehouses.ExternalId`;
    public readonly enumBusinessAreaScaffoldingLanguageItemName: string = `Enum.BusinessArea.Scaffolding`;
    public readonly enumBusinessAreaStpLanguageItemName: string = `Enum.BusinessArea.Stp`;
    public readonly adminSettingsKeyLanguageItemName: string = `Admin.SettingsKey`;
    public readonly adminSettingsValueLanguageItemName: string = `Admin.SettingsValue`;
    public readonly adminUserDeletedLanguageItemName: string = `Admin.UserDeleted`;
    public readonly adminUserDeletedPermanentlyLanguageItemName: string = `Admin.UserDeletedPermanently`;
    public readonly adminUserRestoredLanguageItemName: string = `Admin.UserRestored`;
    public readonly adminAddUserLanguageItemName: string = `Admin.AddUser`;
    public readonly adminShowDeletedLanguageItemName: string = `Admin.ShowDeleted`;
    public readonly adminSubcontractorLabelLanguageItemName: string = `Admin.Subcontractor.Label`;
    public readonly adminButtonAddNewSubcontractorLanguageItemName: string = `Admin.Button.AddNewSubcontractor`;
    public readonly adminButtonRestoreLanguageItemName: string = `Admin.Button.Restore`;
    public readonly adminButtonDeleteLanguageItemName: string = `Admin.Button.Delete`;
    public readonly adminButtonUnlockLanguageItemName: string = `Admin.Button.Unlock`;
    public readonly adminSettingsSavedLanguageItemName: string = `Admin.SettingsSaved`;
    public readonly adminSettingsTabLanguageItemName: string = `Admin.Settings.Tab`;
    public readonly adminUsersTabLanguageItemName: string = `Admin.Users.Tab`;
    public readonly adminAlertMessageUnlockUserLanguageItemName: string = `Admin.AlertMessage.UnlockUser`;
    public readonly adminConfirmationButtonUnlockUserLanguageItemName: string = `Admin.ConfirmationButton.UnlockUser`;
    public readonly adminConfirmationButtonDeleteUserLanguageItemName: string = `Admin.ConfirmationButton.DeleteUser`;
    public readonly adminConfirmationButtonRestoreUserLanguageItemName: string = `Admin.ConfirmationButton.RestoreUser`;
    public readonly genericSaveLanguageItemName: string = `Generic.Save`;
    public readonly genericCancelLanguageItemName: string = `Generic.Cancel`;
    public readonly genericConstructionsiteLanguageItemName: string = `Generic.Constructionsite`;
    public readonly genericDateLanguageItemName: string = `Generic.Date`;
    public readonly resetPasswordPageTitleLanguageItemName: string = `ResetPassword.PageTitle`;
    public readonly resetPasswordConfirmPasswordInputLanguageItemName: string = `ResetPassword.ConfirmPasswordInput`;
    public readonly resetPasswordPasswordsDontMatchMessageLanguageItemName: string = `ResetPassword.PasswordsDontMatchMessage`;
    public readonly resetPasswordSuccessMessageLanguageItemName: string = `ResetPassword.SuccessMessage`;
    public readonly resetPasswordSuccessMessageAndInfoLanguageItemName: string = `ResetPassword.SuccessMessageAndInfo`;
    public readonly changePasswordCurrentPasswordLanguageItemName: string = `ChangePassword.CurrentPassword`;
    public readonly changePasswordNewPasswordLanguageItemName: string = `ChangePassword.NewPassword`;
    public readonly changePasswordPageTitleLanguageItemName: string = `ChangePassword.PageTitle`;
    public readonly changePasswordButtonLanguageItemName: string = `ChangePassword.Button`;
    public readonly changePasswordWrongCurrentMessageLanguageItemName: string = `ChangePassword.WrongCurrentMessage`;
    public readonly changePasswordWeakPasswordMessageLanguageItemName: string = `ChangePassword.WeakPasswordMessage`;
    public readonly roleNameSubcontractorManagerLanguageItemName: string = `RoleName.SubcontractorManager`;
    public readonly roleNameSubcontractorMounterLanguageItemName: string = `RoleName.SubcontractorMounter`;
    public readonly roleNameSubcontractorHeadMounterLanguageItemName: string = `RoleName.SubcontractorHeadMounter`;
    public readonly roleNameScaffoldingMounterLanguageItemName: string = `RoleName.ScaffoldingMounter`;
    public readonly roleNameMounterLanguageItemName: string = `RoleName.Mounter`;
    public readonly roleNameScaffoldingHeadMounterLanguageItemName: string = `RoleName.ScaffoldingHeadMounter`;
    public readonly roleNameStpHeadMounterLanguageItemName: string = `RoleName.StpHeadMounter`;
    public readonly roleNameScaffoldingManagerLanguageItemName: string = `RoleName.ScaffoldingManager`;
    public readonly roleNameStpManagerLanguageItemName: string = `RoleName.StpManager`;
    public readonly roleNameScaffoldingAdminLanguageItemName: string = `RoleName.ScaffoldingAdmin`;
    public readonly roleNameStpAdminLanguageItemName: string = `RoleName.StpAdmin`;
    public readonly topNavChangePasswordLanguageItemName: string = `TopNav.ChangePassword`;
    public readonly enumConstructionSiteStatusActiveLanguageItemName: string = `Enum.ConstructionSiteStatus.Active`;
    public readonly enumConstructionSiteStatusActiveDescriptionLanguageItemName: string = `Enum.ConstructionSiteStatus.Active.Description`;
    public readonly enumConstructionSiteStatusInactiveLanguageItemName: string = `Enum.ConstructionSiteStatus.Inactive`;
    public readonly enumConstructionSiteStatusInactiveDescriptionLanguageItemName: string = `Enum.ConstructionSiteStatus.Inactive.Description`;
    public readonly enumConstructionSiteStatusClosedLanguageItemName: string = `Enum.ConstructionSiteStatus.Closed`;
    public readonly enumConstructionSiteStatusClosedDescriptionLanguageItemName: string = `Enum.ConstructionSiteStatus.Closed.Description`;
    public readonly enumWorkOrderStatusHasActiveTasksLanguageItemName: string = `Enum.WorkOrderStatus.HasActiveTasks`;
    public readonly enumWorkOrderStatusHasActiveTasksDescriptionLanguageItemName: string = `Enum.WorkOrderStatus.HasActiveTasks.Description`;
    public readonly enumWorkOrderStatusWorkReportNotSentLanguageItemName: string = `Enum.WorkOrderStatus.WorkReportNotSent`;
    public readonly enumWorkOrderStatusWorkReportNotSentDescriptionLanguageItemName: string = `Enum.WorkOrderStatus.WorkReportNotSent.Description`;
    public readonly enumWorkOrderStatusWorkReportNotApprovedByCustomerLanguageItemName: string = `Enum.WorkOrderStatus.WorkReportNotApprovedByCustomer`;
    public readonly enumWorkOrderStatusWorkReportNotApprovedByCustomerDescriptionLanguageItemName: string = `Enum.WorkOrderStatus.WorkReportNotApprovedByCustomer.Description`;
    public readonly enumWorkOrderStatusTaskNotApprovedByManagerLanguageItemName: string = `Enum.WorkOrderStatus.TaskNotApprovedByManager`;
    public readonly enumWorkOrderStatusTaskNotApprovedByManagerDescriptionLanguageItemName: string = `Enum.WorkOrderStatus.TaskNotApprovedByManager.Description`;
    public readonly enumWorkOrderStatusInvoiceRowsNotApprovedNyManagerLanguageItemName: string = `Enum.WorkOrderStatus.InvoiceRowsNotApprovedNyManager`;
    public readonly enumWorkOrderStatusInvoiceRowsNotApprovedNyManagerDescriptionLanguageItemName: string = `Enum.WorkOrderStatus.InvoiceRowsNotApprovedNyManager.Description`;
    public readonly enumWorkOrderStatusInvoiceNotCreatedLanguageItemName: string = `Enum.WorkOrderStatus.InvoiceNotCreated`;
    public readonly enumWorkOrderStatusInvoiceNotCreatedDescriptionLanguageItemName: string = `Enum.WorkOrderStatus.InvoiceNotCreated.Description`;
    public readonly monthJanuaryLanguageItemName: string = `Month.January`;
    public readonly monthFebruaryLanguageItemName: string = `Month.February`;
    public readonly monthMarchLanguageItemName: string = `Month.March`;
    public readonly monthAprilLanguageItemName: string = `Month.April`;
    public readonly monthMayLanguageItemName: string = `Month.May`;
    public readonly monthJuneLanguageItemName: string = `Month.June`;
    public readonly monthJulyLanguageItemName: string = `Month.July`;
    public readonly monthAugustLanguageItemName: string = `Month.August`;
    public readonly monthSeptemberLanguageItemName: string = `Month.September`;
    public readonly monthOctoberLanguageItemName: string = `Month.October`;
    public readonly monthNovemberLanguageItemName: string = `Month.November`;
    public readonly monthDecemberLanguageItemName: string = `Month.December`;
    public readonly roleNameAdminLanguageItemName: string = `RoleName.Admin`;
    public readonly roleNameContactPersonLanguageItemName: string = `RoleName.ContactPerson`;
    public readonly roleNameScaffoldingDriverLanguageItemName: string = `RoleName.ScaffoldingDriver`;
    public readonly roleNameStpDriverLanguageItemName: string = `RoleName.StpDriver`;
    public readonly enumUserRoleGroupAdminsLanguageItemName: string = `Enum.UserRoleGroup.Admins`;
    public readonly enumUserRoleGroupSubcontractorsLanguageItemName: string = `Enum.UserRoleGroup.Subcontractors`;
    public readonly enumUserRoleGroupAdminsDescriptionLanguageItemName: string = `Enum.UserRoleGroup.Admins.Description`;
    public readonly enumUserRoleGroupManagersLanguageItemName: string = `Enum.UserRoleGroup.Managers`;
    public readonly enumUserRoleGroupContactPersonsLanguageItemName: string = `Enum.UserRoleGroup.ContactPersons`;
    public readonly enumUserRoleGroupManagersDescriptionLanguageItemName: string = `Enum.UserRoleGroup.Managers.Description`;
    public readonly enumUserRoleGroupEmployeesLanguageItemName: string = `Enum.UserRoleGroup.Employees`;
    public readonly enumUserRoleGroupEmployeesDescriptionLanguageItemName: string = `Enum.UserRoleGroup.Employees.Description`;
    public readonly enumTaxRateRate24LanguageItemName: string = `Enum.TaxRate.Rate24`;
    public readonly enumTaxRateRate14LanguageItemName: string = `Enum.TaxRate.Rate14`;
    public readonly enumTaxRateRate10LanguageItemName: string = `Enum.TaxRate.Rate10`;
    public readonly enumTaxRateRate0LanguageItemName: string = `Enum.TaxRate.Rate0`;
    public readonly adminHeaderTitleLanguageItemName: string = `Admin.HeaderTitle`;
    public readonly adminChooseRoleLanguageItemName: string = `Admin.ChooseRole`;
    public readonly confirmationDialogAreYouSureLanguageItemName: string = `ConfirmationDialog.AreYouSure`;
    public readonly confirmationDialogConfirmLanguageItemName: string = `ConfirmationDialog.Confirm`;
    public readonly confirmationDialogCloseLanguageItemName: string = `ConfirmationDialog.Close`;
    public readonly footerFrontpageLanguageItemName: string = `Footer.Frontpage`;
    public readonly baseInputDocumentTooBigLanguageItemName: string = `BaseInput.DocumentTooBig`;
    public readonly baseInputTotalSizeTooBigLanguageItemName: string = `BaseInput.TotalSizeTooBig`;
    public readonly baseInputDocumentTypeNotSupportedLanguageItemName: string = `BaseInput.DocumentTypeNotSupported`;
    public readonly passwordHelpTextPasswordHintsLanguageItemName: string = `Password.HelpText.PasswordHints`;
    public readonly passwordHelpTextSpecialCharacterLanguageItemName: string = `Password.HelpText.SpecialCharacter`;
    public readonly passwordHelpTextLowerCaseLanguageItemName: string = `Password.HelpText.LowerCase`;
    public readonly passwordHelpTextUpperCaseLanguageItemName: string = `Password.HelpText.UpperCase`;
    public readonly passwordHelpTextNumberLanguageItemName: string = `Password.HelpText.Number`;
    public readonly passwordHelpTextLengthLanguageItemName: string = `Password.HelpText.Length`;
    public readonly enumConstructionSiteSubContractorTaskStatusWorkReportNotApprovedByCustomerLanguageItemName: string = `Enum.ConstructionSiteSubContractorTaskStatus.WorkReportNotApprovedByCustomer`;
    public readonly enumConstructionSiteSubContractorTaskStatusWorkReportNotApprovedByCustomerDescriptionLanguageItemName: string = `Enum.ConstructionSiteSubContractorTaskStatus.WorkReportNotApprovedByCustomer.Description`;
    public readonly enumConstructionSiteSubContractorTaskStatusOpenTasksLanguageItemName: string = `Enum.ConstructionSiteSubContractorTaskStatus.OpenTasks`;
    public readonly enumConstructionSiteSubContractorTaskStatusOpenTasksDescriptionLanguageItemName: string = `Enum.ConstructionSiteSubContractorTaskStatus.OpenTasks.Description`;
    public readonly enumConstructionSiteSubContractorTaskStatusTaskNotApprovedLanguageItemName: string = `Enum.ConstructionSiteSubContractorTaskStatus.TaskNotApproved`;
    public readonly enumConstructionSiteSubContractorTaskStatusTaskNotApprovedDescriptionLanguageItemName: string = `Enum.ConstructionSiteSubContractorTaskStatus.TaskNotApproved.Description`;
    public readonly enumConstructionSiteSubContractorTaskStatusWorkReportNotSentLanguageItemName: string = `Enum.ConstructionSiteSubContractorTaskStatus.WorkReportNotSent`;
    public readonly enumConstructionSiteSubContractorTaskStatusWorkReportNotSentDescriptionLanguageItemName: string = `Enum.ConstructionSiteSubContractorTaskStatus.WorkReportNotSent.Description`;
    public readonly enumConstructionSiteSubContractorTaskStatusWorkReportNotInvoicedLanguageItemName: string = `Enum.ConstructionSiteSubContractorTaskStatus.WorkReportNotInvoiced`;
    public readonly enumConstructionSiteSubContractorTaskStatusWorkReportNotInvoicedDescriptionLanguageItemName: string = `Enum.ConstructionSiteSubContractorTaskStatus.WorkReportNotInvoiced.Description`;
    public readonly predefinedTaskGroupMounterLanguageItemName: string = `PredefinedTaskGroup.Mounter`;
    public readonly predefinedTaskGroupDeliveryLanguageItemName: string = `PredefinedTaskGroup.Delivery`;
    public readonly enumPredefinedExtraTaskAssemblyLanguageItemName: string = `Enum.PredefinedExtraTask.Assembly`;
    public readonly enumPredefinedExtraTaskDismantleLanguageItemName: string = `Enum.PredefinedExtraTask.Dismantle`;
    public readonly enumPredefinedExtraTaskWeatherCoverOpeningLanguageItemName: string = `Enum.PredefinedExtraTask.WeatherCoverOpening`;
    public readonly enumPredefinedExtraTaskExtraWorkLanguageItemName: string = `Enum.PredefinedExtraTask.ExtraWork`;
    public readonly enumPredefinedExtraTaskModificationWorkLanguageItemName: string = `Enum.PredefinedExtraTask.ModificationWork`;
    public readonly enumPredefinedExtraTaskRepairWorkLanguageItemName: string = `Enum.PredefinedExtraTask.RepairWork`;
    public readonly enumPredefinedDeliveryTaskDeliveryTransportLanguageItemName: string = `Enum.PredefinedDeliveryTask.DeliveryTransport`;
    public readonly enumPredefinedDeliveryTaskReturnTransportLanguageItemName: string = `Enum.PredefinedDeliveryTask.ReturnTransport`;
    public readonly enumPredefinedDeliveryTaskPackedMaterialTransportLanguageItemName: string = `Enum.PredefinedDeliveryTask.PackedMaterialTransport`;
    public readonly enumScaffoldingLoadClassTypeClass1LanguageItemName: string = `Enum.ScaffoldingLoadClassType.Class1`;
    public readonly enumScaffoldingLoadClassTypeClass1DescriptionLanguageItemName: string = `Enum.ScaffoldingLoadClassType.Class1.Description`;
    public readonly enumScaffoldingLoadClassTypeClass2LanguageItemName: string = `Enum.ScaffoldingLoadClassType.Class2`;
    public readonly enumScaffoldingLoadClassTypeClass2DescriptionLanguageItemName: string = `Enum.ScaffoldingLoadClassType.Class2.Description`;
    public readonly enumScaffoldingLoadClassTypeClass3LanguageItemName: string = `Enum.ScaffoldingLoadClassType.Class3`;
    public readonly enumScaffoldingLoadClassTypeClass3DescriptionLanguageItemName: string = `Enum.ScaffoldingLoadClassType.Class3.Description`;
    public readonly enumScaffoldingLoadClassTypeClass4LanguageItemName: string = `Enum.ScaffoldingLoadClassType.Class4`;
    public readonly enumScaffoldingLoadClassTypeClass4DescriptionLanguageItemName: string = `Enum.ScaffoldingLoadClassType.Class4.Description`;
    public readonly enumScaffoldingLoadClassTypeClass5LanguageItemName: string = `Enum.ScaffoldingLoadClassType.Class5`;
    public readonly enumScaffoldingLoadClassTypeClass5DescriptionLanguageItemName: string = `Enum.ScaffoldingLoadClassType.Class5.Description`;
    public readonly enumScaffoldingLoadClassTypeClass6LanguageItemName: string = `Enum.ScaffoldingLoadClassType.Class6`;
    public readonly enumScaffoldingLoadClassTypeClass6DescriptionLanguageItemName: string = `Enum.ScaffoldingLoadClassType.Class6.Description`;
    public readonly enumProductUnitPieceLanguageItemName: string = `Enum.ProductUnit.Piece`;
    public readonly enumProductUnitMeterLanguageItemName: string = `Enum.ProductUnit.Meter`;
    public readonly enumProductUnitKilometerLanguageItemName: string = `Enum.ProductUnit.Kilometer`;
    public readonly enumProductUnitMeter2LanguageItemName: string = `Enum.ProductUnit.Meter2`;
    public readonly enumProductUnitLiterLanguageItemName: string = `Enum.ProductUnit.Liter`;
    public readonly enumProductUnitBoxLanguageItemName: string = `Enum.ProductUnit.Box`;
    public readonly enumProductUnitPairLanguageItemName: string = `Enum.ProductUnit.Pair`;
    public readonly enumProductUnitBottleLanguageItemName: string = `Enum.ProductUnit.Bottle`;
    public readonly enumProductUnitCanLanguageItemName: string = `Enum.ProductUnit.Can`;
    public readonly enumProductUnitBagLanguageItemName: string = `Enum.ProductUnit.Bag`;
    public readonly enumProductUnitRollLanguageItemName: string = `Enum.ProductUnit.Roll`;
    public readonly enumProductUnitCustomLanguageItemName: string = `Enum.ProductUnit.Custom`;
    public readonly sendWorkReportTitleLanguageItemName: string = `SendWorkReport.Title`;
    public readonly sendWorkReportSubtitleLanguageItemName: string = `SendWorkReport.Subtitle`;
    public readonly sendWorkReportDropdownLabelLanguageItemName: string = `SendWorkReport.Dropdown.Label`;
    public readonly sendWorkReportDropdownNewContactPersonLanguageItemName: string = `SendWorkReport.Dropdown.NewContactPerson`;
    public readonly sendWorkReportNewContactPersonLanguageItemName: string = `SendWorkReport.NewContactPerson`;
    public readonly workHoursWidgetApprovedLanguageItemName: string = `WorkHoursWidget.Approved`;
    public readonly workHoursWidgetReportedLanguageItemName: string = `WorkHoursWidget.Reported`;
    public readonly workHoursWidgetContractHoursLanguageItemName: string = `WorkHoursWidget.ContractHours`;
    public readonly workHoursWidgetSalaryHoursLanguageItemName: string = `WorkHoursWidget.SalaryHours`;
    public readonly myWorkHoursLabelLanguageItemName: string = `MyWorkHours.Label`;
    public readonly myWorkHoursDescriptionLanguageItemName: string = `MyWorkHours.Description`;
    public readonly myWorkHoursNoTaskLanguageItemName: string = `MyWorkHours.NoTask`;
    public readonly myWorkHoursLunchHourInstructionsTitleLanguageItemName: string = `MyWorkHours.LunchHourInstructionsTitle`;
    public readonly myWorkHoursLunchHourInstructionsDescriptionLanguageItemName: string = `MyWorkHours.LunchHourInstructionsDescription`;
    public readonly myWorkHoursNoReportedHoursLanguageItemName: string = `MyWorkHours.NoReportedHours`;
    public readonly enumPaymentTermsCodeP0LanguageItemName: string = `Enum.PaymentTermsCode.P0`;
    public readonly enumPaymentTermsCodeP14LanguageItemName: string = `Enum.PaymentTermsCode.P14`;
    public readonly enumPaymentTermsCodeP21LanguageItemName: string = `Enum.PaymentTermsCode.P21`;
    public readonly enumPaymentTermsCodeP30LanguageItemName: string = `Enum.PaymentTermsCode.P30`;
    public readonly enumPaymentTermsCodeP45LanguageItemName: string = `Enum.PaymentTermsCode.P45`;
    public readonly enumPaymentTermsCodeP60LanguageItemName: string = `Enum.PaymentTermsCode.P60`;
    public readonly enumPaymentTermsCodeP7LanguageItemName: string = `Enum.PaymentTermsCode.P7`;
    public readonly enumInvoiceStateCreatedLanguageItemName: string = `Enum.InvoiceState.Created`;
    public readonly enumInvoiceStateCreatedDescriptionLanguageItemName: string = `Enum.InvoiceState.Created.Description`;
    public readonly enumInvoiceStateApprovedLanguageItemName: string = `Enum.InvoiceState.Approved`;
    public readonly enumInvoiceStateApprovedDescriptionLanguageItemName: string = `Enum.InvoiceState.Approved.Description`;
    public readonly enumInvoiceStateSentLanguageItemName: string = `Enum.InvoiceState.Sent`;
    public readonly enumInvoiceStateSentDescriptionLanguageItemName: string = `Enum.InvoiceState.Sent.Description`;
    public readonly enumInvoiceStateProcessedLanguageItemName: string = `Enum.InvoiceState.Processed`;
    public readonly enumInvoiceStateProcessedDescriptionLanguageItemName: string = `Enum.InvoiceState.Processed.Description`;
    public readonly enumInvoiceStateFailedLanguageItemName: string = `Enum.InvoiceState.Failed`;
    public readonly enumInvoiceStateFailedDescriptionLanguageItemName: string = `Enum.InvoiceState.Failed.Description`;
    public readonly enumInvoiceStateFilterCreatedLanguageItemName: string = `Enum.InvoiceStateFilter.Created`;
    public readonly enumInvoiceStateFilterCreatedDescriptionLanguageItemName: string = `Enum.InvoiceStateFilter.Created.Description`;
    public readonly enumInvoiceStateFilterApprovedLanguageItemName: string = `Enum.InvoiceStateFilter.Approved`;
    public readonly enumInvoiceStateFilterApprovedDescriptionLanguageItemName: string = `Enum.InvoiceStateFilter.Approved.Description`;
    public readonly enumInvoiceStateFilterSentLanguageItemName: string = `Enum.InvoiceStateFilter.Sent`;
    public readonly enumInvoiceStateFilterSentDescriptionLanguageItemName: string = `Enum.InvoiceStateFilter.Sent.Description`;
    public readonly enumInvoiceStateFilterProcessedLanguageItemName: string = `Enum.InvoiceStateFilter.Processed`;
    public readonly enumInvoiceStateFilterProcessedDescriptionLanguageItemName: string = `Enum.InvoiceStateFilter.Processed.Description`;
    public readonly enumInvoiceStateFilterFailedLanguageItemName: string = `Enum.InvoiceStateFilter.Failed`;
    public readonly enumInvoiceStateFilterFailedDescriptionLanguageItemName: string = `Enum.InvoiceStateFilter.Failed.Description`;
    public readonly enumInvoiceStateFilterLockedLanguageItemName: string = `Enum.InvoiceStateFilter.Locked`;
    public readonly enumInvoiceStateFilterLockedDescriptionLanguageItemName: string = `Enum.InvoiceStateFilter.Locked.Description`;
    public readonly enumInvoiceTypeDebitLanguageItemName: string = `Enum.InvoiceType.Debit`;
    public readonly enumInvoiceTypeCreditLanguageItemName: string = `Enum.InvoiceType.Credit`;
    public readonly enumInvoiceRowTypeContractTaskLanguageItemName: string = `Enum.InvoiceRowType.ContractTask`;
    public readonly enumInvoiceRowTypeContractTaskDescriptionLanguageItemName: string = `Enum.InvoiceRowType.ContractTask.Description`;
    public readonly enumInvoiceRowTypeRentLanguageItemName: string = `Enum.InvoiceRowType.Rent`;
    public readonly enumInvoiceRowTypeRentDescriptionLanguageItemName: string = `Enum.InvoiceRowType.Rent.Description`;
    public readonly enumInvoiceRowTypeExtraRentLanguageItemName: string = `Enum.InvoiceRowType.ExtraRent`;
    public readonly enumInvoiceRowTypeWorkReportLanguageItemName: string = `Enum.InvoiceRowType.WorkReport`;
    public readonly enumInvoiceRowTypeWorkReportDescriptionLanguageItemName: string = `Enum.InvoiceRowType.WorkReport.Description`;
    public readonly enumInvoiceRowTypeWorkReportsLanguageItemName: string = `Enum.InvoiceRowType.WorkReports`;
    public readonly enumInvoiceRowTypeTaskEquipmentLanguageItemName: string = `Enum.InvoiceRowType.TaskEquipment`;
    public readonly enumInvoiceRowTypeTaskEquipmentDescriptionLanguageItemName: string = `Enum.InvoiceRowType.TaskEquipment.Description`;
    public readonly enumInvoiceRowTypeTaskExtraChargeLanguageItemName: string = `Enum.InvoiceRowType.TaskExtraCharge`;
    public readonly enumManualInvoiceRowTypeContractTaskLanguageItemName: string = `Enum.ManualInvoiceRowType.ContractTask`;
    public readonly enumManualInvoiceRowTypeContractTaskDescriptionLanguageItemName: string = `Enum.ManualInvoiceRowType.ContractTask.Description`;
    public readonly enumManualInvoiceRowTypeRentLanguageItemName: string = `Enum.ManualInvoiceRowType.Rent`;
    public readonly enumManualInvoiceRowTypeRentDescriptionLanguageItemName: string = `Enum.ManualInvoiceRowType.Rent.Description`;
    public readonly enumManualInvoiceRowTypeWorkReportLanguageItemName: string = `Enum.ManualInvoiceRowType.WorkReport`;
    public readonly enumManualInvoiceRowTypeWorkReportDescriptionLanguageItemName: string = `Enum.ManualInvoiceRowType.WorkReport.Description`;
    public readonly enumManualInvoiceRowTypeTaskEquipmentLanguageItemName: string = `Enum.ManualInvoiceRowType.TaskEquipment`;
    public readonly enumManualInvoiceRowTypeTaskEquipmentDescriptionLanguageItemName: string = `Enum.ManualInvoiceRowType.TaskEquipment.Description`;
    public readonly gridNoItemsLanguageItemName: string = `Grid.NoItems`;
    public readonly gridNoDataInvoicesLanguageItemName: string = `Grid.NoData.Invoices`;
    public readonly gridNoDataInvoiceRowsLanguageItemName: string = `Grid.NoData.InvoiceRows`;
    public readonly gridNoDataModulesLanguageItemName: string = `Grid.NoData.Modules`;
    public readonly gridNoDataTasksLanguageItemName: string = `Grid.NoData.Tasks`;
    public readonly gridNoDataSubcontractorsLanguageItemName: string = `Grid.NoData.Subcontractors`;
    public readonly gridNoDataWorkReportsLanguageItemName: string = `Grid.NoData.WorkReports`;
    public readonly documentPreviewModalInvoiceTitleLanguageItemName: string = `DocumentPreviewModal.Invoice.Title`;
    public readonly documentPreviewModalWorkReportTitleLanguageItemName: string = `DocumentPreviewModal.WorkReport.Title`;
    public readonly componentFooterContactLanguageItemName: string = `Component.Footer.Contact`;
    public readonly componentFooterFrontpageLanguageItemName: string = `Component.Footer.Frontpage`;
    public readonly componentListLoadingLanguageItemName: string = `Component.List.Loading`;
    public readonly workDayPanelHalfDayAllowanceLanguageItemName: string = `WorkDayPanel.HalfDayAllowance`;
    public readonly workDayPanelWorkDayTypeLanguageItemName: string = `WorkDayPanel.WorkDayType`;
    public readonly workDayPanelSalaryHoursLanguageItemName: string = `WorkDayPanel.SalaryHours`;
    public readonly workDayPanelSalaryHoursDescriptionLanguageItemName: string = `WorkDayPanel.SalaryHours.Description`;
    public readonly addTaskModalWorkReportLanguageItemName: string = `AddTaskModal.WorkReport`;
    public readonly addTaskModalPriceEuroLanguageItemName: string = `AddTaskModal.PriceEuro`;
    public readonly addTaskModalCostEuroLanguageItemName: string = `AddTaskModal.CostEuro`;
    public readonly addTaskModalSiteOrWarehouseLanguageItemName: string = `AddTaskModal.SiteOrWarehouse`;
    public readonly addTaskModalAgreementLanguageItemName: string = `AddTaskModal.Agreement`;
    public readonly addTaskModalExtraHoursAutoCalculatedLanguageItemName: string = `AddTaskModal.ExtraHours.AutoCalculated`;
    public readonly addWorkReportModalCreateNewReportLanguageItemName: string = `AddWorkReportModal.CreateNewReport`;
    public readonly addWorkReportModalAttachmentsLanguageItemName: string = `AddWorkReportModal.Attachments`;
    public readonly addWorkReportModalAttachmentRemoveConfirmationLanguageItemName: string = `AddWorkReportModal.AttachmentRemoveConfirmation`;
    public readonly addWorkReportModalCreateNewReportSubtitleLanguageItemName: string = `AddWorkReportModal.CreateNewReportSubtitle`;
    public readonly addWorkReportModalValidationCreateWorkReportFirstLanguageItemName: string = `AddWorkReportModal.Validation.CreateWorkReportFirst`;
    public readonly addWorkReportModalGridExtraChargesLanguageItemName: string = `AddWorkReportModal.Grid.ExtraCharges`;
    public readonly addWorkReportModalGridExtraChargesTitleLanguageItemName: string = `AddWorkReportModal.Grid.ExtraCharges.Title`;
    public readonly taskHoursPanelHoursLanguageItemName: string = `TaskHoursPanel.Hours`;
    public readonly taskHoursPanelHoursInfoLanguageItemName: string = `TaskHoursPanel.HoursInfo`;
    public readonly taskHoursPanelExtraHoursLanguageItemName: string = `TaskHoursPanel.ExtraHours`;
    public readonly taskHoursPanelExtraHoursInfoLanguageItemName: string = `TaskHoursPanel.ExtraHoursInfo`;
    public readonly taskHoursPanelOvertimeLanguageItemName: string = `TaskHoursPanel.Overtime`;
    public readonly taskHoursPanelContractHoursLanguageItemName: string = `TaskHoursPanel.ContractHours`;
    public readonly taskHoursPanelContractHoursPriceLanguageItemName: string = `TaskHoursPanel.ContractHoursPrice`;
    public readonly taskHoursPanelContractHoursPriceInfoLanguageItemName: string = `TaskHoursPanel.ContractHoursPriceInfo`;
    public readonly taskHoursPanelNoAccessToHoursLanguageItemName: string = `TaskHoursPanel.NoAccessToHours`;
    public readonly addTaskModalMountersLanguageItemName: string = `AddTaskModal.Mounters`;
    public readonly addTaskModalNameLanguageItemName: string = `AddTaskModal.Name`;
    public readonly tasksPanelDateLanguageItemName: string = `TasksPanel.Date`;
    public readonly tasksPanelCreateModuleLanguageItemName: string = `TasksPanel.CreateModule`;
    public readonly tasksPanelCreateExtraModuleLanguageItemName: string = `TasksPanel.CreateExtraModule`;
    public readonly tasksPanelCostLanguageItemName: string = `TasksPanel.Cost`;
    public readonly tasksPanelPriceLanguageItemName: string = `TasksPanel.Price`;
    public readonly tasksPanelDeleteTaskLanguageItemName: string = `TasksPanel.DeleteTask`;
    public readonly tasksPanelCommitChangesLanguageItemName: string = `TasksPanel.CommitChanges`;
    public readonly tasksPanelCancelChangesLanguageItemName: string = `TasksPanel.CancelChanges`;
    public readonly tasksPanelDeleteHoursLanguageItemName: string = `TasksPanel.DeleteHours`;
    public readonly tasksPanelRentTabTitleLanguageItemName: string = `TasksPanel.RentTabTitle`;
    public readonly tasksPanelAgreementLanguageItemName: string = `TasksPanel.Agreement`;
    public readonly taskTooltipsNewTaskLanguageItemName: string = `TaskTooltips.NewTask`;
    public readonly taskTooltipsTaskInProgressLanguageItemName: string = `TaskTooltips.TaskInProgress`;
    public readonly taskTooltipsTaskWaitingActivationLanguageItemName: string = `TaskTooltips.TaskWaitingActivation`;
    public readonly taskTooltipsTaskApprovedLanguageItemName: string = `TaskTooltips.TaskApproved`;
    public readonly taskTooltipsTaskDeclinedLanguageItemName: string = `TaskTooltips.TaskDeclined`;
    public readonly taskTooltipsTaskWaitingApprovalLanguageItemName: string = `TaskTooltips.TaskWaitingApproval`;
    public readonly taskTooltipsTaskInvoicedLanguageItemName: string = `TaskTooltips.TaskInvoiced`;
    public readonly taskTooltipsTaskReadyForInvoicingLanguageItemName: string = `TaskTooltips.TaskReadyForInvoicing`;
    public readonly taskHoursPanelFixedPriceLanguageItemName: string = `TaskHoursPanel.FixedPrice`;
    public readonly tasksPanelInfoMounterHoursLanguageItemName: string = `TasksPanel.InfoMounterHours`;
    public readonly tasksPanelStartLanguageItemName: string = `TasksPanel.Start`;
    public readonly tasksPanelNameLanguageItemName: string = `TasksPanel.Name`;
    public readonly tasksPanelStartInfoLanguageItemName: string = `TasksPanel.StartInfo`;
    public readonly tasksPanelDoneLanguageItemName: string = `TasksPanel.Done`;
    public readonly tasksPanelAddTaskTitleLanguageItemName: string = `TasksPanel.AddTaskTitle`;
    public readonly tasksPanelAddWorkReportTitleLanguageItemName: string = `TasksPanel.AddWorkReportTitle`;
    public readonly tasksPanelChangeWorkReportTitleLanguageItemName: string = `TasksPanel.ChangeWorkReportTitle`;
    public readonly tasksPanelSaveWorkReportTitleLanguageItemName: string = `TasksPanel.SaveWorkReportTitle`;
    public readonly tasksPanelForecastLanguageItemName: string = `TasksPanel.Forecast`;
    public readonly tasksPanelForecastInfoLanguageItemName: string = `TasksPanel.ForecastInfo`;
    public readonly tasksPanelExtraHoursInfoLanguageItemName: string = `TasksPanel.ExtraHoursInfo`;
    public readonly tasksPanelActionsLanguageItemName: string = `TasksPanel.Actions`;
    public readonly tasksPanelCompleteTaskLanguageItemName: string = `TasksPanel.CompleteTask`;
    public readonly tasksPanelActivateTaskLanguageItemName: string = `TasksPanel.ActivateTask`;
    public readonly tasksPanelApproveTaskCreateLanguageItemName: string = `TasksPanel.ApproveTaskCreate`;
    public readonly tasksPanelRestoreTaskLanguageItemName: string = `TasksPanel.RestoreTask`;
    public readonly tasksPanelCodeLanguageItemName: string = `TasksPanel.Code`;
    public readonly tasksPanelWorkReportDescriptionLanguageItemName: string = `TasksPanel.WorkReportDescription`;
    public readonly tasksPanelTypeLanguageItemName: string = `TasksPanel.Type`;
    public readonly tasksPanelTasksLanguageItemName: string = `TasksPanel.Tasks`;
    public readonly tasksPanelExtraModuleCreatedLanguageItemName: string = `TasksPanel.ExtraModuleCreated`;
    public readonly tasksPanelConfirmationExtraModuleLanguageItemName: string = `TasksPanel.Confirmation.ExtraModule`;
    public readonly addTaskModalDescriptionLanguageItemName: string = `AddTaskModal.Description`;
    public readonly addTaskModalAddTaskLanguageItemName: string = `AddTaskModal.AddTask`;
    public readonly addTaskModalCreateTaskLanguageItemName: string = `AddTaskModal.CreateTask`;
    public readonly addTaskModalCreateAndContinueLanguageItemName: string = `AddTaskModal.CreateAndContinue`;
    public readonly addTaskModalCreateAndCloseLanguageItemName: string = `AddTaskModal.CreateAndClose`;
    public readonly addTaskModalValidationCreateTaskFirstLanguageItemName: string = `AddTaskModal.Validation.CreateTaskFirst`;
    public readonly addTaskModalValidationCreateWorkReportFirstLanguageItemName: string = `AddTaskModal.Validation.CreateWorkReportFirst`;
    public readonly addTaskModalDeleteLanguageItemName: string = `AddTaskModal.Delete`;
    public readonly addTaskModalExtraHoursLanguageItemName: string = `AddTaskModal.ExtraHours`;
    public readonly addTaskModalDeleteConfirmLanguageItemName: string = `AddTaskModal.Delete.Confirm`;
    public readonly addTaskModalChangeTaskLanguageItemName: string = `AddTaskModal.ChangeTask`;
    public readonly addTaskModalSaveTaskLanguageItemName: string = `AddTaskModal.SaveTask`;
    public readonly workDayPanelAutoDistanceLanguageItemName: string = `WorkDayPanel.AutoDistance`;
    public readonly workDayPanelWorkingHoursLanguageItemName: string = `WorkDayPanel.WorkingHours`;
    public readonly invoiceExportModalSendToNavLanguageItemName: string = `InvoiceExportModal.SendToNav`;
    public readonly addTaskModalAddTaskSubtitleLanguageItemName: string = `AddTaskModal.AddTaskSubtitle`;
    public readonly addConstructionsiteSalesPersonLanguageItemName: string = `AddConstructionsite.SalesPerson`;
    public readonly addConstructionsiteTitleLanguageItemName: string = `AddConstructionsite.Title`;
    public readonly addConstructionsiteAddSiteLanguageItemName: string = `AddConstructionsite.AddSite`;
    public readonly addConstructionsiteFlyoutLanguageItemName: string = `AddConstructionsite.Flyout`;
    public readonly addConstructionsiteRedirectLanguageItemName: string = `AddConstructionsite.Redirect`;
    public readonly addConstructionsiteToolbarAllManagersLanguageItemName: string = `AddConstructionsiteToolbar.AllManagers`;
    public readonly addConstructionsiteToolbarAllSalesPersonsLanguageItemName: string = `AddConstructionsiteToolbar.AllSalesPersons`;
    public readonly constructionSitesToolbarCustomerLanguageItemName: string = `ConstructionSitesToolbar.Customer`;
    public readonly addConstructionsiteToolbarSiteLanguageItemName: string = `AddConstructionsiteToolbar.Site`;
    public readonly addConstructionsiteToolbarAnyStatusLanguageItemName: string = `AddConstructionsiteToolbar.AnyStatus`;
    public readonly addConstructionsiteToolbarAnyTaskStatusLanguageItemName: string = `AddConstructionsiteToolbar.AnyTaskStatus`;
    public readonly addConstructionsiteToolbarAnySubTaskStatusLanguageItemName: string = `AddConstructionsiteToolbar.AnySubTaskStatus`;
    public readonly addConstructionsiteToolbarFilterLanguageItemName: string = `AddConstructionsiteToolbar.Filter`;
    public readonly addConstructionsiteToolbarClearFilterLanguageItemName: string = `AddConstructionsiteToolbar.ClearFilter`;
    public readonly constructionSitesToolBarCustomerFilterLanguageItemName: string = `ConstructionSites.ToolBar.CustomerFilter`;
    public readonly constructionSitesToolBarSiteFilterLanguageItemName: string = `ConstructionSites.ToolBar.SiteFilter`;
    public readonly constructionSitesCustomerNumberLanguageItemName: string = `ConstructionSites.CustomerNumber`;
    public readonly constructionSitesStatusLanguageItemName: string = `ConstructionSites.Status`;
    public readonly constructionSitesActivateLanguageItemName: string = `ConstructionSites.Activate`;
    public readonly constructionSitesNameLanguageItemName: string = `ConstructionSites.Name`;
    public readonly constructionSitesCommitChangesLanguageItemName: string = `ConstructionSites.CommitChanges`;
    public readonly constructionSitesCancelChangesLanguageItemName: string = `ConstructionSites.CancelChanges`;
    public readonly constructionSitesDeactivateLanguageItemName: string = `ConstructionSites.Deactivate`;
    public readonly constructionSitesCloseLanguageItemName: string = `ConstructionSites.Close`;
    public readonly addConstructionsiteManagerLanguageItemName: string = `AddConstructionsite.Manager`;
    public readonly addConstructionsiteWarehouseLanguageItemName: string = `AddConstructionsite.Warehouse`;
    public readonly addConstructionsiteOrganizationLanguageItemName: string = `AddConstructionsite.Organization`;
    public readonly constructionSitesInvoiceReferenceLanguageItemName: string = `ConstructionSites.InvoiceReference`;
    public readonly constructionSitesReferenceLanguageItemName: string = `ConstructionSites.Reference`;
    public readonly addConstructionsiteDuplicateDeviceIdLanguageItemName: string = `AddConstructionsite.DuplicateDeviceId`;
    public readonly constructionSitesSitesLanguageItemName: string = `ConstructionSites.Sites`;
    public readonly taskHoursPanelMounterLanguageItemName: string = `TaskHoursPanel.Mounter`;
    public readonly taskHoursPanelCommitChangesLanguageItemName: string = `TaskHoursPanel.CommitChanges`;
    public readonly taskHoursPanelCancelChangesLanguageItemName: string = `TaskHoursPanel.CancelChanges`;
    public readonly taskHoursPanelApproveHoursLanguageItemName: string = `TaskHoursPanel.ApproveHours`;
    public readonly taskHoursPanelDeleteHoursLanguageItemName: string = `TaskHoursPanel.DeleteHours`;
    public readonly taskHoursPanelRestoreDeletedHoursLanguageItemName: string = `TaskHoursPanel.RestoreDeletedHours`;
    public readonly taskHoursPanelDateLanguageItemName: string = `TaskHoursPanel.Date`;
    public readonly tasksPanelSentAtLanguageItemName: string = `TasksPanel.SentAt`;
    public readonly tasksPanelPreviewWorkReportLanguageItemName: string = `TasksPanel.PreviewWorkReport`;
    public readonly tasksPanelDownloadWorkReportLanguageItemName: string = `TasksPanel.DownloadWorkReport`;
    public readonly tasksPanelApproveWorkReportInvoiceLanguageItemName: string = `TasksPanel.ApproveWorkReportInvoice`;
    public readonly tasksPanelDeleteWorkReportLanguageItemName: string = `TasksPanel.DeleteWorkReport`;
    public readonly tasksPanelRestoreDeletedWorkReportLanguageItemName: string = `TasksPanel.RestoreDeletedWorkReport`;
    public readonly addConstructionsiteProjectNumberLanguageItemName: string = `AddConstructionsite.ProjectNumber`;
    public readonly tasksPanelSentToLanguageItemName: string = `TasksPanel.SentTo`;
    public readonly tasksPanelComplitionDateLanguageItemName: string = `TasksPanel.ComplitionDate`;
    public readonly constructionSitesSitesInfoLanguageItemName: string = `ConstructionSites.SitesInfo`;
    public readonly tasksPanelSendToCustomerLanguageItemName: string = `TasksPanel.SendToCustomer`;
    public readonly addMounterModalAddHoursInfoLanguageItemName: string = `AddMounterModal.AddHoursInfo`;
    public readonly salaryHoursPanelEveningLanguageItemName: string = `SalaryHoursPanel.Evening`;
    public readonly workDayPanelAutoHoursLanguageItemName: string = `WorkDayPanel.AutoHours`;
    public readonly salaryHoursPanelTotalLanguageItemName: string = `SalaryHoursPanel.Total`;
    public readonly salaryHoursPanelNormalHoursLanguageItemName: string = `SalaryHoursPanel.NormalHours`;
    public readonly salaryHoursPanelPriceLanguageItemName: string = `SalaryHoursPanel.Price`;
    public readonly salaryHoursPanelWorkingHoursLanguageItemName: string = `SalaryHoursPanel.WorkingHours`;
    public readonly salaryHoursPanelHoursLanguageItemName: string = `SalaryHoursPanel.Hours`;
    public readonly salaryExportModalSendToPayrollLanguageItemName: string = `SalaryExportModal.SendToPayroll`;
    public readonly salaryHoursPanelOvertimeFiftyLanguageItemName: string = `SalaryHoursPanel.OvertimeFifty`;
    public readonly addMounterModalNoTasksAvailableLanguageItemName: string = `AddMounterModal.NoTasksAvailable`;
    public readonly addMounterModalWorkingHoursLanguageItemName: string = `AddMounterModal.WorkingHours`;
    public readonly addMounterModalHoursLanguageItemName: string = `AddMounterModal.Hours`;
    public readonly addMounterModalTaskLanguageItemName: string = `AddMounterModal.Task`;
    public readonly checkInsPanelSignLanguageItemName: string = `CheckInsPanel.Sign`;
    public readonly checkInsPanelSignInLanguageItemName: string = `CheckInsPanel.SignIn`;
    public readonly checkInsPanelCheckInLanguageItemName: string = `CheckInsPanel.CheckIn`;
    public readonly checkInsPanelCheckOutLanguageItemName: string = `CheckInsPanel.CheckOut`;
    public readonly checkInsPanelSiteOrWarehouseLanguageItemName: string = `CheckInsPanel.SiteOrWarehouse`;
    public readonly checkInsPanelSignOutLanguageItemName: string = `CheckInsPanel.SignOut`;
    public readonly checkInsPanelCheckInAtLanguageItemName: string = `CheckInsPanel.CheckInAt`;
    public readonly workDayPanelFixedContractCostLanguageItemName: string = `WorkDayPanel.FixedContractCost`;
    public readonly addMounterModalAddHoursLanguageItemName: string = `AddMounterModal.AddHours`;
    public readonly checkInsPanelCheckInAddressLanguageItemName: string = `CheckInsPanel.CheckInAddress`;
    public readonly checkInsPanelCheckOutAtLanguageItemName: string = `CheckInsPanel.CheckOutAt`;
    public readonly checkInsPanelCheckOutAddressLanguageItemName: string = `CheckInsPanel.CheckOutAddress`;
    public readonly checkInsPanelTaskLanguageItemName: string = `CheckInsPanel.Task`;
    public readonly salaryHoursPanelOvertimeHundredLanguageItemName: string = `SalaryHoursPanel.OvertimeHundred`;
    public readonly salaryHoursPanelContractHoursLanguageItemName: string = `SalaryHoursPanel.ContractHours`;
    public readonly salaryHoursPanelMarkAsNormalLanguageItemName: string = `SalaryHoursPanel.MarkAsNormal`;
    public readonly salaryHoursPanelNightOvertimeLanguageItemName: string = `SalaryHoursPanel.NightOvertime`;
    public readonly salaryHoursPanelNightLanguageItemName: string = `SalaryHoursPanel.Night`;
    public readonly workDayPanelPassengersLanguageItemName: string = `WorkDayPanel.Passengers`;
    public readonly workDayPanelPassengersDescriptionLanguageItemName: string = `WorkDayPanel.PassengersDescription`;
    public readonly salaryHoursPanelSundayOvertimeLanguageItemName: string = `SalaryHoursPanel.SundayOvertime`;
    public readonly workDayPanelDetailsLanguageItemName: string = `WorkDayPanel.Details`;
    public readonly workDayPanelCompensationsLanguageItemName: string = `WorkDayPanel.Compensations`;
    public readonly workDayPanelContractLanguageItemName: string = `WorkDayPanel.Contract`;
    public readonly workDayPanelDetailsInfoLanguageItemName: string = `WorkDayPanel.DetailsInfo`;
    public readonly workDayPanelAddNewTaskHoursLanguageItemName: string = `WorkDayPanel.AddNewTaskHours`;
    public readonly workDayPanelWorkDayLanguageItemName: string = `WorkDayPanel.WorkDay`;
    public readonly workDayPanelDailyAllowanceLanguageItemName: string = `WorkDayPanel.DailyAllowance`;
    public readonly workDayPanelAggregateDailyAllowanceLanguageItemName: string = `WorkDayPanel.Aggregate.DailyAllowance`;
    public readonly workDayPanelOwnEquipmentLanguageItemName: string = `WorkDayPanel.OwnEquipment`;
    public readonly workDayPanelAllowanceLanguageItemName: string = `WorkDayPanel.Allowance`;
    public readonly workDayPanelEquipmentLanguageItemName: string = `WorkDayPanel.Equipment`;
    public readonly workDayPanelDistanceLanguageItemName: string = `WorkDayPanel.Distance`;
    public readonly workDayPanelDistanceInfoLanguageItemName: string = `WorkDayPanel.DistanceInfo`;
    public readonly salaryHoursPanelEveningOvertimeLanguageItemName: string = `SalaryHoursPanel.EveningOvertime`;
    public readonly workDayPanelToolbarDailyHoursLanguageItemName: string = `WorkDayPanelToolbar.DailyHours`;
    public readonly workDayPanelToolbarDailyHoursSubTextLanguageItemName: string = `WorkDayPanelToolbar.DailyHoursSubText`;
    public readonly workDayPanelToolbarMonthsLanguageItemName: string = `WorkDayPanelToolbar.Months`;
    public readonly workDayPanelToolbarPeriodsLanguageItemName: string = `WorkDayPanelToolbar.Periods`;
    public readonly workDayPanelToolbarInvoicePeriodsLanguageItemName: string = `WorkDayPanelToolbar.InvoicePeriods`;
    public readonly workDayPanelToolbarSalaryPeriodsLanguageItemName: string = `WorkDayPanelToolbar.SalaryPeriods`;
    public readonly workDayPanelToolbarAnyLanguageItemName: string = `WorkDayPanelToolbar.Any`;
    public readonly workDayPanelToolbarAnySubTextLanguageItemName: string = `WorkDayPanelToolbar.AnySubText`;
    public readonly workDayPanelToolbarConstructionSitesInfoSubTextLanguageItemName: string = `WorkDayPanelToolbar.ConstructionSitesInfoSubText`;
    public readonly workDayPanelToolbarAssignedWarehousesLanguageItemName: string = `WorkDayPanelToolbar.AssignedWarehouses`;
    public readonly workDayPanelToolbarAnySalaryHoursLanguageItemName: string = `WorkDayPanelToolbar.AnySalaryHours`;
    public readonly workDayPanelToolbarAnySalaryHoursSubTextLanguageItemName: string = `WorkDayPanelToolbar.AnySalaryHoursSubText`;
    public readonly workDayPanelToolbarApprovedByManagerLanguageItemName: string = `WorkDayPanelToolbar.ApprovedByManager`;
    public readonly workDayPanelToolbarApprovedByDirectorLanguageItemName: string = `WorkDayPanelToolbar.ApprovedByDirector`;
    public readonly workDayPanelToolbarApprovedByDirectorSubTextLanguageItemName: string = `WorkDayPanelToolbar.ApprovedByDirectorSubText`;
    public readonly workDayPanelToolbarNotApprovedByManagerLanguageItemName: string = `WorkDayPanelToolbar.NotApprovedByManager`;
    public readonly workDayPanelToolbarNotApprovedByManagerSubTextLanguageItemName: string = `WorkDayPanelToolbar.NotApprovedByManagerSubText`;
    public readonly workDayPanelToolbarNotApprovedByDirectorLanguageItemName: string = `WorkDayPanelToolbar.NotApprovedByDirector`;
    public readonly workDayPanelToolbarNotApprovedByDirectorSubTextLanguageItemName: string = `WorkDayPanelToolbar.NotApprovedByDirectorSubText`;
    public readonly workDayPanelToolbarReportTypeLanguageItemName: string = `WorkDayPanelToolbar.ReportType`;
    public readonly workDayPanelToolbarSourceLanguageItemName: string = `WorkDayPanelToolbar.Source`;
    public readonly workDayPanelToolbarApproveLanguageItemName: string = `WorkDayPanelToolbar.Approve`;
    public readonly workDayPanelToolbarDateLanguageItemName: string = `WorkDayPanelToolbar.Date`;
    public readonly workDayPanelToolbarSearchLanguageItemName: string = `WorkDayPanelToolbar.Search`;
    public readonly workDayPanelToolbarAddMounterLanguageItemName: string = `WorkDayPanelToolbar.AddMounter`;
    public readonly workDayPanelToolbarExportMepcoLanguageItemName: string = `WorkDayPanelToolbar.ExportMepco`;
    public readonly workDayPanelToolbarExportMepcoSubTextLanguageItemName: string = `WorkDayPanelToolbar.ExportMepcoSubText`;
    public readonly workDayPanelToolbarExportRowInfoLanguageItemName: string = `WorkDayPanelToolbar.ExportRowInfo`;
    public readonly workDayPanelToolbarExportTikonLanguageItemName: string = `WorkDayPanelToolbar.ExportTikon`;
    public readonly invoiceExportModalDownloadFileLanguageItemName: string = `InvoiceExportModal.DownloadFile`;
    public readonly invoiceToolbarAnyStateLanguageItemName: string = `InvoiceToolbar.AnyState`;
    public readonly invoiceToolbarInvoiceLanguageItemName: string = `InvoiceToolbar.Invoice`;
    public readonly invoiceToolbarInvoiceTitleLanguageItemName: string = `InvoiceToolbar.InvoiceTitle`;
    public readonly invoiceToolbarCustomerNameOrNumberLanguageItemName: string = `InvoiceToolbar.CustomerNameOrNumber`;
    public readonly invoiceToolbarConstructionSiteNameOrNumberLanguageItemName: string = `InvoiceToolbar.ConstructionSiteNameOrNumber`;
    public readonly invoiceToolbarNavisionLanguageItemName: string = `InvoiceToolbar.Navision`;
    public readonly invoiceToolbarNavisionTitleLanguageItemName: string = `InvoiceToolbar.NavisionTitle`;
    public readonly invoiceToolbarPageroLanguageItemName: string = `InvoiceToolbar.Pagero`;
    public readonly invoiceToolbarExportToPageroLanguageItemName: string = `InvoiceToolbar.ExportToPagero`;
    public readonly invoiceToolbarExportNavisionFormatLanguageItemName: string = `InvoiceToolbar.ExportNavisionFormat`;
    public readonly invoiceToolbarExportNavisionFormatSubTitleLanguageItemName: string = `InvoiceToolbar.ExportNavisionFormatSubTitle`;
    public readonly invoiceToolbarExportPageroFormatLanguageItemName: string = `InvoiceToolbar.ExportPageroFormat`;
    public readonly invoiceToolbarExportPageroFormatSubTitleLanguageItemName: string = `InvoiceToolbar.ExportPageroFormatSubTitle`;
    public readonly invoicesDeleteCreditInvoiceConfirmationLanguageItemName: string = `Invoices.DeleteCreditInvoiceConfirmation`;
    public readonly invoicesCreditInvoiceCreatedLanguageItemName: string = `Invoices.CreditInvoiceCreated`;
    public readonly invoicesInvoiceCustomerConfirmationLanguageItemName: string = `Invoices.InvoiceCustomerConfirmation`;
    public readonly invoicesCreditInvoiceCustomerConfirmationLanguageItemName: string = `Invoices.CreditInvoiceCustomerConfirmation`;
    public readonly invoicesExportInfoLanguageItemName: string = `Invoices.ExportInfo`;
    public readonly invoicesNothingSelectedLanguageItemName: string = `Invoices.NothingSelected`;
    public readonly invoicesSentToAccountingLanguageItemName: string = `Invoices.SentToAccounting`;
    public readonly invoicesMarkedAsExportedLanguageItemName: string = `Invoices.MarkedAsExported`;
    public readonly invoicesInformationInvoiceRowsLanguageItemName: string = `Invoices.InformationInvoiceRows`;
    public readonly invoicesReferenceLanguageItemName: string = `Invoices.Reference`;
    public readonly invoicesCostLanguageItemName: string = `Invoices.Cost`;
    public readonly invoicesInvoiceCommentLanguageItemName: string = `Invoices.InvoiceComment`;
    public readonly genericNameAndProjectLanguageItemName: string = `Generic.NameAndProject`;
    public readonly invoicesCreatedAtLanguageItemName: string = `Invoices.CreatedAt`;
    public readonly invoicesEntryLanguageItemName: string = `Invoices.Entry`;
    public readonly invoicesEntryTitleLanguageItemName: string = `Invoices.EntryTitle`;
    public readonly invoicesNetLanguageItemName: string = `Invoices.Net`;
    public readonly invoicesDueLanguageItemName: string = `Invoices.Due`;
    public readonly invoicesDueTitleLanguageItemName: string = `Invoices.DueTitle`;
    public readonly invoicesStateLanguageItemName: string = `Invoices.State`;
    public readonly invoicesSentNumberLanguageItemName: string = `Invoices.SentNumber`;
    public readonly invoicesNavLanguageItemName: string = `Invoices.Nav`;
    public readonly invoicesPreviewInvoiceLanguageItemName: string = `Invoices.PreviewInvoice`;
    public readonly invoicesDownloadInvoiceLanguageItemName: string = `Invoices.DownloadInvoice`;
    public readonly invoicesSendToPageroLanguageItemName: string = `Invoices.SendToPagero`;
    public readonly invoicesCancelInvoiceLanguageItemName: string = `Invoices.CancelInvoice`;
    public readonly invoicesListOfInvoicesLanguageItemName: string = `Invoices.ListOfInvoices`;
    public readonly invoicesInvoicesLanguageItemName: string = `Invoices.Invoices`;
    public readonly myInvoicesMyInvoicesLanguageItemName: string = `MyInvoices.MyInvoices`;
    public readonly myWorkReportsConfirmationApproveLanguageItemName: string = `MyWorkReports.Confirmation.Approve`;
    public readonly myWorkReportsConfirmationDeclineLanguageItemName: string = `MyWorkReports.Confirmation.Decline`;
    public readonly myWorkReportApprovedAtLanguageItemName: string = `MyWorkReport.ApprovedAt`;
    public readonly myWorkReportDeclineWorkReportLanguageItemName: string = `MyWorkReport.DeclineWorkReport`;
    public readonly myWorkReportMyReportLanguageItemName: string = `MyWorkReport.MyReport`;
    public readonly myWorkReportNoDataLanguageItemName: string = `MyWorkReport.NoData`;
    public readonly myAuditsApprovedAtLanguageItemName: string = `MyAudits.ApprovedAt`;
    public readonly myAuditsMyAuditLanguageItemName: string = `MyAudits.MyAudit`;
    public readonly myAuditsNoDataLanguageItemName: string = `MyAudits.NoData`;
    public readonly myAuditsActionsApproveLanguageItemName: string = `MyAudits.Actions.Approve`;
    public readonly myAuditsActionsPreviewLanguageItemName: string = `MyAudits.Actions.Preview`;
    public readonly myAuditsActionsDownloadLanguageItemName: string = `MyAudits.Actions.Download`;
    public readonly myAuditsConfirmationApproveLanguageItemName: string = `MyAudits.Confirmation.Approve`;
    public readonly myAuditsReportPreviewLanguageItemName: string = `MyAudits.ReportPreview`;
    public readonly agreementMinimumRentalDaysLanguageItemName: string = `Agreement.MinimumRentalDays`;
    public readonly agreementModuleNameLanguageItemName: string = `AgreementModule.Name`;
    public readonly addAgreementExtraTaskHourlyCostLanguageItemName: string = `AddAgreement.ExtraTaskHourlyCost`;
    public readonly addAgreementTitleLanguageItemName: string = `AddAgreement.Title`;
    public readonly addAgreementSubtitleLanguageItemName: string = `AddAgreement.Subtitle`;
    public readonly addAgreementDropdownLabelLanguageItemName: string = `AddAgreement.Dropdown.Label`;
    public readonly addAgreementNewContactPersonLanguageItemName: string = `AddAgreement.NewContactPerson`;
    public readonly addAgreementDescriptionLanguageItemName: string = `AddAgreement.Description`;
    public readonly addAgreementAddAgreementLanguageItemName: string = `AddAgreement.AddAgreement`;
    public readonly taskWidgetInProcessLanguageItemName: string = `TaskWidget.InProcess`;
    public readonly taskWidgetBlockedSplitTaskLanguageItemName: string = `TaskWidget.BlockedSplitTask`;
    public readonly taskWidgetNoTaskAssignedLanguageItemName: string = `TaskWidget.NoTaskAssigned`;
    public readonly auditQuestionInputStepOkLanguageItemName: string = `AuditQuestionInput.StepOk`;
    public readonly auditQuestionInputNeedRepairsLanguageItemName: string = `AuditQuestionInput.NeedRepairs`;
    public readonly auditQuestionInputCommentLanguageItemName: string = `AuditQuestionInput.Comment`;
    public readonly auditQuestionInputInsertCommentLanguageItemName: string = `AuditQuestionInput.InsertComment`;
    public readonly auditQuestionInputCommentRequiredLanguageItemName: string = `AuditQuestionInput.CommentRequired`;
    public readonly auditModuleNoAuditLanguageItemName: string = `AuditModule.NoAudit`;
    public readonly auditModulePassedLanguageItemName: string = `AuditModule.Passed`;
    public readonly auditModuleNotPassedLanguageItemName: string = `AuditModule.NotPassed`;
    public readonly auditModuleApprovedLanguageItemName: string = `AuditModule.Approved`;
    public readonly auditModuleNotApprovedLanguageItemName: string = `AuditModule.NotApproved`;
    public readonly auditModuleStartAuditLanguageItemName: string = `AuditModule.StartAudit`;
    public readonly auditModuleGetManualLanguageItemName: string = `AuditModule.GetManual`;
    public readonly auditModulePreviewLanguageItemName: string = `AuditModule.Preview`;
    public readonly auditModuleContinueLanguageItemName: string = `AuditModule.Continue`;
    public readonly auditModuleSentLanguageItemName: string = `AuditModule.Sent`;
    public readonly auditModuleNotSentLanguageItemName: string = `AuditModule.NotSent`;
    public readonly auditModuleEmailReceiversContactPersonLanguageItemName: string = `AuditModule.EmailReceivers.ContactPerson`;
    public readonly auditModuleEmailReceiversReceiverLanguageItemName: string = `AuditModule.EmailReceivers.Receiver`;
    public readonly auditModuleEmailReceiversNoContactPersonWarningLanguageItemName: string = `AuditModule.EmailReceivers.NoContactPersonWarning`;
    public readonly constructionSitePanelActivateConfirmationLanguageItemName: string = `ConstructionSitePanel.ActivateConfirmation`;
    public readonly constructionSitePanelOrganizationContractLanguageItemName: string = `ConstructionSitePanel.OrganizationContract`;
    public readonly constructionSitePanelOrganizationContractInvoicesSentLanguageItemName: string = `ConstructionSitePanel.OrganizationContractInvoicesSent`;
    public readonly constructionSitePanelPaymentTermsLanguageItemName: string = `ConstructionSitePanel.PaymentTerms`;
    public readonly constructionSitePanelDeactivateConfirmationLanguageItemName: string = `ConstructionSitePanel.DeactivateConfirmation`;
    public readonly subContractorsTitleLanguageItemName: string = `SubContractors.Title`;
    public readonly subContractorsAddSubcontractorLanguageItemName: string = `SubContractors.AddSubcontractor`;
    public readonly subContractorsAddNewSubcontractorLanguageItemName: string = `SubContractors.AddNewSubcontractor`;
    public readonly subContractorsSubcontractorLanguageItemName: string = `SubContractors.Subcontractor`;
    public readonly invoiceExportModalSendToPageroLanguageItemName: string = `InvoiceExportModal.SendToPagero`;
    public readonly addContactPersonModalCreateLanguageItemName: string = `AddContactPersonModal.Create`;
    public readonly organizationPanelExternalIdLanguageItemName: string = `OrganizationPanel.ExternalId`;
    public readonly addTaskModalCreateExtraModuleLanguageItemName: string = `AddTaskModal.CreateExtraModule`;
    public readonly addWorkReportModalDescriptionOfTaskLanguageItemName: string = `AddWorkReportModal.DescriptionOfTask`;
    public readonly addWorkReportModalRemoveTaskWorkReportLanguageItemName: string = `AddWorkReportModal.RemoveTaskWorkReport`;
    public readonly addWorkReportModalDateTaskCompletedLanguageItemName: string = `AddWorkReportModal.DateTaskCompleted`;
    public readonly addWorkReportModalExistingExtraTasksLanguageItemName: string = `AddWorkReportModal.ExistingExtraTasks`;
    public readonly addWorkReportModalAddCompletedExtraTaskLanguageItemName: string = `AddWorkReportModal.AddCompletedExtraTask`;
    public readonly sendWorkReportModalEmailExistsLanguageItemName: string = `SendWorkReportModal.EmailExists`;
    public readonly taskExtraChangePanelExtraChargeTypeLanguageItemName: string = `TaskExtraChangePanel.ExtraChargeType`;
    public readonly taskExtraChangeGridNoExtraChargesLanguageItemName: string = `TaskExtraChangeGrid.NoExtraCharges`;
    public readonly genericAbbreviationsHoursLanguageItemName: string = `Generic.Abbreviations.Hours`;
    public readonly genericAbbreviationsKilometersLanguageItemName: string = `Generic.Abbreviations.Kilometers`;
    public readonly genericAbbreviationsVehiclesLanguageItemName: string = `Generic.Abbreviations.Vehicles`;
    public readonly genericApprovalLanguageItemName: string = `Generic.Approval`;
    public readonly genericLoadingLanguageItemName: string = `Generic.Loading`;
    public readonly tasksPanelApproveTaskLanguageItemName: string = `TasksPanel.ApproveTask`;
    public readonly tasksPanelCreateTaskWorkReportLanguageItemName: string = `TasksPanel.CreateTaskWorkReport`;
    public readonly tasksPanelTaskHoursLanguageItemName: string = `TasksPanel.TaskHours`;
    public readonly tasksPanelTaskExtraChargesLanguageItemName: string = `TasksPanel.TaskExtraCharges`;
    public readonly tasksPanelAddExtraChargeFlyoutLanguageItemName: string = `TasksPanel.AddExtraCharge.Flyout`;
    public readonly tasksPanelAddWorkReportFlyoutLanguageItemName: string = `TasksPanel.AddWorkReport.Flyout`;
    public readonly tasksPanelAddExtraTaskFlyoutLanguageItemName: string = `TasksPanel.AddExtraTask.Flyout`;
    public readonly tasksPanelAddHoursFlyoutLanguageItemName: string = `TasksPanel.AddHours.Flyout`;
    public readonly tasksPanelFlyoutChangesSavedLanguageItemName: string = `TasksPanel.Flyout.ChangesSaved`;
    public readonly tasksPanelAddExtraChargeConfirmationLanguageItemName: string = `TasksPanel.AddExtraCharge.Confirmation`;
    public readonly tasksPanelAddExtraChargeModalTitleLanguageItemName: string = `TasksPanel.AddExtraChargeModal.Title`;
    public readonly tasksPanelAddExtraChargeModalSubtitleLanguageItemName: string = `TasksPanel.AddExtraChargeModal.Subtitle`;
    public readonly tasksPanelAddExtraChargeModalTypeLanguageItemName: string = `TasksPanel.AddExtraChargeModal.Type`;
    public readonly tasksPanelAddExtraChargeModalUnitLanguageItemName: string = `TasksPanel.AddExtraChargeModal.Unit`;
    public readonly tasksPanelAddExtraChargeModalPriceLanguageItemName: string = `TasksPanel.AddExtraChargeModal.Price`;
    public readonly tasksPanelAddExtraChargeModalAmountLanguageItemName: string = `TasksPanel.AddExtraChargeModal.Amount`;
    public readonly tasksPanelAddExtraChargeModalSubmitLanguageItemName: string = `TasksPanel.AddExtraChargeModal.Submit`;
    public readonly tasksPanelAddHoursModalAddHoursLanguageItemName: string = `TasksPanel.AddHoursModal.AddHours`;
    public readonly tasksPanelAddHoursModalNoHoursLanguageItemName: string = `TasksPanel.AddHoursModal.NoHours`;
    public readonly tasksPanelAddHoursModalConfirmationLanguageItemName: string = `TasksPanel.AddHoursModal.Confirmation`;
    public readonly constructionSiteManagementAddAgreementLanguageItemName: string = `ConstructionSiteManagement.AddAgreement`;
    public readonly constructionSiteAgreementDeactivatedLanguageItemName: string = `ConstructionSiteAgreement.Deactivated`;
    public readonly constructionSiteAgreementContactUserLanguageItemName: string = `ConstructionSiteAgreement.ContactUser`;
    public readonly addEquipmentEquipmentListLanguageItemName: string = `AddEquipment.EquipmentList`;
    public readonly genericUnlockForEditingLanguageItemName: string = `Generic.UnlockForEditing`;
    public readonly addEquipmentProductsLanguageItemName: string = `AddEquipment.Products`;
    public readonly addEquipmentProductsDescriptionLanguageItemName: string = `AddEquipment.ProductsDescription`;
    public readonly addTaskTaskNameLanguageItemName: string = `AddTask.TaskName`;
    public readonly addTaskTaskNameDescriptionLanguageItemName: string = `AddTask.TaskNameDescription`;
    public readonly addTaskStartDateLanguageItemName: string = `AddTask.StartDate`;
    public readonly addTaskStartDateDescriptionLanguageItemName: string = `AddTask.StartDateDescription`;
    public readonly addTaskTaskDescriptionLanguageItemName: string = `AddTask.TaskDescription`;
    public readonly addTaskTaskDescriptionDescriptionLanguageItemName: string = `AddTask.TaskDescriptionDescription`;
    public readonly allowanceNoDailyLanguageItemName: string = `Allowance.NoDaily`;
    public readonly allowanceOwnToolsLanguageItemName: string = `Allowance.OwnTools`;
    public readonly allowanceOwnToolsDescriptionLanguageItemName: string = `Allowance.OwnToolsDescription`;
    public readonly allowanceGetManualLanguageItemName: string = `Allowance.GetManual`;
    public readonly approveCombineLanguageItemName: string = `Approve.Combine`;
    public readonly approveCombineDescriptionLanguageItemName: string = `Approve.CombineDescription`;
    public readonly approveWorkReportNameLanguageItemName: string = `Approve.WorkReportName`;
    public readonly approveWorkReportNameDescriptionLanguageItemName: string = `Approve.WorkReportNameDescription`;
    public readonly approveGetManualLanguageItemName: string = `Approve.GetManual`;
    public readonly dashboardSwitchSiteLanguageItemName: string = `Dashboard.SwitchSite`;
    public readonly dashboardSwitchSiteDescriptionLanguageItemName: string = `Dashboard.SwitchSiteDescription`;
    public readonly dashboardCreateTaskDescriptionLanguageItemName: string = `Dashboard.CreateTaskDescription`;
    public readonly dashboardCreateTaskForCurrentSiteDescriptionLanguageItemName: string = `Dashboard.CreateTaskForCurrentSiteDescription`;
    public readonly dashboardSelectTaskLanguageItemName: string = `Dashboard.SelectTask`;
    public readonly dashboardSwitchTaskLanguageItemName: string = `Dashboard.SwitchTask`;
    public readonly dashboardSwitchTaskDescriptionLanguageItemName: string = `Dashboard.SwitchTaskDescription`;
    public readonly rentaTasksDashboardGetManualLanguageItemName: string = `RentaTasks.Dashboard.GetManual`;
    public readonly dashboardFlyoutSiteCreatedLanguageItemName: string = `Dashboard.Flyout.SiteCreated`;
    public readonly distanceTravelDistanceLanguageItemName: string = `Distance.TravelDistance`;
    public readonly distanceTravelDistanceDescriptionLanguageItemName: string = `Distance.TravelDistanceDescription`;
    public readonly distanceSignOutLanguageItemName: string = `Distance.SignOut`;
    public readonly distanceGetManualLanguageItemName: string = `Distance.GetManual`;
    public readonly workDayAllowanceDistanceLanguageItemName: string = `WorkDayAllowance.Distance`;
    public readonly enumExtraChargeTypeAssemblyLanguageItemName: string = `Enum.ExtraChargeType.Assembly`;
    public readonly enumExtraChargeTypeCoverSalesLanguageItemName: string = `Enum.ExtraChargeType.CoverSales`;
    public readonly enumExtraChargeTypeDeliveryLanguageItemName: string = `Enum.ExtraChargeType.Delivery`;
    public readonly enumExtraChargeTypeDismantleLanguageItemName: string = `Enum.ExtraChargeType.Dismantle`;
    public readonly enumExtraChargeTypeOtherEquipmentSalesLanguageItemName: string = `Enum.ExtraChargeType.OtherEquipmentSales`;
    public readonly enumExtraChargeTypeReturnLanguageItemName: string = `Enum.ExtraChargeType.Return`;
    public readonly enumExtraChargeTypeScaffoldingEquipmentSalesLanguageItemName: string = `Enum.ExtraChargeType.ScaffoldingEquipmentSales`;
    public readonly enumExtraChargeUnitHourLanguageItemName: string = `Enum.ExtraChargeUnit.Hour`;
    public readonly enumExtraChargeUnitM2LanguageItemName: string = `Enum.ExtraChargeUnit.M2`;
    public readonly enumExtraChargeUnitPcsLanguageItemName: string = `Enum.ExtraChargeUnit.Pcs`;
    public readonly subcontractorCreatedFlyoutLanguageItemName: string = `SubcontractorCreated.Flyout`;
    public readonly subcontractorPanelSubcontractorAddedFlyoutLanguageItemName: string = `SubcontractorPanel.SubcontractorAdded.Flyout`;
    public readonly subcontractorPanelSubcontractorRestoredFlyoutLanguageItemName: string = `SubcontractorPanel.SubcontractorRestored.Flyout`;
    public readonly subcontractorPanelDeleteSubcontractorLanguageItemName: string = `SubcontractorPanel.DeleteSubcontractor`;
    public readonly subcontractorPanelRestoreSubcontractorLanguageItemName: string = `SubcontractorPanel.RestoreSubcontractor`;
    public readonly validatorsLengthLanguageItemName: string = `Validators.Length`;
    public readonly splitModuleTitleLanguageItemName: string = `Split.ModuleTitle`;
    public readonly splitModuleSubTitleLanguageItemName: string = `Split.ModuleSubTitle`;
    public readonly tasksMountersLanguageItemName: string = `Tasks.Mounters`;
    public readonly tasksTypeLanguageItemName: string = `Tasks.Type`;
    public readonly tasksNameLanguageItemName: string = `Tasks.Name`;
    public readonly tasksStartLanguageItemName: string = `Tasks.Start`;
    public readonly tasksDoneLanguageItemName: string = `Tasks.Done`;
    public readonly tasksHoursLanguageItemName: string = `Tasks.Hours`;
    public readonly tasksExtraHoursLanguageItemName: string = `Tasks.ExtraHours`;
    public readonly tasksDateLanguageItemName: string = `Tasks.Date`;
    public readonly tasksToolbarSearchLanguageItemName: string = `TasksToolbar.Search`;
    public readonly tasksToolbarDateLanguageItemName: string = `TasksToolbar.Date`;
    public readonly tasksToolbarClearFiltersLanguageItemName: string = `TasksToolbar.ClearFilters`;
    public readonly componentSignatureWidgetClearLanguageItemName: string = `Component.SignatureWidget.Clear`;
    public readonly componentSignatureWidgetDoneLanguageItemName: string = `Component.SignatureWidget.Done`;
    public readonly componentModalSaveChangesLanguageItemName: string = `Component.Modal.SaveChanges`;
    public readonly componentModalCloseLanguageItemName: string = `Component.Modal.Close`;
    public readonly componentPageContainerPageHelpLanguageItemName: string = `Component.PageContainer.PageHelp`;
    public readonly subcontractorWorkDayPanelSubcontractorsLanguageItemName: string = `SubcontractorWorkDayPanel.Subcontractors`;
    public readonly subcontractorWorkDayPanelManagersLanguageItemName: string = `SubcontractorWorkDayPanel.Managers`;
    public readonly subcontractorWorkDayPanelMountersLanguageItemName: string = `SubcontractorWorkDayPanel.Mounters`;
    public readonly imageModalPreviewNotSupportedLanguageItemName: string = `ImageModal.PreviewNotSupported`;
    public readonly imageModalDownloadLanguageItemName: string = `ImageModal.Download`;
    public readonly selectTaskDropdownTaskLabelLanguageItemName: string = `SelectTask.DropdownTask.Label`;
    public readonly selectTaskDropdownTaskDescriptionLanguageItemName: string = `SelectTask.DropdownTask.Description`;
    public readonly selectTaskGetManualLanguageItemName: string = `SelectTask.GetManual`;
    public readonly selectTaskFetchTasksErrorLanguageItemName: string = `SelectTask.FetchTasks.Error`;
    public readonly selectOrganizationDropdownOrganizationLabelLanguageItemName: string = `SelectOrganization.DropdownOrganization.Label`;
    public readonly selectOrganizationDropdownOrganizationDescriptionLanguageItemName: string = `SelectOrganization.DropdownOrganization.Description`;
    public readonly selectOrganizationGetManualLanguageItemName: string = `SelectOrganization.GetManual`;
    public readonly componentNavigationWidgetPreviousLanguageItemName: string = `Component.NavigationWidget.Previous`;
    public readonly componentNavigationWidgetReturnToPreviousLanguageItemName: string = `Component.NavigationWidget.ReturnToPrevious`;
    public readonly componentNavigationWidgetNextLanguageItemName: string = `Component.NavigationWidget.Next`;
    public readonly componentNavigationWidgetGoToNextLanguageItemName: string = `Component.NavigationWidget.GoToNext`;
    public readonly taskAdditionalEquipmentsLanguageItemName: string = `Task.AdditionalEquipments`;
    public readonly taskAdditionalEquipmentsDescriptionLanguageItemName: string = `Task.AdditionalEquipmentsDescription`;
    public readonly taskHoursLanguageItemName: string = `Task.Hours`;
    public readonly taskHoursDescriptionLanguageItemName: string = `Task.HoursDescription`;
    public readonly taskInProgressLanguageItemName: string = `Task.InProgress`;
    public readonly taskDoneLanguageItemName: string = `Task.Done`;
    public readonly taskTaskStatusLanguageItemName: string = `Task.TaskStatus`;
    public readonly taskTaskStatusDescriptionLanguageItemName: string = `Task.TaskStatusDescription`;
    public readonly taskApproveLanguageItemName: string = `Task.Approve`;
    public readonly taskApproveDescriptionLanguageItemName: string = `Task.ApproveDescription`;
    public readonly taskConfirmLanguageItemName: string = `Task.Confirm`;
    public readonly taskGetManualLanguageItemName: string = `Task.GetManual`;
    public readonly selectConstructionSiteGetManualLanguageItemName: string = `SelectConstructionSite.GetManual`;
    public readonly selectConstructionSiteConstructionSiteLanguageItemName: string = `SelectConstructionSite.ConstructionSite`;
    public readonly selectConstructionSiteConstructionSiteDescriptionLanguageItemName: string = `SelectConstructionSite.ConstructionSiteDescription`;
    public readonly signatureApprovalTypeLanguageItemName: string = `Signature.ApprovalType`;
    public readonly signatureApprovalTypeDescriptionLanguageItemName: string = `Signature.ApprovalTypeDescription`;
    public readonly signatureSignatureLanguageItemName: string = `Signature.Signature`;
    public readonly signatureSignatureDescriptionLanguageItemName: string = `Signature.SignatureDescription`;
    public readonly signatureGetManualLanguageItemName: string = `Signature.GetManual`;
    public readonly qrWidgetScanErrorLanguageItemName: string = `QrWidget.Scan.Error`;
    public readonly adminGridNoInvitationsTextLanguageItemName: string = `Admin.Grid.NoInvitationsText`;
    public readonly adminButtonResendInvitationLanguageItemName: string = `Admin.Button.ResendInvitation`;
    public readonly adminButtonResetPasswordLanguageItemName: string = `Admin.Button.ResetPassword`;
    public readonly adminLabelAuthenticationTypeLanguageItemName: string = `Admin.Label.AuthenticationType`;
    public readonly enumAuthTypeEmailLanguageItemName: string = `Enum.AuthType.Email`;
    public readonly enumAuthTypePhoneLanguageItemName: string = `Enum.AuthType.Phone`;
    public readonly adminTabInvitationsLanguageItemName: string = `Admin.Tab.Invitations`;
    public readonly adminConfirmationButtonResetPasswordLanguageItemName: string = `Admin.ConfirmationButton.ResetPassword`;
    public readonly adminConfirmationButtonResendInvitationLanguageItemName: string = `Admin.ConfirmationButton.ResendInvitation`;
    public readonly adminAlertUserPasswordInfoLanguageItemName: string = `Admin.Alert.UserPasswordInfo`;
    public readonly adminGridCreatedByLanguageItemName: string = `Admin.Grid.CreatedBy`;
    public readonly adminGridTypeLanguageItemName: string = `Admin.Grid.Type`;
    public readonly adminGridCreatedAtLanguageItemName: string = `Admin.Grid.CreatedAt`;
    public readonly adminGridExpiresAtLanguageItemName: string = `Admin.Grid.ExpiresAt`;
    public readonly adminGridProcessedAtLanguageItemName: string = `Admin.Grid.ProcessedAt`;
    public readonly adminGridReusableLanguageItemName: string = `Admin.Grid.Reusable`;
    public readonly adminGridAuthTypeLanguageItemName: string = `Admin.Grid.AuthType`;
    public readonly organizationPanelExternalAddressLanguageItemName: string = `OrganizationPanel.ExternalAddress`;
    public readonly organizationPanelNameLanguageItemName: string = `OrganizationPanel.Name`;
    public readonly organizationPanelTransactionIdentifierLanguageItemName: string = `OrganizationPanel.TransactionIdentifier`;
    public readonly organizationPanelIntermediatorLanguageItemName: string = `OrganizationPanel.Intermediator`;
    public readonly organizationPanelVirtualAddressLanguageItemName: string = `OrganizationPanel.VirtualAddress`;
    public readonly adminAlertMessageAccountSavedLanguageItemName: string = `Admin.AlertMessage.AccountSaved`;
    public readonly adminAlertErrorAccountExistLanguageItemName: string = `Admin.AlertError.AccountExist`;
    public readonly adminAlertErrorWorkCardIdExistsLanguageItemName: string = `Admin.AlertError.WorkCardIdExists`;
    public readonly adminAlertErrorPhoneNumberInvalidLanguageItemName: string = `Admin.AlertError.PhoneNumberInvalid`;
    public readonly forgotPasswordUsernameInputLanguageItemName: string = `ForgotPassword.UsernameInput`;
    public readonly enumInvitationTypeInvitationLanguageItemName: string = `Enum.InvitationType.Invitation`;
    public readonly enumInvitationTypeResetPasswordLanguageItemName: string = `Enum.InvitationType.ResetPassword`;
    public readonly enumInvitationTypeForgotPasswordLanguageItemName: string = `Enum.InvitationType.ForgotPassword`;
    public readonly adminConfirmationButtonRollbackLanguageItemName: string = `Admin.ConfirmationButton.Rollback`;
    public readonly workDayPanelNoReportedHoursLanguageItemName: string = `WorkDayPanel.NoReportedHours`;
    public readonly workDayPanelSiteOrWarehouseColumnTitleLanguageItemName: string = `WorkDayPanel.SiteOrWarehouseColumn.Title`;
    public readonly knownSettingsMileagePriceLanguageItemName: string = `KnownSettings.MileagePrice`;
    public readonly knownSettingsHourPriceLanguageItemName: string = `KnownSettings.HourPrice`;
    public readonly locationPickerModalTitleLanguageItemName: string = `LocationPickerModal.Title`;
    public readonly locationPickerModalSubtitleLanguageItemName: string = `LocationPickerModal.Subtitle`;
    public readonly locationPickerModalSetLocationLanguageItemName: string = `LocationPickerModal.SetLocation`;
    public readonly tasksPageTaskStatusAnyLanguageItemName: string = `TasksPage.TaskStatus.Any`;
    public readonly tasksPageTaskStatusAnySubtextLanguageItemName: string = `TasksPage.TaskStatus.Any.Subtext`;
    public readonly tasksPageTaskStatusFurtherLanguageItemName: string = `TasksPage.TaskStatus.Further`;
    public readonly tasksPageTaskStatusFurtherSubtextLanguageItemName: string = `TasksPage.TaskStatus.Further.Subtext`;
    public readonly tasksPageTaskStatusOngoingLanguageItemName: string = `TasksPage.TaskStatus.Ongoing`;
    public readonly tasksPageTaskStatusOngoingSubtextLanguageItemName: string = `TasksPage.TaskStatus.Ongoing.Subtext`;
    public readonly tasksPageTaskStatusLanguageItemName: string = `TasksPage.TaskStatus`;
    public readonly tasksPageNotAssignedLanguageItemName: string = `TasksPage.NotAssigned`;
    public readonly confirmationDialogCommentLanguageItemName: string = `ConfirmationDialog.Comment`;
    public readonly componentConfirmationDialogAreYouSureLanguageItemName: string = `Component.ConfirmationDialog.AreYouSure`;
    public readonly rentaTasksControllerSignInExpirationAlertLanguageItemName: string = `RentaTasks.Controller.SignInExpirationAlert`;
    public readonly widgetPwaInstallLanguageItemName: string = `Widget.Pwa.Install`;
    public readonly widgetPwaDescriptionLanguageItemName: string = `Widget.Pwa.Description`;
    public readonly adminOrganizationContractsLabelLanguageItemName: string = `Admin.OrganizationContracts.Label`;
    public readonly tasksPanelAddExtraChargeModalDescriptionLanguageItemName: string = `TasksPanel.AddExtraChargeModal.Description`;
    public readonly addWorkReportModalDeleteConfirmLanguageItemName: string = `AddWorkReportModal.Delete.Confirm`;
    public readonly constructionSitesConfirmationActivateSiteLanguageItemName: string = `ConstructionSites.Confirmation.ActivateSite`;
    public readonly constructionSitesConfirmationDeactivateSiteLanguageItemName: string = `ConstructionSites.Confirmation.DeactivateSite`;
    public readonly addConstructionSiteInvoiceReferenceLanguageItemName: string = `AddConstructionSite.InvoiceReference`;
    public readonly addConstructionSiteReferenceLanguageItemName: string = `AddConstructionSite.Reference`;
    public readonly addConstructionSiteHourPriceLanguageItemName: string = `AddConstructionSite.HourPrice`;
    public readonly addConstructionSiteMileagePriceLanguageItemName: string = `AddConstructionSite.MileagePrice`;
    public readonly workOrdersShowDetailsTitleLanguageItemName: string = `WorkOrders.ShowDetailsTitle`;
    public readonly workOrderEquipmentNameLanguageItemName: string = `WorkOrderEquipment.Name`;
    public readonly workOrderEquipmentDescriptionLanguageItemName: string = `WorkOrderEquipment.Description`;
    public readonly workOrderEquipmentAmountLanguageItemName: string = `WorkOrderEquipment.Amount`;
    public readonly workOrderEquipmentAddProductLanguageItemName: string = `WorkOrderEquipment.AddProduct`;
    public readonly workOrdersCustomerGridHeaderLanguageItemName: string = `WorkOrders.CustomerGridHeader`;
    public readonly workOrdersCustomerApproverLanguageItemName: string = `WorkOrders.CustomerApprover`;
    public readonly workOrdersCustomerOrdererLanguageItemName: string = `WorkOrders.CustomerOrderer`;
    public readonly workOrdersManagerLanguageItemName: string = `WorkOrders.Manager`;
    public readonly workOrdersInvoiceReferenceLanguageItemName: string = `WorkOrders.InvoiceReference`;
    public readonly componentHoursWidgetHoursSpentLanguageItemName: string = `Component.HoursWidget.HoursSpent`;
    public readonly componentHoursWidgetAddOvertimeLanguageItemName: string = `Component.HoursWidget.AddOvertime`;
    public readonly componentHoursWidgetNormalHoursLanguageItemName: string = `Component.HoursWidget.NormalHours`;
    public readonly workOrdersEquipmentsTabTitleLanguageItemName: string = `WorkOrders.EquipmentsTab.Title`;
    public readonly workOrdersHoursTabTitleLanguageItemName: string = `WorkOrders.HoursTab.Title`;
    public readonly workOrderDetailsAddHoursLanguageItemName: string = `WorkOrderDetails.AddHours`;
    public readonly workOrderDetailsHoursGridDayLanguageItemName: string = `WorkOrderDetails.HoursGrid.Day`;
    public readonly workOrderDetailsHoursGridUserLanguageItemName: string = `WorkOrderDetails.HoursGrid.User`;
    public readonly workOrderDetailsHoursGridHoursHeaderLanguageItemName: string = `WorkOrderDetails.HoursGrid.HoursHeader`;
    public readonly workOrderDetailsHoursGridNormalHoursLanguageItemName: string = `WorkOrderDetails.HoursGrid.NormalHours`;
    public readonly workOrderDetailsHoursGridOverTime50LanguageItemName: string = `WorkOrderDetails.HoursGrid.OverTime50`;
    public readonly workOrderDetailsHoursGridOverTime100LanguageItemName: string = `WorkOrderDetails.HoursGrid.OverTime100`;
    public readonly workOrderEquipmentPriceLanguageItemName: string = `WorkOrderEquipment.Price`;
    public readonly workOrderDetailsHoursGridPriceLanguageItemName: string = `WorkOrderDetailsHoursGrid.Price`;
    public readonly summaryWidgetTitleLanguageItemName: string = `SummaryWidget.Title`;
    public readonly summaryWidgetOrdererLanguageItemName: string = `SummaryWidget.Orderer`;
    public readonly summaryWidgetApproverLanguageItemName: string = `SummaryWidget.Approver`;
    public readonly summaryWidgetButtonCreateApproverLanguageItemName: string = `SummaryWidget.Button.CreateApprover`;
    public readonly summaryWidgetWorkOrderNameLanguageItemName: string = `SummaryWidget.WorkOrderName`;
    public readonly summaryWidgetWorkOrderDescriptionLanguageItemName: string = `SummaryWidget.WorkOrderDescription`;
    public readonly genericNoDataLanguageItemName: string = `Generic.NoData`;
    public readonly createContractPersonModalSubtitleLanguageItemName: string = `CreateContractPersonModal.Subtitle`;
    public readonly workOrdersApprovalTypeLanguageItemName: string = `WorkOrders.ApprovalType`;
    public readonly workOrdersSentAtLanguageItemName: string = `WorkOrders.SentAt`;
    public readonly workOrdersApproveActionLanguageItemName: string = `WorkOrders.ApproveAction`;
    public readonly workOrdersDeclineActionLanguageItemName: string = `WorkOrders.DeclineAction`;
    public readonly workOrdersPageTitleLanguageItemName: string = `WorkOrders.Page.Title`;
    public readonly workOrdersActiveListTitleLanguageItemName: string = `WorkOrders.ActiveList.Title`;
    public readonly workOrdersActiveListNoOrdersLanguageItemName: string = `WorkOrders.ActiveList.NoOrders`;
    public readonly workOrdersCompletedListTitleLanguageItemName: string = `WorkOrders.CompletedList.Title`;
    public readonly workOrdersCompletedListNoOrdersLanguageItemName: string = `WorkOrders.CompletedList.NoOrders`;
    public readonly workOrdersFiltersNameLanguageItemName: string = `WorkOrders.Filters.Name`;
    public readonly workOrdersFiltersStatusesLanguageItemName: string = `WorkOrders.Filters.Statuses`;
    public readonly workOrdersFiltersCustomerLanguageItemName: string = `WorkOrders.Filters.Customer`;
    public readonly workOrdersFiltersConstructionSiteLanguageItemName: string = `WorkOrders.Filters.ConstructionSite`;
    public readonly workOrdersFiltersFromLanguageItemName: string = `WorkOrders.Filters.From`;
    public readonly workOrdersFiltersToLanguageItemName: string = `WorkOrders.Filters.To`;
    public readonly workOrdersFiltersDateLanguageItemName: string = `WorkOrders.Filters.Date`;
    public readonly workOrdersFiltersButtonApplyLanguageItemName: string = `WorkOrders.FiltersButton.Apply`;
    public readonly workOrdersFiltersButtonClearLanguageItemName: string = `WorkOrders.FiltersButton.Clear`;
    public readonly enumWorkOrderStatusCreatedLanguageItemName: string = `Enum.WorkOrderStatus.Created`;
    public readonly enumWorkOrderStatusInProgressLanguageItemName: string = `Enum.WorkOrderStatus.InProgress`;
    public readonly enumWorkOrderStatusCompletedLanguageItemName: string = `Enum.WorkOrderStatus.Completed`;
    public readonly enumWorkOrderStatusApprovedByManagerLanguageItemName: string = `Enum.WorkOrderStatus.ApprovedByManager`;
    public readonly enumWorkOrderStatusDeclinedByManagerLanguageItemName: string = `Enum.WorkOrderStatus.DeclinedByManager`;
    public readonly enumWorkOrderStatusSentToCustomerLanguageItemName: string = `Enum.WorkOrderStatus.SentToCustomer`;
    public readonly enumWorkOrderStatusApprovedByCustomerLanguageItemName: string = `Enum.WorkOrderStatus.ApprovedByCustomer`;
    public readonly enumWorkOrderStatusDeclinedByCustomerLanguageItemName: string = `Enum.WorkOrderStatus.DeclinedByCustomer`;
    public readonly enumWorkOrderStatusInvoicedLanguageItemName: string = `Enum.WorkOrderStatus.Invoiced`;
    public readonly enumWorkOrderStatusDeletedLanguageItemName: string = `Enum.WorkOrderStatus.Deleted`;
    public readonly enumWorkOrderStatusUnknownLanguageItemName: string = `Enum.WorkOrderStatus.Unknown`;
    public readonly enumTaskStatusFilterUnscheduledLanguageItemName: string = `Enum.TaskStatusFilter.Unscheduled`;
    public readonly enumTaskStatusFilterInProgressLanguageItemName: string = `Enum.TaskStatusFilter.InProgress`;
    public readonly enumTaskStatusFilterUpcomingLanguageItemName: string = `Enum.TaskStatusFilter.Upcoming`;
    public readonly enumTaskStatusFilterCompletedLanguageItemName: string = `Enum.TaskStatusFilter.Completed`;
    public readonly enumTaskStatusFilterSentToCustomerLanguageItemName: string = `Enum.TaskStatusFilter.SentToCustomer`;
    public readonly enumTaskStatusFilterApprovedByCustomerLanguageItemName: string = `Enum.TaskStatusFilter.ApprovedByCustomer`;
    public readonly enumTaskStatusFilterDeclinedByCustomerLanguageItemName: string = `Enum.TaskStatusFilter.DeclinedByCustomer`;
    public readonly enumTaskStatusFilterReadyForInvoicingLanguageItemName: string = `Enum.TaskStatusFilter.ReadyForInvoicing`;
    public readonly workOrdersFiltersModalTitleActiveLanguageItemName: string = `WorkOrdersFiltersModal.Title.Active`;
    public readonly workOrdersFiltersModalTitleCompletedLanguageItemName: string = `WorkOrdersFiltersModal.Title.Completed`;
    public readonly workOrdersModalActionsActivateLanguageItemName: string = `WorkOrders.Modal.Actions.Activate`;
    public readonly workOrdersModalActionsCompleteLanguageItemName: string = `WorkOrders.Modal.Actions.Complete`;
    public readonly workOrdersModalActionsEditLanguageItemName: string = `WorkOrders.Modal.Actions.Edit`;
    public readonly workOrdersModalActionsApproveLanguageItemName: string = `WorkOrders.Modal.Actions.Approve`;
    public readonly workOrdersActionsModalTitleLanguageItemName: string = `WorkOrdersActionsModal.Title`;
    public readonly workOrdersAlertMessageWorkOrderActivatedLanguageItemName: string = `WorkOrders.AlertMessage.WorkOrderActivated`;
    public readonly workOrdersAlertMessageWorkOrderCompletedLanguageItemName: string = `WorkOrders.AlertMessage.WorkOrderCompleted`;
    public readonly workOrdersDefaultPricesGroupLanguageItemName: string = `WorkOrders.DefaultPricesGroup`;
    public readonly workOrdersHourPriceLanguageItemName: string = `WorkOrders.HourPrice`;
    public readonly workOrdersMileagePriceLanguageItemName: string = `WorkOrders.MileagePrice`;
    public readonly rentaTasksControllerNewWorkOrderNameLanguageItemName: string = `RentaTasksController.NewWorkOrderName`;
    public readonly rentaTasksControllerAlertsCreatedLanguageItemName: string = `RentaTasksController.Alerts.Created`;
    public readonly rentaTasksControllerAlertsSignOutFromSiteLanguageItemName: string = `RentaTasksController.Alerts.SignOutFromSite`;
    public readonly rentaTasksControllerAlertsApprovedLanguageItemName: string = `RentaTasksController.Alerts.Approved`;
    public readonly rentaTasksControllerAlertsSentToCustomerLanguageItemName: string = `RentaTasksController.Alerts.SentToCustomer`;
    public readonly rentaTasksControllerStepsTitleHoursAndDistanceLanguageItemName: string = `RentaTasksController.Steps.TitleHoursAndDistance`;
    public readonly rentaTasksControllerStepsTitleApprovingLanguageItemName: string = `RentaTasksController.Steps.TitleApproving`;
    public readonly rentaTasksControllerStepsTitleSummaryLanguageItemName: string = `RentaTasksController.Steps.TitleSummary`;
    public readonly dailyHoursModalSubtitleLanguageItemName: string = `DailyHoursModal.Subtitle`;
    public readonly dailyHoursModalLabelsMounterLanguageItemName: string = `DailyHoursModal.Labels.Mounter`;
    public readonly dailyHoursModalLabelsDateLanguageItemName: string = `DailyHoursModal.Labels.Date`;
    public readonly dailyHoursModalLabelsNormalHoursLanguageItemName: string = `DailyHoursModal.Labels.NormalHours`;
    public readonly dailyHoursModalLabelsOvertime50HoursLanguageItemName: string = `DailyHoursModal.Labels.Overtime50Hours`;
    public readonly dailyHoursModalLabelsOvertime100HoursLanguageItemName: string = `DailyHoursModal.Labels.Overtime100Hours`;
    public readonly dailyHoursWidgetLabelLanguageItemName: string = `DailyHoursWidget.Label`;
    public readonly dailyHoursWidgetDescriptionLanguageItemName: string = `DailyHoursWidget.Description`;
    public readonly dailyHoursWidgetButtonsAddHoursLanguageItemName: string = `DailyHoursWidget.Buttons.AddHours`;
    public readonly dailyHoursWidgetLabelsNormalLanguageItemName: string = `DailyHoursWidget.Labels.Normal`;
    public readonly distanceModalSubtitleLanguageItemName: string = `DistanceModal.Subtitle`;
    public readonly distanceModalLabelsDateLanguageItemName: string = `DistanceModal.Labels.Date`;
    public readonly distanceModalLabelsVehiclesLanguageItemName: string = `DistanceModal.Labels.Vehicles`;
    public readonly distanceModalLabelsValueLanguageItemName: string = `DistanceModal.Labels.Value`;
    public readonly distanceWidgetLabelLanguageItemName: string = `DistanceWidget.Label`;
    public readonly distanceWidgetDescriptionLanguageItemName: string = `DistanceWidget.Description`;
    public readonly distanceWidgetButtonsAddKilometersLanguageItemName: string = `DistanceWidget.Buttons.AddKilometers`;
    public readonly workOrderLabelsMyHoursLanguageItemName: string = `WorkOrder.Labels.MyHours`;
    public readonly summaryWidgetLabelsDistanceLanguageItemName: string = `SummaryWidget.Labels.Distance`;
    public readonly summaryWidgetLabelsHoursLanguageItemName: string = `SummaryWidget.Labels.Hours`;
    public readonly summaryManualLanguageItemName: string = `Summary.Manual`;
    public readonly workHoursWidgetSummaryLanguageItemName: string = `WorkHoursWidget.Summary`;
    public readonly assignMountersManualLanguageItemName: string = `AssignMounters.Manual`;
    public readonly checkInsPanelNoDataTextLanguageItemName: string = `CheckInsPanel.NoDataText`;
    public readonly addMounterModalLabelsOvertime50HoursLanguageItemName: string = `AddMounterModal.Labels.Overtime50Hours`;
    public readonly addMounterModalLabelsOvertime100HoursLanguageItemName: string = `AddMounterModal.Labels.Overtime100Hours`;
    public readonly workOrdersValidationErrorApproverCreationRejectedLanguageItemName: string = `WorkOrders.ValidationError.ApproverCreationRejected`;
    public readonly workOrdersApprovedAlertLanguageItemName: string = `WorkOrders.Approved.Alert`;
    public readonly sendWorkOrderModalButtonSendOrApproveLanguageItemName: string = `SendWorkOrderModal.Button.SendOrApprove`;
    public readonly approveWorkReportTitleLanguageItemName: string = `ApproveWorkReport.Title`;
    public readonly workOrdersOwnerSelectConstructionSiteLanguageItemName: string = `WorkOrders.Owner.SelectConstructionSite`;
    public readonly workOrdersActionsLockLanguageItemName: string = `WorkOrders.Actions.Lock`;
    public readonly workOrdersActionsInvoiceLanguageItemName: string = `WorkOrders.Actions.Invoice`;
    public readonly workOrdersActionsSendLanguageItemName: string = `WorkOrders.Actions.Send`;
    public readonly constructionSiteManagementTabsWorkOrdersLanguageItemName: string = `ConstructionSiteManagement.Tabs.WorkOrders`;
    public readonly constructionSiteManagementTabsContractLanguageItemName: string = `ConstructionSiteManagement.Tabs.Contract`;
    public readonly constructionSitePanelExternalAddressLanguageItemName: string = `ConstructionSitePanel.ExternalAddress`;
    public readonly constructionSitePanelExternalNameLanguageItemName: string = `ConstructionSitePanel.ExternalName`;
    public readonly dashboardGetManualLanguageItemName: string = `Dashboard.GetManual`;
    public readonly constructionSiteManagementGetManualLanguageItemName: string = `ConstructionSiteManagement.GetManual`;
    public readonly roleNameManagerLanguageItemName: string = `RoleName.Manager`;
    public readonly roleNameBusinessManagerLanguageItemName: string = `RoleName.BusinessManager`;
    public readonly workOrdersPanelNewWorkOrderLanguageItemName: string = `WorkOrdersPanel.NewWorkOrder`;
    public readonly rentaTasksWorkOrdersGetManualLanguageItemName: string = `RentaTasks.WorkOrders.GetManual`;
    public readonly workOrderActionsConfirmCompletedActivationLanguageItemName: string = `WorkOrder.Actions.ConfirmCompletedActivation`;
    public readonly workOrderActionsConfirmActivationLanguageItemName: string = `WorkOrder.Actions.ConfirmActivation`;
    public readonly workOrderActionsConfirmCompletionLanguageItemName: string = `WorkOrder.Actions.ConfirmCompletion`;
    public readonly workOrderActionsUnlockLanguageItemName: string = `WorkOrder.Actions.Unlock`;
    public readonly workOrderActionsConfirmInvoiceLanguageItemName: string = `WorkOrder.Actions.ConfirmInvoice`;
    public readonly sendWorkOrderModalButtonAssignLanguageItemName: string = `SendWorkOrderModal.Button.Assign`;
    public readonly sendWorkOrderModalButtonTooltipAssignLanguageItemName: string = `SendWorkOrderModal.Button.Tooltip.Assign`;
    public readonly sendWorkOrderModalApproverTitleLanguageItemName: string = `SendWorkOrderModal.Approver.Title`;
    public readonly sendWorkOrderModalApproverSubtitleLanguageItemName: string = `SendWorkOrderModal.Approver.Subtitle`;
    public readonly sendWorkOrderModalOrdererTitleLanguageItemName: string = `SendWorkOrderModal.Orderer.Title`;
    public readonly sendWorkOrderModalOrdererSubtitleLanguageItemName: string = `SendWorkOrderModal.Orderer.Subtitle`;
    public readonly workOrdersCustomerApproverActionTooltipLanguageItemName: string = `WorkOrders.CustomerApprover.Action.Tooltip`;
    public readonly workOrdersCustomerOrdererActionTooltipLanguageItemName: string = `WorkOrders.CustomerOrderer.Action.Tooltip`;
    public readonly workOrdersGridNoDataTextLanguageItemName: string = `WorkOrders.Grid.NoDataText`;
    public readonly workDayPanelGridAggregatesNoDataTextLanguageItemName: string = `WorkDayPanel.Grid.Aggregates.NoDataText`;
    public readonly workOrderDetailsPanelGridProductUnitLanguageItemName: string = `WorkOrderDetailsPanel.Grid.ProductUnit`;
    public readonly workOrderDetailsPanelGridEquipmentNoDataTextLanguageItemName: string = `WorkOrderDetailsPanel.Grid.Equipment.NoDataText`;
    public readonly workOrderDetailsPanelGridHoursNoDataTextLanguageItemName: string = `WorkOrderDetailsPanel.Grid.Hours.NoDataText`;
    public readonly workOrderDetailsPanelGridHoursHoursPriceInfoTitleLanguageItemName: string = `WorkOrderDetailsPanel.Grid.Hours.HoursPrice.InfoTitle`;
    public readonly workOrderDetailsPanelGridEquipmentPriceInfoTitleLanguageItemName: string = `WorkOrderDetailsPanel.Grid.Equipment.Price.InfoTitle`;
    public readonly workOrderDetailsPanelGridEquipmentConfirmDeleteLanguageItemName: string = `WorkOrderDetailsPanel.Grid.Equipment.ConfirmDelete`;
    public readonly workOrderDetailsPanelGridDistancesDayLanguageItemName: string = `WorkOrderDetailsPanel.Grid.Distances.Day`;
    public readonly workOrderDetailsPanelGridDistancesVehiclesLanguageItemName: string = `WorkOrderDetailsPanel.Grid.Distances.Vehicles`;
    public readonly workOrderDetailsPanelGridDistancesDistanceLanguageItemName: string = `WorkOrderDetailsPanel.Grid.Distances.Distance`;
    public readonly workOrderDetailsPanelGridDistancesPriceLanguageItemName: string = `WorkOrderDetailsPanel.Grid.Distances.Price`;
    public readonly workOrderDetailsPanelGridDistancesCostLanguageItemName: string = `WorkOrderDetailsPanel.Grid.Distances.Cost`;
    public readonly workOrderDetailsPanelGridDistancesConfirmDeleteLanguageItemName: string = `WorkOrderDetailsPanel.Grid.Distances.ConfirmDelete`;
    public readonly workOrderDetailsPanelGridDistancesNoDataTextLanguageItemName: string = `WorkOrderDetailsPanel.Grid.Distances.NoDataText`;
    public readonly workOrderDetailsAddDistanceLanguageItemName: string = `WorkOrderDetails.AddDistance`;
    public readonly workOrderDetailsDistancesTabTitleLanguageItemName: string = `WorkOrderDetails.DistancesTab.Title`;
    public readonly contactSupportPageMessageSentLanguageItemName: string = `ContactSupportPage.MessageSent`;
    public readonly contactSupportPageMessageWithIdSentLanguageItemName: string = `ContactSupportPage.MessageWithIdSent`;
    public readonly rentaTasksWorkOrderSignInConfirmLanguageItemName: string = `RentaTasks.WorkOrder.SignIn.Confirm`;
    public readonly rentaTasksWorkOrderSignInAlertLanguageItemName: string = `RentaTasks.WorkOrder.SignIn.Alert`;
    public readonly rentaTasksWorkOrderManualTitleLanguageItemName: string = `RentaTasks.WorkOrder.Manual.Title`;
    public readonly rentaTasksWorkOrderLabelCustomerNameLanguageItemName: string = `RentaTasks.WorkOrder.Label.CustomerName`;
    public readonly rentaTasksWorkOrderLabelConstructionSiteLanguageItemName: string = `RentaTasks.WorkOrder.Label.ConstructionSite`;
    public readonly rentaTasksWorkOrderLabelAddressLanguageItemName: string = `RentaTasks.WorkOrder.Label.Address`;
    public readonly rentaTasksWorkOrderLabelOrdererLanguageItemName: string = `RentaTasks.WorkOrder.Label.Orderer`;
    public readonly rentaTasksWorkOrderLabelOrdererPhoneLanguageItemName: string = `RentaTasks.WorkOrder.Label.OrdererPhone`;
    public readonly rentaTasksWorkOrderLabelApproverLanguageItemName: string = `RentaTasks.WorkOrder.Label.Approver`;
    public readonly rentaTasksWorkOrderLabelApproverPhoneLanguageItemName: string = `RentaTasks.WorkOrder.Label.ApproverPhone`;
    public readonly rentaTasksWorkOrderLabelManagerLanguageItemName: string = `RentaTasks.WorkOrder.Label.Manager`;
    public readonly rentaTasksWorkOrderLabelManagerPhoneLanguageItemName: string = `RentaTasks.WorkOrder.Label.ManagerPhone`;
    public readonly rentaTasksWorkOrderLabelDistanceLanguageItemName: string = `RentaTasks.WorkOrder.Label.Distance`;
    public readonly genericKmLanguageItemName: string = `Generic.Km`;
    public readonly rentaTasksWorkOrderLabelWorkingHoursLanguageItemName: string = `RentaTasks.WorkOrder.Label.WorkingHours`;
    public readonly genericHoursLanguageItemName: string = `Generic.Hours`;
    public readonly rentaTasksWorkOrderLabelStatusLanguageItemName: string = `RentaTasks.WorkOrder.Label.Status`;
    public readonly rentaTasksWorkOrderLabelActivationDateLanguageItemName: string = `RentaTasks.WorkOrder.Label.ActivationDate`;
    public readonly rentaTasksWorkOrderLabelCompletionDateLanguageItemName: string = `RentaTasks.WorkOrder.Label.CompletionDate`;
    public readonly rentaTasksWorkOrderButtonLabelSignInLanguageItemName: string = `RentaTasks.WorkOrder.Button.Label.SignIn`;
    public readonly rentaTasksWorkOrderButtonLabelSignOutLanguageItemName: string = `RentaTasks.WorkOrder.Button.Label.SignOut`;
    public readonly rentaTasksWorkOrderButtonLabelAddEquipmentLanguageItemName: string = `RentaTasks.WorkOrder.Button.Label.AddEquipment`;
    public readonly rentaTasksWorkOrderButtonLabelBackLanguageItemName: string = `RentaTasks.WorkOrder.Button.Label.Back`;
    public readonly rentaTasksDashboardRouteWidgetMyWorkOrderLanguageItemName: string = `RentaTasks.Dashboard.RouteWidget.MyWorkOrder`;
    public readonly rentaTasksDashboardRouteWidgetWorkOrdersLanguageItemName: string = `RentaTasks.Dashboard.RouteWidget.WorkOrders`;
    public readonly rentaTasksWorkOrderSignOutAlertLanguageItemName: string = `RentaTasks.WorkOrder.SignOut.Alert`;
    public readonly rentaTasksWorkOrderSaveAlertLanguageItemName: string = `RentaTasks.WorkOrder.Save.Alert`;
    public readonly rentaTasksWorkOrderUpdateEquipmentAlertLanguageItemName: string = `RentaTasks.WorkOrder.UpdateEquipment.Alert`;
    public readonly rentaTasksWorkOrderCompleteAlertLanguageItemName: string = `RentaTasks.WorkOrder.Complete.Alert`;
    public readonly workOrdersFiltersEmployeesLanguageItemName: string = `WorkOrders.Filters.Employees`;
    public readonly workOrdersFiltersManagersLanguageItemName: string = `WorkOrders.Filters.Managers`;
    public readonly rentaTasksDashboardRouteWidgetWorkOrdersDescriptionLanguageItemName: string = `RentaTasks.Dashboard.RouteWidget.WorkOrders.Description`;
    public readonly workOrdersRowsNoAddressLanguageItemName: string = `WorkOrders.Rows.NoAddress`;
    public readonly editContactPersonModalButtonLabelSaveChangesLanguageItemName: string = `EditContactPersonModal.Button.Label.SaveChanges`;
    public readonly editContactPersonModalSubtitleLanguageItemName: string = `EditContactPersonModal.Subtitle`;
    public readonly summaryWidgetButtonEditApproverLanguageItemName: string = `SummaryWidget.Button.EditApprover`;
    public readonly summaryWidgetDropdownNothingSelectedLanguageItemName: string = `SummaryWidget.Dropdown.NothingSelected`;
    public readonly managersNewOrdererLanguageItemName: string = `Managers.NewOrderer`;
    public readonly managersOrdererSavedSuccessfullyLanguageItemName: string = `Managers.OrdererSavedSuccessfully`;
    public readonly rentaTasksControllerStepsTitleEditLanguageItemName: string = `RentaTasksController.Steps.TitleEdit`;
    public readonly rentaTasksControllerStepsTitleManagersLanguageItemName: string = `RentaTasksController.Steps.TitleManagers`;
    public readonly managersStepOrdererSaveLanguageItemName: string = `ManagersStep.OrdererSave`;
    public readonly managersStepApproverSavedLanguageItemName: string = `ManagersStep.ApproverSaved`;
    public readonly managersStepOrdererNotSpecifiedLanguageItemName: string = `ManagersStep.OrdererNotSpecified`;
    public readonly managersStepApproverNotSpecifiedLanguageItemName: string = `ManagersStep.ApproverNotSpecified`;
    public readonly managersStepManualLanguageItemName: string = `ManagersStep.Manual`;
    public readonly managersStepManagerLabelLanguageItemName: string = `ManagersStep.Manager.Label`;
    public readonly managersStepManagerDescriptionLanguageItemName: string = `ManagersStep.Manager.Description`;
    public readonly managersStepOrdererLabelLanguageItemName: string = `ManagersStep.Orderer.Label`;
    public readonly managersStepOrdererDescriptionLanguageItemName: string = `ManagersStep.Orderer.Description`;
    public readonly managersStepOrdererAddLanguageItemName: string = `ManagersStep.Orderer.Add`;
    public readonly managersStepApproverLabelLanguageItemName: string = `ManagersStep.Approver.Label`;
    public readonly managersStepApproverDescriptionLanguageItemName: string = `ManagersStep.Approver.Description`;
    public readonly managersStepApproverAddLanguageItemName: string = `ManagersStep.Approver.Add`;
    public readonly rentaTasksWorkOrderInfoCheckboxWidgetUnscheduledLanguageItemName: string = `RentaTasks.WorkOrderInfo.CheckboxWidget.Unscheduled`;
    public readonly rentaTasksWorkOrderInfoCheckboxWidgetUnscheduledDescriptionLanguageItemName: string = `RentaTasks.WorkOrderInfo.CheckboxWidget.Unscheduled.Description`;
    public readonly rentaTasksAddEquipmentCategoriesOrProductsSearchingLanguageItemName: string = `RentaTasks.AddEquipment.CategoriesOrProducts.Searching`;
    public readonly rentaTasksAddEquipmentCategoriesOrProductsProductsFoundLanguageItemName: string = `RentaTasks.AddEquipment.CategoriesOrProducts.ProductsFound`;
    public readonly rentaTasksAddEquipmentCategoriesOrProductsNoProductsFoundLanguageItemName: string = `RentaTasks.AddEquipment.CategoriesOrProducts.NoProductsFound`;
    public readonly rentaTasksAddEquipmentCategoriesOrProductsTextInputPlaceholderSearchLanguageItemName: string = `RentaTasks.AddEquipment.CategoriesOrProducts.TextInput.Placeholder.Search`;
    public readonly rentaTasksAddEquipmentCategoriesOrProductsSearchResultLanguageItemName: string = `RentaTasks.AddEquipment.CategoriesOrProducts.SearchResult`;
    public readonly rentaTasksAddEquipmentCategoriesOrProductsModalTitleEquipmentLanguageItemName: string = `RentaTasks.AddEquipment.CategoriesOrProductsModal.Title.Equipment`;
    public readonly rentaTasksAddEquipmentCategoriesOrProductsModalSubtitleChooseEquipmentLanguageItemName: string = `RentaTasks.AddEquipment.CategoriesOrProductsModal.Subtitle.ChooseEquipment`;
    public readonly taskTooltipsTaskUnscheduledLanguageItemName: string = `TaskTooltips.TaskUnscheduled`;
    public readonly workOrderStatusUnscheduledLanguageItemName: string = `WorkOrderStatus.Unscheduled`;
    public readonly rentaTasksAddEquipmentCategoriesOrProductsAddEquipmentLanguageItemName: string = `RentaTasks.AddEquipment.CategoriesOrProducts.AddEquipment`;
    public readonly rentaTasksAddEquipmentAddEquipmentDataProviderCategoryFavoriteLanguageItemName: string = `RentaTasks.AddEquipment.AddEquipmentDataProvider.Category.Favorite`;
    public readonly rentaTasksAddEquipmentCategoriesOrProductsNoProductsLanguageItemName: string = `RentaTasks.AddEquipment.CategoriesOrProducts.NoProducts`;
    public readonly rentaTasksControllerWorkOrderConcurrencyAlertLanguageItemName: string = `RentaTasks.Controller.WorkOrderConcurrencyAlert`;
    public readonly rentaTasksWorkOrderSignInFailedAlertLanguageItemName: string = `RentaTasks.WorkOrder.SignIn.FailedAlert`;
    public readonly rentaTasksWorkOrderLabelInvoiceReferenceLanguageItemName: string = `RentaTasks.WorkOrder.Label.InvoiceReference`;
    public readonly summaryWidgetReferenceLanguageItemName: string = `SummaryWidget.Reference`;

    constructor() {

        super(
            [
                { code: "fi", label: "Suomi" },
                { code: "en", label: "English" },
                { code: "pl", label: "Polski" },
                { code: "sv", label: "Svenska" }
            ],
            "fi");
        
        //Initializer
        this.set(this.topNavFrontpageLanguageItemName, { language: `fi`, value: `Etusivu` }, { language: `sv`, value: `Framsida` }, { language: `pl`, value: `PL: Frontpage` }, { language: `en`, value: `Frontpage` },);
        this.set(this.widgetNewSiteLabelLanguageItemName, { language: `fi`, value: `Uusi työmaa` }, { language: `sv`, value: `Ny byggplats` }, { language: `pl`, value: `PL: New site` }, { language: `en`, value: `New site` },);
        this.set(this.topNavLoginLanguageItemName, { language: `fi`, value: `Kirjaudu` }, { language: `sv`, value: `Logga in` }, { language: `pl`, value: `Zaloguj sie` }, { language: `en`, value: `Login` },);
        this.set(this.topNavEmployeesLanguageItemName, { language: `fi`, value: `Työntekijät` }, { language: `sv`, value: `Anställda` }, { language: `pl`, value: `PL: Employees` }, { language: `en`, value: `Employees` },);
        this.set(this.topNavWarehouseLanguageItemName, { language: `fi`, value: `Varastot` }, { language: `sv`, value: `Lager` }, { language: `pl`, value: `PL: Warehouses` }, { language: `en`, value: `Warehouses` },);
        this.set(this.topNavConstructionSitesLanguageItemName, { language: `fi`, value: `Työmaat` }, { language: `sv`, value: `Byggplatser` }, { language: `pl`, value: `PL: Construction sites` }, { language: `en`, value: `Construction sites` },);
        this.set(this.topNavInvoicesLanguageItemName, { language: `fi`, value: `Laskut` }, { language: `sv`, value: `Fakturor` }, { language: `pl`, value: `PL: Invoices` }, { language: `en`, value: `Invoices` },);
        this.set(this.topNavWorkReportsLanguageItemName, { language: `fi`, value: `Työraportit` }, { language: `sv`, value: `Arbets rapporter` }, { language: `pl`, value: `PL: Work reports` }, { language: `en`, value: `Work reports` },);
        this.set(this.topNavAuditsLanguageItemName, { language: `fi`, value: `Tarkastukset` }, { language: `sv`, value: `Rapporter` }, { language: `pl`, value: `PL: Audits` }, { language: `en`, value: `Audits` },);
        this.set(this.topNavAdminLanguageItemName, { language: `fi`, value: `Hallinta` }, { language: `sv`, value: `Administration` }, { language: `pl`, value: `PL: Admin` }, { language: `en`, value: `Admin` },);
        this.set(this.topNavConstructionSiteManagementLanguageItemName, { language: `fi`, value: `Työmaan hallinta` }, { language: `sv`, value: `SV: Construction site management` }, { language: `pl`, value: `PL: Construction site management` }, { language: `en`, value: `Construction site management` },);
        this.set(this.topNavAccountLanguageItemName, { language: `fi`, value: `Tili` }, { language: `sv`, value: `Konto` }, { language: `pl`, value: `PL: Account` }, { language: `en`, value: `Account` },);
        this.set(this.topNavWorkHoursLanguageItemName, { language: `fi`, value: `Työtunnit` }, { language: `sv`, value: `Arbets timmar` }, { language: `pl`, value: `PL: Work hours` }, { language: `en`, value: `Work hours` },);
        this.set(this.topNavLogoutLanguageItemName, { language: `fi`, value: `Kirjaudu ulos` }, { language: `sv`, value: `Logga ut` }, { language: `pl`, value: `PL: Logout` }, { language: `en`, value: `Logout` },);
        this.set(this.widgetConstructionSitesLabelLanguageItemName, { language: `fi`, value: `Työmaat` }, { language: `sv`, value: `Byggplatser` }, { language: `pl`, value: `PL: Construction sites` }, { language: `en`, value: `Construction sites` },);
        this.set(this.widgetConstructionSitesDescriptionLanguageItemName, { language: `fi`, value: `Työmaat: {0}` }, { language: `sv`, value: `Byggplatser: {0}` }, { language: `pl`, value: `PL: Construction sites: {0}` }, { language: `en`, value: `Construction sites: {0}` },);
        this.set(this.widgetNewSiteDescriptionLanguageItemName, { language: `fi`, value: `Luo uusi työmaa` }, { language: `sv`, value: `Skapa ny byggplats` }, { language: `pl`, value: `PL: Create a construction site` }, { language: `en`, value: `Create a construction site` },);
        this.set(this.widgetNewTaskLabelLanguageItemName, { language: `fi`, value: `Uusi tehtävä` }, { language: `sv`, value: `Ny uppgift` }, { language: `pl`, value: `PL: New task` }, { language: `en`, value: `New task` },);
        this.set(this.widgetNewTaskDescriptionLanguageItemName, { language: `fi`, value: `Luo uusi tehtävä` }, { language: `sv`, value: `Skapa ny uppgift` }, { language: `pl`, value: `PL: Create a task` }, { language: `en`, value: `Create a task` },);
        this.set(this.widgetEmployeesDescriptionLanguageItemName, { language: `fi`, value: `Työntekijät: {0}` }, { language: `sv`, value: `Anställda: {0}` }, { language: `pl`, value: `PL: Employees: {0}` }, { language: `en`, value: `Employees: {0}` },);
        this.set(this.widgetInvoicesDescriptionLanguageItemName, { language: `fi`, value: `{0:C} € / pv` }, { language: `sv`, value: `{0:C} € / dag` }, { language: `pl`, value: `PL: {0:C} € / day` }, { language: `en`, value: `{0:C} € / day` },);
        this.set(this.widgetInvoicingPeriodLabelLanguageItemName, { language: `fi`, value: `Laskutuskausi` }, { language: `sv`, value: `Fakturerings period` }, { language: `pl`, value: `PL: Invoicing period` }, { language: `en`, value: `Invoicing period` },);
        this.set(this.widgetInvoicingPeriodDescriptionLanguageItemName, { language: `fi`, value: `Päivää jäljellä laskutuskatkoon` }, { language: `sv`, value: `Fakturerings dagar kvar` }, { language: `pl`, value: `PL: Invoicing days left` }, { language: `en`, value: `Invoicing days left` },);
        this.set(this.widgetSalaryPeriodLabelLanguageItemName, { language: `fi`, value: `Palkkajakso` }, { language: `en`, value: `Salary period` },);
        this.set(this.widgetSalaryPeriodDescriptionLanguageItemName, { language: `fi`, value: `Palkkajaksoa jäljellä` }, { language: `en`, value: `Salary days left` },);
        this.set(this.widgetBudgetDataSet1LabelLanguageItemName, { language: `fi`, value: `Kuukausivuokra viimeiset 12 kuukautta` }, { language: `sv`, value: `Budget, €` }, { language: `pl`, value: `PL: Budget, €` }, { language: `en`, value: `Monthly rent for the last 12 months` },);
        this.set(this.widgetBudgetDataSet2LabelLanguageItemName, { language: `fi`, value: `Kuukausivuokran kasvu viimeiset 12 kuukautta` }, { language: `sv`, value: `Vinst, €` }, { language: `pl`, value: `PL: Profit, €` }, { language: `en`, value: `Monthly rent growing the last 12 months` },);
        this.set(this.widgetBudgetDataPerimeterFrameLabelLanguageItemName, { language: `fi`, value: `Kehäteline` }, { language: `sv`, value: `SV: Perimeter frame` }, { language: `pl`, value: `PL: Perimeter frame` }, { language: `en`, value: `Perimeter frame` },);
        this.set(this.widgetBudgetDataModuleLabelLanguageItemName, { language: `fi`, value: `Moduuli` }, { language: `sv`, value: `SV: Module` }, { language: `pl`, value: `PL: Module` }, { language: `en`, value: `Module` },);
        this.set(this.widgetBudgetDataWeatherShelterLabelLanguageItemName, { language: `fi`, value: `Sääsuoja` }, { language: `sv`, value: `SV: Weather shelter` }, { language: `pl`, value: `PL: Weather shelter` }, { language: `en`, value: `Weather shelter` },);
        this.set(this.widgetMyWorkReportsLabelLanguageItemName, { language: `fi`, value: `Minun työraporttini` }, { language: `sv`, value: `SV: My work reports` }, { language: `pl`, value: `PL: My work reports` }, { language: `en`, value: `My work reports` },);
        this.set(this.widgetMyWorkReportsDescriptionLanguageItemName, { language: `fi`, value: `Näytä kaikki työraporttini` }, { language: `sv`, value: `SV: View all work reports` }, { language: `pl`, value: `PL: View all work reports` }, { language: `en`, value: `View all work reports` },);
        this.set(this.widgetMyInvoicesLabelLanguageItemName, { language: `fi`, value: `Minun laskuni` }, { language: `sv`, value: `SV: My invoices` }, { language: `pl`, value: `PL: My invoices` }, { language: `en`, value: `My invoices` },);
        this.set(this.widgetMyInvoicesDescriptionLanguageItemName, { language: `fi`, value: `Näytä kaikki laskuni` }, { language: `sv`, value: `SV: View all invoices` }, { language: `pl`, value: `PL: View all invoices` }, { language: `en`, value: `View all invoices` },);
        this.set(this.widgetMyAuditsLabelLanguageItemName, { language: `fi`, value: `Minun tarkastukseni` }, { language: `sv`, value: `SV: My audits` }, { language: `pl`, value: `PL: My audits` }, { language: `en`, value: `My audits` },);
        this.set(this.widgetMyAuditsDescriptionLanguageItemName, { language: `fi`, value: `Näytä kaikki tarkastusraportit` }, { language: `sv`, value: `SV: View all audit reports` }, { language: `pl`, value: `PL: View all audit reports` }, { language: `en`, value: `View all audit reports` },);
        this.set(this.widgetRentaLinkLabelLanguageItemName, { language: `fi`, value: `Renta Oy Portal` }, { language: `sv`, value: `Renta Oy Portal` }, { language: `pl`, value: `Renta Oy Portal` }, { language: `en`, value: `Renta Oy Portal` },);
        this.set(this.widgetRentaLinkDescriptionLanguageItemName, { language: `fi`, value: `Paikallinen konevuokrausportaali` }, { language: `sv`, value: `Lokal maskin uthyrnings portal` }, { language: `pl`, value: `PL: Local machine rental portal` }, { language: `en`, value: `Local machine rental portal` },);
        this.set(this.widgetLoginDescriptionLanguageItemName, { language: `fi`, value: `Kirjaudu sisään` }, { language: `sv`, value: `Logga in` }, { language: `pl`, value: `Zaloguj sie` }, { language: `en`, value: `Log in\n` },);
        this.set(this.validatorsEmailLanguageItemName, { language: `fi`, value: `Sähköpostiosoite pitäisi olla oikeassa muodossa` }, { language: `sv`, value: `Epost måste vara korrekt format` }, { language: `pl`, value: `PL: Email must be a proper email form` }, { language: `en`, value: `Email must be a proper email form` },);
        this.set(this.validatorsPasswordLanguageItemName, { language: `fi`, value: `Salasanassa pitää olla vähintään 8 merkkiä, yksi iso kirjain ja yksi erikoismerkki` }, { language: `sv`, value: `Lösenordet måste innehålla minst 8 tecken, en stor bokstav och ett special märke` }, { language: `pl`, value: `PL: Password must contain at least 1 lowercase, 1 uppercase character, 1 special character and be at least 8 characters long` }, { language: `en`, value: `Password must contain at least 1 lowercase, 1 uppercase character, 1 special character and be at least 8 characters long` },);
        this.set(this.validatorsPhoneLanguageItemName, { language: `fi`, value: `Tarkista numero.` }, { language: `sv`, value: `SV: Incorrect phone number.` }, { language: `pl`, value: `PL: Incorrect phone number.` }, { language: `en`, value: `Incorrect phone number.` },);
        this.set(this.validatorsRequiredLanguageItemName, { language: `fi`, value: `{0} on pakollinen` }, { language: `sv`, value: `{0} krävs` }, { language: `pl`, value: `PL: {0} is required` }, { language: `en`, value: `{0} is required` },);
        this.set(this.validatorsNumberRangeLanguageItemName, { language: `fi`, value: `Arvo pitää olla välistä {0} - {1}.` }, { language: `sv`, value: `SV: Value must be in range {0} - {1}.` }, { language: `pl`, value: `PL: Value must be in range {0} - {1}.` }, { language: `en`, value: `Value must be in range {0} - {1}.` },);
        this.set(this.loginPageLoginButtonLanguageItemName, { language: `fi`, value: `Kirjaudu` }, { language: `sv`, value: `Logga in` }, { language: `pl`, value: `Zaloguj sie` }, { language: `en`, value: `Login` },);
        this.set(this.loginPageSsoButtonLanguageItemName, { language: `fi`, value: `Office 365` }, { language: `sv`, value: `Office 365` }, { language: `pl`, value: `Office 365` }, { language: `en`, value: `Office 365` },);
        this.set(this.loginPageForgotPasswordButtonLanguageItemName, { language: `fi`, value: `Unohditko salasanasi?` }, { language: `sv`, value: `Glömt lösenordet?` }, { language: `pl`, value: `PL: Forgot password?` }, { language: `en`, value: `Forgot password?` },);
        this.set(this.loginPageEmailInputLanguageItemName, { language: `fi`, value: `Sähköposti` }, { language: `sv`, value: `Epost` }, { language: `pl`, value: `PL: Email` }, { language: `en`, value: `Email` },);
        this.set(this.linkExpiredLanguageItemName, { language: `fi`, value: `Linkki vanhentunut` }, { language: `sv`, value: `Länken har expirerat` }, { language: `pl`, value: `PL: Link has expired` }, { language: `en`, value: `Link has expired` },);
        this.set(this.linkUsedLanguageItemName, { language: `fi`, value: `Linkki vanhentunut` }, { language: `sv`, value: `Länken har expirerat` }, { language: `pl`, value: `PL: Link has expired` }, { language: `en`, value: `Link has expired` },);
        this.set(this.forgotPasswordPagePageTitleLanguageItemName, { language: `fi`, value: `Unohditko salasanasi?` }, { language: `sv`, value: `Glömt lösenordet?` }, { language: `pl`, value: `PL: Forgot password?` }, { language: `en`, value: `Forgot password?` },);
        this.set(this.forgotPasswordPageSuccessMessageLanguageItemName, { language: `fi`, value: `Ilmoittamaasi osoitteesen on lähetetty ohjeet salasanan palauttamiseksi. Palautettuasi salasanan, jatka kirjautumalla sisään. Mikäli et vastaanottanut viestiä, tarkista sähköpostilaatikkosi roskapostikansio.` }, { language: `sv`, value: `Ett meddelande har skickats till adressen ni angav med en länk för att återställa lösenordet. Fortsätt med inloggningen efter lösenordet är ändrat. Om ni inte fått ett meddelande, kontrollera skräppost mappen i er e-post` }, { language: `pl`, value: `PL: A notification has been sent to the address you provided with a link to reset your password. Continue signing in after changing your password. If you did not receive the message, please check your spam folder.` }, { language: `en`, value: `A notification has been sent to the address you provided with a link to reset your password. Continue signing in after changing your password. If you did not receive the message, please check your spam folder.` },);
        this.set(this.forgotPasswordPageFailedMessageLanguageItemName, { language: `fi`, value: `Ilmoitusta ei voitu lähettää.\n        Ota yhteys järjestelmävalvojaan.` }, { language: `sv`, value: `SV: A notification was not sent to the address you provided for some technical reasons.\n      Please contact administrator.` }, { language: `pl`, value: `PL: A notification was not sent to the address you provided for some technical reasons.\n      Please contact administrator.` }, { language: `en`, value: `A notification was not sent to the address you provided for some technical reasons.\n      Please contact administrator.` },);
        this.set(this.forgotPasswordPageResetButtonLanguageItemName, { language: `fi`, value: `Lähetä` }, { language: `sv`, value: `Skicka` }, { language: `pl`, value: `PL: Send` }, { language: `en`, value: `Send` },);
        this.set(this.forgotPasswordPageLoginButtonLanguageItemName, { language: `fi`, value: `Siirry kirjautumiseen` }, { language: `sv`, value: `Gå till inloggning` }, { language: `pl`, value: `PL: Go to login` }, { language: `en`, value: `Go to login` },);
        this.set(this.forgotPasswordPageHelpTextLanguageItemName, { language: `fi`, value: `Ei ongelmaa. Ole hyvä, syötä "käyttäjätunnus" ja lähetämme sinulle ohjeet salasanan asettamiseen.` }, { language: `sv`, value: `Inga problem. Vänligen ange ert "användarnamn" och vi skickar instruktioner på hur ni återställer ert lösenord.` }, { language: `pl`, value: `PL: No problem. Please enter your "username" and we will send you instructions on how to reset your password.` }, { language: `en`, value: `No problem. Please enter your "username" and we will send you instructions on how to reset your password.` },);
        this.set(this.forgotPasswordPageEmailInputLanguageItemName, { language: `fi`, value: `Sähköposti` }, { language: `sv`, value: `Epost` }, { language: `pl`, value: `PL: Email` }, { language: `en`, value: `Email` },);
        this.set(this.loginPagePasswordInputLanguageItemName, { language: `fi`, value: `Salasana` }, { language: `sv`, value: `Lösenord` }, { language: `pl`, value: `PL: Password` }, { language: `en`, value: `Password` },);
        this.set(this.loginPageTitleLanguageItemName, { language: `fi`, value: `Kirjaudu sisään.` }, { language: `sv`, value: `Logga in.` }, { language: `pl`, value: `Zaloguj sie.` }, { language: `en`, value: `Log in.` },);
        this.set(this.loginPageSubtitleLanguageItemName, { language: `fi`, value: `Kirjaudu käyttäjätunnuksellasi ja salasanallasi.` }, { language: `sv`, value: `Logga in med ditt användarnamn och lösenord.` }, { language: `pl`, value: `PL: Log in with your username and password.` }, { language: `en`, value: `Log in with your username and password.` },);
        this.set(this.enumLoginResultStatusNotFoundLanguageItemName, { language: `fi`, value: `Väärä käyttäjätunnus tai salasana.` }, { language: `sv`, value: `Fel användarnamn eller lösenord.` }, { language: `pl`, value: `PL: Invalid username or password.` }, { language: `en`, value: `Invalid username or password.` },);
        this.set(this.enumLoginResultStatusDeletedLanguageItemName, { language: `fi`, value: `Käyttäjätilisi on poistettu. Ota yhteyttä asiakastukeen.` }, { language: `sv`, value: `Ditt konto har raderats, Ta kontakt med kundservicen.` }, { language: `pl`, value: `PL: Your account has been deleted. Contact support to restore your access.` }, { language: `en`, value: `Your account has been deleted. Contact support to restore your access.` },);
        this.set(this.enumLoginResultStatusLockedLanguageItemName, { language: `fi`, value: `Liian monta yritystä kirjautua sisään. Yritä uudelleen myöhemmin.` }, { language: `sv`, value: `För många inloggnings försök, Försök igen senare.` }, { language: `pl`, value: `PL: Too many login attempts. Try again later.` }, { language: `en`, value: `Too many login attempts. Try again later.` },);
        this.set(this.enumLoginResultStatusSecurityLanguageItemName, { language: `fi`, value: `Käyttäjätilisi on lukittu. Ota yhteyttä asiakastukeen.` }, { language: `sv`, value: `Ditt konto har låsts. Kontakta kundservice.` }, { language: `pl`, value: `PL: Your account has been locked. Contact support to restore access.` }, { language: `en`, value: `Your account has been locked. Contact support to restore access.` },);
        this.set(this.errorPageTitleLanguageItemName, { language: `fi`, value: `Tapahtui virhe` }, { language: `sv`, value: `Fel uppstod` }, { language: `pl`, value: `PL: Error occured` }, { language: `en`, value: `Error occured` },);
        this.set(this.errorPageErrorMessageLanguageItemName, { language: `fi`, value: `Jos virhe toistuu, ole yhteydessä asiakaspalveluun.` }, { language: `sv`, value: `Om detta händer igen, kontakta kundservice.` }, { language: `pl`, value: `PL: If this happens again, contact support.` }, { language: `en`, value: `If this happens again, contact support.` },);
        this.set(this.errorPageContactSupportLanguageItemName, { language: `fi`, value: `Ota yhteyttä asiakaspalveluun` }, { language: `sv`, value: `Kontakta kundservice` }, { language: `pl`, value: `PL: Contact support` }, { language: `en`, value: `Contact support` },);
        this.set(this.contactSupportPageTitleLanguageItemName, { language: `fi`, value: `Viesti asiakaspalveluun` }, { language: `sv`, value: `Meddelande till kundservice` }, { language: `pl`, value: `PL: Message to support team` }, { language: `en`, value: `Message to support team` },);
        this.set(this.formInputEmailLanguageItemName, { language: `fi`, value: `Sähköposti` }, { language: `sv`, value: `Epost` }, { language: `pl`, value: `PL: Email` }, { language: `en`, value: `Email` },);
        this.set(this.formInputReceiverEmailLanguageItemName, { language: `fi`, value: `Vastaanottaja` }, { language: `sv`, value: `Epost` }, { language: `pl`, value: `PL: Receiver email` }, { language: `en`, value: `Receiver email` },);
        this.set(this.formInputPhoneLanguageItemName, { language: `fi`, value: `Puhelinnumero` }, { language: `sv`, value: `Telefonnumer` }, { language: `pl`, value: `PL: Phone number` }, { language: `en`, value: `Phone number` },);
        this.set(this.formInputFirstnameLanguageItemName, { language: `fi`, value: `Etunimi` }, { language: `sv`, value: `Förnamn` }, { language: `pl`, value: `PL: Firstname` }, { language: `en`, value: `Firstname` },);
        this.set(this.formInputMiddlenameLanguageItemName, { language: `fi`, value: `Toinen nimi` }, { language: `sv`, value: `SV: Middle name` }, { language: `pl`, value: `PL: Middle name` }, { language: `en`, value: `Middle name` },);
        this.set(this.formInputLastnameLanguageItemName, { language: `fi`, value: `Sukunimi` }, { language: `sv`, value: `Efternamn` }, { language: `pl`, value: `PL: Lastname` }, { language: `en`, value: `Lastname` },);
        this.set(this.formInputMessageLanguageItemName, { language: `fi`, value: `Viesti` }, { language: `sv`, value: `Meddelande` }, { language: `pl`, value: `PL: Message` }, { language: `en`, value: `Message` },);
        this.set(this.formInputAddressLanguageItemName, { language: `fi`, value: `Osoite` }, { language: `sv`, value: `Adress` }, { language: `pl`, value: `PL: Address` }, { language: `en`, value: `Address` },);
        this.set(this.formInputStreetLanguageItemName, { language: `fi`, value: `Katu` }, { language: `sv`, value: `Gata` }, { language: `pl`, value: `PL: Street` }, { language: `en`, value: `Street` },);
        this.set(this.formInputCityLanguageItemName, { language: `fi`, value: `Kaupunki` }, { language: `sv`, value: `Stad` }, { language: `pl`, value: `PL: City` }, { language: `en`, value: `City` },);
        this.set(this.formInputPostalcodeLanguageItemName, { language: `fi`, value: `Postinumero` }, { language: `sv`, value: `Postnummer` }, { language: `pl`, value: `PL: Postal code` }, { language: `en`, value: `Postal code` },);
        this.set(this.formInputPostalboxLanguageItemName, { language: `fi`, value: `Postilaatikko` }, { language: `en`, value: `Postal box` },);
        this.set(this.formInputLanguageLanguageItemName, { language: `fi`, value: `Kieli` }, { language: `sv`, value: `Språk` }, { language: `pl`, value: `PL: Language` }, { language: `en`, value: `Language` },);
        this.set(this.formInputEmployeeNumberLanguageItemName, { language: `fi`, value: `Käyttäjä-id` }, { language: `sv`, value: `Användar-id` }, { language: `pl`, value: `PL: Employee number` }, { language: `en`, value: `Employee number` },);
        this.set(this.formInputCostPoolLanguageItemName, { language: `fi`, value: `Kustannuspaikka` }, { language: `sv`, value: `Kostnadspool` }, { language: `pl`, value: `PL: Cost pool` }, { language: `en`, value: `Cost pool` },);
        this.set(this.formInputWorkCardIdLanguageItemName, { language: `fi`, value: `Valttikorti-id` }, { language: `sv`, value: `Arbetskorts-id` }, { language: `pl`, value: `PL: Work card id` }, { language: `en`, value: `Work card id` },);
        this.set(this.formInputTimeTrackingDeviceIdLanguageItemName, { language: `fi`, value: `Työaikaseurantalaite-id` }, { language: `en`, value: `Time tracking device id` },);
        this.set(this.formInputContractSalaryHourlyPriceLanguageItemName, { language: `fi`, value: `Sopimuspalkan tuntihinta` }, { language: `sv`, value: `Kontrakt lön timpris` }, { language: `pl`, value: `PL: Contract salary hourly price` }, { language: `en`, value: `Contract salary hourly price` },);
        this.set(this.formInputRoleLanguageItemName, { language: `fi`, value: `Rooli` }, { language: `sv`, value: `Roll` }, { language: `pl`, value: `PL: Role` }, { language: `en`, value: `Role` },);
        this.set(this.formSendLanguageItemName, { language: `fi`, value: `Läheta` }, { language: `sv`, value: `Skicka` }, { language: `pl`, value: `PL: Send` }, { language: `en`, value: `Send` },);
        this.set(this.formSaveLanguageItemName, { language: `fi`, value: `Tallenna` }, { language: `sv`, value: `Spara` }, { language: `pl`, value: `PL: Save` }, { language: `en`, value: `Save` },);
        this.set(this.componentDropdownNoItemsLanguageItemName, { language: `fi`, value: `Kohteita ei löytynyt` }, { language: `sv`, value: `Inga objekt hittades` }, { language: `pl`, value: `PL: No items found` }, { language: `en`, value: `No items found` },);
        this.set(this.componentDropdownNoDataLanguageItemName, { language: `fi`, value: `Ei tietoja` }, { language: `sv`, value: `Ingen information` }, { language: `pl`, value: `PL: No data` }, { language: `en`, value: `No data` },);
        this.set(this.componentDropdownFilterResultsLanguageItemName, { language: `fi`, value: `Suodata tulokset` }, { language: `sv`, value: `Filtrera resultat` }, { language: `pl`, value: `PL: Filter results` }, { language: `en`, value: `Filter results` },);
        this.set(this.componentDropdownGetResultsLanguageItemName, { language: `fi`, value: `Aloita kirjoittaminen saadaksesi tuloksia` }, { language: `sv`, value: `Börja skriva för att få resultat` }, { language: `pl`, value: `PL: Start typing to get results` }, { language: `en`, value: `Start typing to get results` },);
        this.set(this.componentDropdownAddLanguageItemName, { language: `fi`, value: `Lisää` }, { language: `en`, value: `Add` },);
        this.set(this.topNavContactSupportLanguageItemName, { language: `fi`, value: `Tuki` }, { language: `sv`, value: `Kundtjänst` }, { language: `pl`, value: `PL: Support` }, { language: `en`, value: `Support` },);
        this.set(this.topNavWorkOrdersLanguageItemName, { language: `fi`, value: `Työtilaukset` }, { language: `sv`, value: `SV: Work orders` }, { language: `pl`, value: `PL: Work orders` }, { language: `en`, value: `Work orders` },);
        this.set(this.dayOfWeekSundayLanguageItemName, { language: `fi`, value: `Sunnuntai` }, { language: `sv`, value: `Söndag` }, { language: `pl`, value: `PL: Sunday` }, { language: `en`, value: `Sunday` },);
        this.set(this.dayOfWeekMondayLanguageItemName, { language: `fi`, value: `Maanantai` }, { language: `sv`, value: `Måndag` }, { language: `pl`, value: `PL: Monday` }, { language: `en`, value: `Monday` },);
        this.set(this.dayOfWeekTuesdayLanguageItemName, { language: `fi`, value: `Tiistai` }, { language: `sv`, value: `Tisdag` }, { language: `pl`, value: `PL: Tuesday` }, { language: `en`, value: `Tuesday` },);
        this.set(this.dayOfWeekWednesdayLanguageItemName, { language: `fi`, value: `Keskiviikko` }, { language: `sv`, value: `Onsdag` }, { language: `pl`, value: `PL: Wednesday` }, { language: `en`, value: `Wednesday` },);
        this.set(this.dayOfWeekThursdayLanguageItemName, { language: `fi`, value: `Torstai` }, { language: `sv`, value: `Torsdag` }, { language: `pl`, value: `PL: Thursday` }, { language: `en`, value: `Thursday` },);
        this.set(this.dayOfWeekFridayLanguageItemName, { language: `fi`, value: `Perjantai` }, { language: `sv`, value: `Fredag` }, { language: `pl`, value: `PL: Friday` }, { language: `en`, value: `Friday` },);
        this.set(this.dayOfWeekSaturdayLanguageItemName, { language: `fi`, value: `Lauantai` }, { language: `sv`, value: `Lördag` }, { language: `pl`, value: `PL: Saturday` }, { language: `en`, value: `Saturday` },);
        this.set(this.rentaTasksDashboardQRCodeLanguageItemName, { language: `fi`, value: `QR koodi` }, { language: `sv`, value: `QR kod` }, { language: `pl`, value: `PL: QR code` }, { language: `en`, value: `QR code` },);
        this.set(this.rentaTasksDashboardQRCodeDescriptionLanguageItemName, { language: `fi`, value: `Skannaa QR koodi rakennustyömaan valitsemiseksi` }, { language: `sv`, value: `Skanna QR koden för att välja byggplats` }, { language: `pl`, value: `PL: Scan QR code to select construction site` }, { language: `en`, value: `Scan QR code to select construction site` },);
        this.set(this.rentaTasksDashboardCheckInLanguageItemName, { language: `fi`, value: `Ilmoittaudu` }, { language: `sv`, value: `Checka in` }, { language: `pl`, value: `PL: Check-in` }, { language: `en`, value: `Check-in` },);
        this.set(this.rentaTasksApproveDropdownWidgetTasksToCombineLanguageItemName, { language: `fi`, value: `Paina valitaksesi yhdistettävät tehtävät` }, { language: `en`, value: `Press to select tasks to combine` },);
        this.set(this.rentaTasksApproveDropdownWidgetTasksCombinedLanguageItemName, { language: `fi`, value: `{0} tehtävää yhdistettynä työraporttiin` }, { language: `en`, value: `{0} tasks combined to the work report` },);
        this.set(this.rentaTasksSignatureAlertLanguageItemName, { language: `fi`, value: `Työraportti on lähetetty asiakkaalle` }, { language: `en`, value: `Work report has been sent to a customer` },);
        this.set(this.rentaTasksSelectTaskMyTasksLanguageItemName, { language: `fi`, value: `Minun tehtävät` }, { language: `en`, value: `My tasks` },);
        this.set(this.rentaTasksSelectTaskNotAssignedLanguageItemName, { language: `fi`, value: `Määrittämättömät` }, { language: `en`, value: `Not assigned` },);
        this.set(this.rentaTasksSelectOrganizationNoOrganizationsLanguageItemName, { language: `fi`, value: `Asiakkaita ei ole saatavilla` }, { language: `en`, value: `No organizations available` },);
        this.set(this.rentaTasksSelectSiteNotFoundLanguageItemName, { language: `fi`, value: `Työmaata ei löydy tai qr-koodia ei voida tunnistaa` }, { language: `en`, value: `Construction site not found or qr code cannot be recognized` },);
        this.set(this.rentaTasksSelectSiteNoAvailableSitesLanguageItemName, { language: `fi`, value: `Valitulle asiakkaalle ei ole saatavana työmaita` }, { language: `en`, value: `No construction sites available for selected company` },);
        this.set(this.rentaTasksAssignMounterDropdownWidgetAssignMountersLanguageItemName, { language: `fi`, value: `Määritä tehtävä asentajille` }, { language: `en`, value: `Assign the task to the mounters` },);
        this.set(this.rentaTasksAssignMounterDropdownWidgetMountersAssignedLanguageItemName, { language: `fi`, value: `{0} asentajiaa määritetty tehtävälle` }, { language: `en`, value: `{0} mounter(s) assigned to the task` },);
        this.set(this.rentaTasksAddEquipmentDropdownWidgetNoEquipmentLanguageItemName, { language: `fi`, value: `Ei varusteita` }, { language: `en`, value: `No equipment` },);
        this.set(this.rentaTasksAddEquipmentDropdownWidgetSpecifyAmountLanguageItemName, { language: `fi`, value: `{0} valittuna, voit määrittää määrän` }, { language: `en`, value: `{0} position(s), you can specify amount of equipment` },);
        this.set(this.rentaTasksAddEquipmentManualLanguageItemName, { language: `fi`, value: `Lisää tarvikkeita valitulle tehtävälle, pyyhkäise tai paina seuraava mikäli tarvikkeita ei ole tarpeen lisätä.` }, { language: `en`, value: `Add equipment to the selected task, swipe or press next if you do not have additional equipments to add.` },);
        this.set(this.rentaTasksAddTaskManualLanguageItemName, { language: `fi`, value: `Luo uusi tehtävä työmaalle.\nMääritä tehtävän nimi (paina widgettiä aloittaaksesi muokkauksen) jne.` }, { language: `en`, value: `Create a new task on the construction site.\nSpecify task name (click on widget to start editing) etc.` },);
        this.set(this.rentaTasksControllerStepsTitleSelectSiteLanguageItemName, { language: `fi`, value: `Valitse työmaa` }, { language: `en`, value: `Select site` },);
        this.set(this.rentaTasksControllerStepsTitleSelectOrganizationLanguageItemName, { language: `fi`, value: `Valitse asiakas` }, { language: `en`, value: `Select client` },);
        this.set(this.rentaTasksControllerStepsTitleSelectTaskLanguageItemName, { language: `fi`, value: `Valitse tehtävä` }, { language: `en`, value: `Select task` },);
        this.set(this.rentaTasksControllerStepsTitleAllowanceLanguageItemName, { language: `fi`, value: `Korvaukset` }, { language: `en`, value: `Allowance` },);
        this.set(this.rentaTasksControllerStepsTitleDistanceLanguageItemName, { language: `fi`, value: `Matka` }, { language: `en`, value: `Distance` },);
        this.set(this.rentaTasksControllerStepsTitleTaskStatusLanguageItemName, { language: `fi`, value: `Tehtävän tila` }, { language: `en`, value: `Task status` },);
        this.set(this.rentaTasksControllerStepsTitleEquipmentLanguageItemName, { language: `fi`, value: `Työkalut` }, { language: `en`, value: `Equipment` },);
        this.set(this.rentaTasksControllerStepsTitleApproveLanguageItemName, { language: `fi`, value: `Hyväksy` }, { language: `en`, value: `Approve` },);
        this.set(this.rentaTasksControllerStepsTitleSignatureLanguageItemName, { language: `fi`, value: `Allekirjoitus` }, { language: `en`, value: `Signature` },);
        this.set(this.rentaTasksControllerStepsTitleNewTaskLanguageItemName, { language: `fi`, value: `Uusi tehtävä` }, { language: `en`, value: `New task` },);
        this.set(this.rentaTasksControllerStepsTitleMountersLanguageItemName, { language: `fi`, value: `Asentajat` }, { language: `en`, value: `Mounters` },);
        this.set(this.rentaManagementSummaryPageManualLanguageItemName, { language: `fi`, value: `Renta Task 1.0.\nYhteenvetovaihe.` }, { language: `en`, value: `Renta Task 1.0.\nSummary wizard step.` },);
        this.set(this.rentaManagementSummaryPageDescriptionLanguageItemName, { language: `fi`, value: `Paina vaihetta saadaksesi lisätietoja.` }, { language: `en`, value: `Click on step for additional info.` },);
        this.set(this.rentaManagementSummaryPageButtonTitleLanguageItemName, { language: `fi`, value: `Valmis` }, { language: `en`, value: `Complete` },);
        this.set(this.rentaManagementSelectModuleNoModulesLanguageItemName, { language: `fi`, value: `Moduuleja ei ole saatavilla valitulle työmaalle ja sopimukselle.` }, { language: `en`, value: `No site modules available for selected site and agreement.` },);
        this.set(this.rentaManagementSelectModuleDescriptionLanguageItemName, { language: `fi`, value: `Paina valitaksesi moduulin` }, { language: `en`, value: `Press to select module` },);
        this.set(this.rentaManagementSelectModuleManualLanguageItemName, { language: `fi`, value: `Valitse alasvetovalikosta moduuli, jolla aiot työskennellä, painamalla widgettiä.` }, { language: `en`, value: `Select a site module you are going to work on from dropdown menu by pressing on module widget.` },);
        this.set(this.rentaManagementSelectSiteNoSiteWithModulesLanguageItemName, { language: `fi`, value: `Ei aktiivisia työmaita, joilla on aktiivinen sopimus ja olemassa olevat moduulit.` }, { language: `en`, value: `No active construction sites with active agreement and existing modules.` },);
        this.set(this.rentaManagementSelectAgreementNoAgreementLanguageItemName, { language: `fi`, value: `Valitulle työmaalle ei ole saatavana aktiivisia sopimuksia, joilla olisi moduulit.` }, { language: `en`, value: `No active agreements with existing modules available for selected site.` },);
        this.set(this.rentaManagementSelectAgreementManualLanguageItemName, { language: `fi`, value: `Valitse alasvetovalikosta sopimus, jolla aiot työskennellä, painamalla widgettiä` }, { language: `en`, value: `Select a site agreement you are going to work on from dropdown menu by pressing on Agreement widget` },);
        this.set(this.rentaManagementSelectAgreementDescriptionLanguageItemName, { language: `fi`, value: `Paina valitaksesi sopimuksen` }, { language: `en`, value: `Press to select agreement` },);
        this.set(this.rentaManagementSaveAuditSentLanguageItemName, { language: `fi`, value: `Tarkastusraportti on lähetetty asiakkaalle.` }, { language: `en`, value: `Audit report has been sent to customer.` },);
        this.set(this.rentaManagementSaveAuditManualLanguageItemName, { language: `fi`, value: `Tarkasta moduulia.\nPaina "Tarkasta" -painiketta.\nSe käynnistää tarkastuksen valitulle tehtävälle.\nJaettulle tehtävälle ei voi luoda tarkastusraporttia.` }, { language: `en`, value: `Audit module.\nPress "Activate" button.\nIt will create and activate audit for corresponding task.\nTask marked as splitted cannot be audited.` },);
        this.set(this.rentaManagementDashboardManualLanguageItemName, { language: `fi`, value: `\nTervetuloa Renta Management kojelautaan.\n      \nPaina "Aktivoi moduuli" aktivoidaksesi teline moduulin rakennustyömaalla.\n\nPaina "Tarkasta moduuli" tarkistaaksesi rakennustelineiden rakennustelineiden.\n\nLuo uusi lisätehtävä työmaalle painamalla "Lisää tehtävä".\n    ` }, { language: `en`, value: `\nWelcome to Renta Management dashboard.\n        \nPress "Activate module" to activate a scaffolding module on a construction site.\n\nPress "Audit module" to inspect a scaffolding module on a construction site.\n\nPress "Add task" to create new extra task for a construction site.\n    ` },);
        this.set(this.rentaManagementDashboardActivateLanguageItemName, { language: `fi`, value: `Aktivoi moduuli` }, { language: `en`, value: `Activate module` },);
        this.set(this.rentaManagementDashboardActivateDescriptionLanguageItemName, { language: `fi`, value: `Aktivoi työmaan sopimustehtävät` }, { language: `en`, value: `Activate construction site contract tasks` },);
        this.set(this.rentaManagementDashboardAuditLanguageItemName, { language: `fi`, value: `Tarkasta moduuli` }, { language: `en`, value: `Audit module` },);
        this.set(this.rentaManagementDashboardAuditDescriptionLanguageItemName, { language: `fi`, value: `Tarkasta työmaan moduuli` }, { language: `en`, value: `Audit construction site module` },);
        this.set(this.rentaManagementDashboardAddTaskLanguageItemName, { language: `fi`, value: `Lisää tehtävä` }, { language: `en`, value: `Add task` },);
        this.set(this.rentaManagementDashboardAddTaskDescriptionLanguageItemName, { language: `fi`, value: `Luo uusi tehtävä` }, { language: `en`, value: `Create new task` },);
        this.set(this.rentaManagementAuditParams4HighestLanguageItemName, { language: `fi`, value: `Korkein taso, m` }, { language: `en`, value: `Highest level, m` },);
        this.set(this.rentaManagementAuditParams4SpacingLanguageItemName, { language: `fi`, value: `Tason vali, m` }, { language: `en`, value: `Level spacing, m` },);
        this.set(this.rentaManagementAuditParams3SnowloadLanguageItemName, { language: `fi`, value: `Lumikuorma max, kN [0..1]` }, { language: `en`, value: `Snow load max, kN [0..1]` },);
        this.set(this.rentaManagementAuditParams3WindloadLanguageItemName, { language: `fi`, value: `Tulikuorma max, kN [0..1]` }, { language: `en`, value: `Wind load max, kN [0..1]` },);
        this.set(this.rentaManagementAuditParams3WeatherShelterLanguageItemName, { language: `fi`, value: `Sääsuoja, m²` }, { language: `en`, value: `Weather shelter, m²` },);
        this.set(this.rentaManagementAuditParams2LoadClassLanguageItemName, { language: `fi`, value: `Telineiden kuormitusluokka` }, { language: `en`, value: `Scaffolding load class` },);
        this.set(this.rentaManagementAuditParams2TypesLanguageItemName, { language: `fi`, value: `Telineiden tyyppi(t)` }, { language: `en`, value: `Scaffolding type(s)` },);
        this.set(this.rentaManagementAuditParams2GuidesLanguageItemName, { language: `fi`, value: `Telineiden käyttöohje` }, { language: `en`, value: `Scaffolding guide(s)` },);
        this.set(this.rentaManagementAuditParams2CustomLanguageItemName, { language: `fi`, value: `Mukautettu opas` }, { language: `en`, value: `Custom guide` },);
        this.set(this.rentaManagementAuditParams1AuditorLanguageItemName, { language: `fi`, value: `Tarkastaja (suunnittelu)` }, { language: `en`, value: `Auditor (plannings)` },);
        this.set(this.rentaManagementAuditParams1AuditDateLanguageItemName, { language: `fi`, value: `Tarkastuspäivä` }, { language: `en`, value: `Audit date` },);
        this.set(this.rentaManagementAuditParams1HandoverDateLanguageItemName, { language: `fi`, value: `Luovutuspäivä` }, { language: `en`, value: `Handover date` },);
        this.set(this.rentaManagementAuditModuleHeadingIdLanguageItemName, { language: `fi`, value: `Moduulin id:` }, { language: `en`, value: `Module id:` },);
        this.set(this.rentaManagementAuditModuleHeadingNameLanguageItemName, { language: `fi`, value: `Moduulin nimi:` }, { language: `en`, value: `Module name:` },);
        this.set(this.rentaManagementAuditModuleHeadingTypeLanguageItemName, { language: `fi`, value: `Moduulin tyyppi:` }, { language: `en`, value: `Module type:` },);
        this.set(this.rentaManagementAuditModuleHeadingAssemblyLanguageItemName, { language: `fi`, value: `Asennustehtävä:` }, { language: `en`, value: `Assembly task:` },);
        this.set(this.rentaManagementAuditModuleHeadingAuditDateLanguageItemName, { language: `fi`, value: `Tarkastuspäivä:` }, { language: `en`, value: `Audit date:` },);
        this.set(this.rentaManagementAuditModuleHeadingAuditResultLanguageItemName, { language: `fi`, value: `Tarkastuksen tulos:` }, { language: `en`, value: `Audit result:` },);
        this.set(this.rentaManagementAuditModuleHeadingAuditApprovingLanguageItemName, { language: `fi`, value: `Tarkastuksen hyväksyminen:` }, { language: `en`, value: `Audit approving:` },);
        this.set(this.rentaManagementAuditModuleHeadingAuditSentLanguageItemName, { language: `fi`, value: `Tarkastus lähetetty:` }, { language: `en`, value: `Audit sent:` },);
        this.set(this.rentaManagementControllerStepsTitleSelectSiteLanguageItemName, { language: `fi`, value: `Valitse työmaa` }, { language: `en`, value: `Select site` },);
        this.set(this.rentaManagementControllerStepsTitleSelectAgreementLanguageItemName, { language: `fi`, value: `Valitse sopimus` }, { language: `en`, value: `Select agreement` },);
        this.set(this.rentaManagementControllerStepsTitleSelectModuleLanguageItemName, { language: `fi`, value: `Valitse moduuli` }, { language: `en`, value: `Select module` },);
        this.set(this.rentaManagementControllerStepsTitleAuditLanguageItemName, { language: `fi`, value: `Tarkastus` }, { language: `en`, value: `Audit` },);
        this.set(this.rentaManagementControllerStepsTitleDateLanguageItemName, { language: `fi`, value: `Päivämäärä` }, { language: `en`, value: `Date` },);
        this.set(this.rentaManagementControllerStepsTitleGuideLanguageItemName, { language: `fi`, value: `Opas` }, { language: `en`, value: `Guide` },);
        this.set(this.rentaManagementControllerStepsTitleParamsLanguageItemName, { language: `fi`, value: `Parametrit` }, { language: `en`, value: `Params` },);
        this.set(this.rentaManagementControllerStepsTitleCheckLanguageItemName, { language: `fi`, value: `Tarkastus` }, { language: `en`, value: `Check` },);
        this.set(this.rentaManagementControllerStepsTitleSummaryLanguageItemName, { language: `fi`, value: `Yhteenveto` }, { language: `en`, value: `Summary` },);
        this.set(this.rentaManagementControllerStepsTitleSaveAuditLanguageItemName, { language: `fi`, value: `Tallenna tarkastusraportti` }, { language: `en`, value: `Save audit` },);
        this.set(this.rentaManagementControllerQuestionFoundationLanguageItemName, { language: `fi`, value: `Perustus` }, { language: `en`, value: `Foundation` },);
        this.set(this.rentaManagementControllerQuestionUprightsLanguageItemName, { language: `fi`, value: `Pystytuet` }, { language: `en`, value: `Uprights` },);
        this.set(this.rentaManagementControllerQuestionBindingsAndSupportersLanguageItemName, { language: `fi`, value: `Vaakasiteet ja kannattajat` }, { language: `en`, value: `Horizontal bindings and supporters` },);
        this.set(this.rentaManagementControllerQuestionSideEndBindingsLanguageItemName, { language: `fi`, value: `Sivu -ja päätyvinositeet` }, { language: `en`, value: `Side and end binding` },);
        this.set(this.rentaManagementControllerQuestionAnchorageLanguageItemName, { language: `fi`, value: `Ankkurointi` }, { language: `en`, value: `Anchorage` },);
        this.set(this.rentaManagementControllerQuestionCounterTopsLanguageItemName, { language: `fi`, value: `Työtasot` }, { language: `en`, value: `Counter tops` },);
        this.set(this.rentaManagementControllerQuestionSafetyBarriersLanguageItemName, { language: `fi`, value: `Suojakaiteet` }, { language: `en`, value: `Safety barriers` },);
        this.set(this.rentaManagementControllerQuestionAscentWaysLanguageItemName, { language: `fi`, value: `Nousutiet` }, { language: `en`, value: `Ascent ways` },);
        this.set(this.rentaManagementControllerQuestionAuditCardLanguageItemName, { language: `fi`, value: `Telinetarkastuskortti` }, { language: `en`, value: `Scaffolding audit card` },);
        this.set(this.rentaManagementControllerQuestionCoversLanguageItemName, { language: `fi`, value: `Telinepeitteet` }, { language: `en`, value: `Scaffolding covers` },);
        this.set(this.enumDailyAllowanceMealLanguageItemName, { language: `fi`, value: `AK` }, { language: `sv`, value: `AK` }, { language: `en`, value: `AK` },);
        this.set(this.enumDailyAllowanceMealDescriptionLanguageItemName, { language: `fi`, value: `Ateriakorvaus` }, { language: `sv`, value: `Hel dag med \nmeal` }, { language: `en`, value: `Full day with \nmeal` },);
        this.set(this.enumDailyAllowanceDayLanguageItemName, { language: `fi`, value: `1` }, { language: `sv`, value: `1` }, { language: `en`, value: `1` },);
        this.set(this.enumDailyAllowanceDayDescriptionLanguageItemName, { language: `fi`, value: `Koko päivä` }, { language: `sv`, value: `Hel dag` }, { language: `en`, value: `Full day` },);
        this.set(this.enumDailyAllowanceHalfDayLanguageItemName, { language: `fi`, value: `1/2` }, { language: `sv`, value: `1/2` }, { language: `en`, value: `1/2` },);
        this.set(this.enumDailyAllowanceHalfDayDescriptionLanguageItemName, { language: `fi`, value: `Puoli päivää` }, { language: `sv`, value: `Halv dag` }, { language: `en`, value: `Half of the day` },);
        this.set(this.componentDropdownNothingSelectedLanguageItemName, { language: `fi`, value: `Ei mitään valittu` }, { language: `sv`, value: `Ingenting är valt` }, { language: `pl`, value: `PL: Nothing is selected` }, { language: `en`, value: `Nothing is selected` },);
        this.set(this.componentDropdownMultipleSelectedLanguageItemName, { language: `fi`, value: `{0} valittu` }, { language: `sv`, value: `{0} valt` }, { language: `pl`, value: `PL: {0} selected` }, { language: `en`, value: `{0} selected` },);
        this.set(this.dropdownGroupWarehousesLanguageItemName, { language: `fi`, value: `Varastot` }, { language: `sv`, value: `Lager` }, { language: `pl`, value: `PL: Warehouses` }, { language: `en`, value: `Warehouses` },);
        this.set(this.dropdownGroupConstructionSitesLanguageItemName, { language: `fi`, value: `Työmaat` }, { language: `sv`, value: `Byggplatser` }, { language: `pl`, value: `PL: Construction sites` }, { language: `en`, value: `Construction sites` },);
        this.set(this.rentaTasksDashboardSignInLanguageItemName, { language: `fi`, value: `Kirjaudu sisään` }, { language: `sv`, value: `Logga in` }, { language: `pl`, value: `PL: Sign-in` }, { language: `en`, value: `Sign-in` },);
        this.set(this.rentaTasksDashboardSignOutLanguageItemName, { language: `fi`, value: `Kirjaudu ulos` }, { language: `sv`, value: `SV: Sign-out` }, { language: `pl`, value: `PL: Sign-out` }, { language: `en`, value: `Sign-out` },);
        this.set(this.myAccountPageTitleLanguageItemName, { language: `fi`, value: `Tilin tiedot` }, { language: `sv`, value: `Mitt konto` }, { language: `pl`, value: `PL: My account` }, { language: `en`, value: `My account` },);
        this.set(this.myAccountPageSubtitleLanguageItemName, { language: `fi`, value: ` ` }, { language: `sv`, value: ` ` }, { language: `pl`, value: ` ` }, { language: `en`, value: ` ` },);
        this.set(this.myAccountPageMyInfoTabTitleLanguageItemName, { language: `fi`, value: `Tilin tiedot` }, { language: `sv`, value: `SV: My info` }, { language: `pl`, value: `PL: My info` }, { language: `en`, value: `My info` },);
        this.set(this.myAccountPageDataSavedLanguageItemName, { language: `fi`, value: `Tilin tiedot tallennettu` }, { language: `sv`, value: `SV: Account information updated successfully` }, { language: `pl`, value: `PL: Account information updated successfully` }, { language: `en`, value: `Account information updated successfully` },);
        this.set(this.myAccountPageMyDocumentsTabTitleLanguageItemName, { language: `fi`, value: `Dokumentit` }, { language: `sv`, value: `SV: My documents` }, { language: `pl`, value: `PL: My documents` }, { language: `en`, value: `My documents` },);
        this.set(this.myAccountPageAcceptanceLanguageItemName, { language: `fi`, value: `Olen lukenut ja hyväksyn` }, { language: `sv`, value: `SV: I have read and accept` }, { language: `pl`, value: `PL: I have read and accept` }, { language: `en`, value: `I have read and accept` },);
        this.set(this.myAccountPageAcceptanceRequiredLanguageItemName, { language: `fi`, value: `Sinun on hyväksyttävä käyttöehdot ja tietosuojaseloste voidaksesi käyttää sovellusta` }, { language: `sv`, value: `SV: You must accept terms of usage and privacy notice in order to use application` }, { language: `pl`, value: `PL: You must accept terms of usage and privacy notice in order to use application` }, { language: `en`, value: `You must accept terms of usage and privacy notice in order to use application` },);
        this.set(this.myAccountPageAcceptanceTermsLanguageItemName, { language: `fi`, value: `käyttöehdot` }, { language: `sv`, value: `SV: terms of use` }, { language: `pl`, value: `PL: terms of use` }, { language: `en`, value: `terms of use` },);
        this.set(this.myAccountPageAcceptanceTermsTitleLanguageItemName, { language: `fi`, value: `RENTA TASK-SOVELLUKSEN KÄYTTÖEHDOT` }, { language: `sv`, value: `SV: RENTAPRO-APPLICATIONS TERMS OF SERVICE` }, { language: `pl`, value: `PL: RENTAPRO-APPLICATIONS TERMS OF SERVICE` }, { language: `en`, value: `RENTA TASK-APPLICATIONS TERMS OF SERVICE` },);
        this.set(this.myAccountPageAcceptanceTermsContentLanguageItemName, { language: `fi`, value: `\n1.	Yleistä\n      \nRenta Task-sovelluksen (”Sovellus”) omistaa ja sen tarjoaa käyttöön Renta Group Oy ("Renta").\n\nAsentamalla sovelluksen ja/tai käyttämällä sovellusta Rekisteröity Asiakas tai Rekisteröitymätön Käyttäjä hyväksyy nämä käyttöehdot ("Käyttöehdot"). Mikäli Rekisteröity Asiakas tai Rekisteröitymätön Käyttäjä ei hyväksy näitä Käyttöehtoja, Rekisteröityneellä Asiakkaalla tai Rekisteröitymättöllä Käyttäjällä ei ole oikeutta asentaa, avata tai käyttää sovellusta.\n\nRenta pidättää oikeuden muuttaa näitä Käyttöehtoja milloin tahansa ilman ennakkoilmoitusta. Rekisteröityneen Asiakkaan tai Rekisteröitymättömän Käyttäjän katsotaan hyväksyneen päivitetyt Käyttöehdot käyttämällä sovellusta Käyttöehtoihin tehdyn muutoksen jälkeen.\n\n2.	Renta Task-sovellus\n      \nSovellus on Rentan Työntekijöilleen (Rekisteröidyt Käyttäjät) ja Rekisteröidyille Asiakkailleen. Sovellusta on mahdollista käyttää joko Rentan työntekijänä (Rekisteröity Käyttäjä) tai vaihtoehtoisesti rekisteröityneenä Asiakkaana asiakaskohtaisella käyttöoikeudella ("Rekisteröity Asiakas").\n      \n2.1 Rekisteröityneet Asiakkaat.\nRekisteröityminen Asiakkaaksi edellyttää olemassa olevaa asiakassuhdetta Rentaan. Rentalla on oikeus olla hyväksymättä rekisteröitymistä ja poistaa sovelluksen käyttöoikeus.\nRekisteröityneellä Asiakkaalla on mahdollisuus nähdä ja hyväksyä sovelluksen kautta hänen työmaitaan koskevia työraportteja sekä laskutusta.\n    \n2.2 Rekisteröityneet Käyttäjät\nRekisteröityminen Sovellukseen edellyttää olemassa olevaa työsuhdetta Rentaan. Rentalla on oikeus olla hyväksymättä rekisteröitymistä ja purkaa sovelluksen käyttöoikeus.\n\nRekisteröityneellä Käyttäjällä on mahdollisuus suorittaa työnohjauksen kannalta vaadittuja toimenpiteitä sovelluksen kautta.\n\nSovelluksen moitteettoman toiminnan varmistamiseksi Rekisteröityneen Asiakkaan ja Rekisteröidyn Käyttäjän tulee huolehtia siitä, että hänellä on käytössä viimeisin sovellusversio.\n      \n3.	Tuotevalikoma ja hinnasto\n      \nSovelluksessa esitetty tuotevalikoima vastaa Rentan normaalia tuotevalikoimaa. Tuotevalikoima, tuotteiden saatavuus sekä hintatiedot voivat vaihdella toimipisteittäin. Esitetyt hinnat eivät sisällä arvonlisäveroa. Arvonlisävero lisätään hintoihin laskutuksen yhteydessä\n\nSopimusasiakkaiden asiakaskohtaiset hintatiedot esitetään Sovelluksessa. Hintojen esittämistä voidaan rajata käyttöoikeuksilla.\n\nRenta ei vastaa Sovelluksessa esitettävien hinta- ja tuotetietojen tai muun aineiston mahdollisista virheistä, puutteista tai muista vioista.\n\n4.	Asiakaskohtaiset työraportit\n      \n4.1 Asiakaskohtaisen työraportin muodostuminen\nRekisteröityjen Käyttäjien asiakkaan tilauksesta tekemä työ muodostaa järjestelmään työraportin.\n\n4.2 Asiakaskohtaisen työraportin käsittely\nRekisteröityneellä Asiakkaalla on mahdollisuus tarkastella häntä koskevia työraportteja sekä hyväksyä että hylätä suoritetun työn työraportteja. Rentalla on oikeus laskuttaa työt hyväksytyn työraportin mukaisesti.\n\n5.	Asiakaskohtaiset laskut\n\n5.1	Asiakaskohtaisten laskujen tarkastelu\nRekisteröityneellä Asiakkaalla on sovelluksessa mahdollista tarkastella häntä koskevia laskuja. Mahdollisista virheellisistä laskuista tulee reklamoida Rentan ohjeistuksen mukaisesti.\n\n6.	Immateriaalioikeudet\n\nSovellus ja sen sisältö, mukaan lukien mm. tavaramerkit, toiminimet, tuotetiedot ja kuvat, ovat Rentan ja/tai sen yhteistyökumppanien omaisuutta, jota suojaavat mm. tekijänoikeuslaki sekä kansainväliset immateriaalioikeussopimukset. Kaikki oikeudet Sovellukseen ja sen sisältöön pidätetään. Nimenomaisesti todetaan, että Rekisteröitynyt Asiakas tai Rekisteröity Käyttäjä ei saa myöntää sovellukseen alilisenssiä, vuokrata, siirtää tai muuten jaella sovellusta tai sen käyttöoikeuksia muutoin kun miten näissä Käyttöehdoissa on sallittu.\n\nRekisteröityneellä Asiakkaalla tai Rekisteröityneellä Käyttäjällä ei ole oikeutta muuttaa, muunnella, poistaa, kopioida, julkaista, saattaa yleisön saataviin tai siirtää mitään immateriaalioikeuksien kohteita. Asiakkaan oikeus käyttää sovellusta rajoittuu ainoastaan näiden Käyttöehtojen mukaiseen käyttöön.\n\n7.	Käyttöoikeudet ja tunnukset\n\nRekisteröitynyt Asiakas hyväksyy itseään sitoviksi kaikki toimenpiteet, jotka on tehty Sovelluksen kautta Rekisteröityneen Asiakkaan tunnuksilla tai Rekisteröityneen Asiakkaan toimesta tai toimeksiannosta. Rekisteröityneen Asiakkaan tunnusten käyttö Sovelluksessa vastaa Rekisteröityneen Asiakkaan allekirjoitusta.\n\nRekisteröitynyt Asiakas on velvollinen säilyttämään tunnuksia huolellisesti. Mikäli Rekisteröitynyt Asiakas epäilee, että tunnukset tai salasana ovat joutuneet kolmannen osapuolen haltuun, tulee Rekisteröityneen Asiakkaan ilmoittaa siitä välittömästi Rentan yhteyshenkilölle. Yhteyshenkilö poistaa vanhat tunnukset ja avaa uudet. Rekisteröitynyt Asiakas vastaa kaikista käyttäjätunnuksellaan tehdyistä tilauksista sekä tunnuksien vaarantumisesta mahdollisesti aiheutuvista vahingoista.\n\nRenta toimittaa Asiakkaalle tunnukset hyväksyttyään Rekisteröityneen Asiakkaan rekisteröitymisen.\n\nRekisteröityneellä Asiakkaalla ja Rekisteröityneellä Käyttäjällä on vastuu ryhtyä tarpeellisiin toimenpiteisiin, jos hän havaitsee tai hänen tietoonsa saatetaan, että joku käyttäjistä toimii näiden Käyttöehtojen vastaisesti. Renta pidättää itsellään oikeuden lakkauttaa Rekisteröityneen Asiakkaan tai Rekisteröityneen Käyttäjän käyttöoikeuden, jos Rekisteröitynyt Asiakas tai Rekisteröitynyt Käyttäjä käyttää sovellusta näitä Käyttöehtojen vastaisesti.\n      \n8.	Rentan vastuu\n\nSovellus sisältöineen tarjotaan Rekisteröityneelle Asiakkaalle ja Rekisteröityneelle Käyttäjälle ”sellaisena kuin se on”. Renta ei vastaa Sovelluksessa välitettävän sisällön virheistä, puutteista tai muista vioista. Renta ei takaa Sovelluksen saatavuutta eikä sen keskeytyksetöntä tai virheetöntä toimintaa. Renta ei vastaa mistään kuluista, menetyksistä tai muista mahdollisista välittömistä tai välillisistä vahingoista, jotka saattavat aiheutua tämän Sovelluksen käyttämisestä, Sovelluksessa annetusta informaatiosta tai siitä, ettei Sovellus ole käytettävissä, jollei pakottavasta lainsäädännöstä muuta johdu. Joka tapauksessa Rentan vastuu on kuitenkin rajoitettu korkeintaan määrään, joka vastaa sovittua vuokrakaluston vuokraa ja/tai palvelun hintaa.\n\n9.	Evästeet\n\nRenta käyttää Sovelluksessa evästeitä (ns. cookie-toiminto). Eväste on Sovelluksen käytön yhteydessä käyttäjän selaimeen tallennettava tekstitiedosto. Evästeet mahdollistavat esimerkiksi Sovelluksen käyttäjämäärien seurannan ja tiedon keräämisen siitä, miten ja milloin Sovellusta käytetään.\n\nRekisteröitynyt Asiakas ja Rekisteröitymätön Käyttäjä voi kytkeä pois evästeiden käytön selaimensa asetuksista. Lisätietoja selainkohtaisista käyttöohjeista saa selaimen valmistajalta. Renta suosittelee evästeiden käyttöä Sovelluksessa parhaan mahdollisen käyttäjäkokemuksen saamiseksi.\n\n10.	Kolmansien osapuolien palvelut\n\nSovellus voi sisältää linkkejä kolmansien osapuolien omistamille tai ylläpitämille sivustoille. Renta ei vastaa tällaisten kolmansien osapuolien sivustojen toiminnasta, sisällöstä, aiheuttamista välittömistä tai välillisistä vahingoista tai muista ominaisuuksista. Näille sivuille siirtyessään käyttäjän tulee hyväksyä näiden sivujen mahdolliset käyttöehdot ja tietosuojaseloste ennen käytön aloittamista.\n\n11.	Henkilötietojen käsittely\n\nRenta käsittelee ja kerää Rekisteröityneiden Asiakkaiden henkilötietoja palvelujen toteuttamiseksi sekä asiakassuhteiden ylläpitämiseksi ja kehittämiseksi. Rentan tietosuojaselosteessa kuvataan henkilötietojen käsittelyä tarkemmin: https://renta.fi/en/privacy-policy-and-cookies \n\nRekisteröitymättömien Käyttäjien henkilötietoja ei kerätä.\n\n12.	Muut ehdot\n\nKonevuokraukseen ja palveluihin sovelletaan Rentan voimassaolevia vuokraehtoja. Vuosisopimusasiakkaiden kanssa noudatetaan vuosisopimusten mukaisia ehtoja. Asiakas sitoutuu jokaisen tilauksen yhteydessä voimassa oleviin toimitusehtoihin.\n\nRenta saattaa muuttaa, päivittää, peruuttaa tai poistaa Sovelluksen, Sovelluksen sisältöä tai osia niistä harkintansa mukaan. Rekisteröityneen Asiakkaan tai Rekisteröityneen Käyttäjän tulee lopettaa Sovelluksen käyttäminen, jos Rekisteröitynyt Asiakas tai Rekisteröitynyt Käyttäjä ei hyväksy muutoksia Sovelluksen Käyttöehdoissa tai tietosuojaselosteessa.\n\nRekisteröityneen Asiakkaan ja Rekisteröitymättömän Käyttäjän tulee käyttää Sovellusta sen sovelluskaupan käyttöehtojen mukaisesti, josta on hankkinut Sovelluksen. Rekisteröitynyt Asiakas ja Rekisteröitynyt Käyttäjä vastaa kaikissa tapauksissa vahingoista, jotka ovat aiheutuneet hänen toimiessaan näiden Käyttöehtojen mukaisesti.\n\nRekisteröitynyt Asiakas ja Rekisteröitynyt Käyttäjä vastaa antamiensa tietojen oikeellisuudesta, käyttäjätunnuksensa ja salasanansa huolellisesta säilyttämisestä sekä laitteensa asianmukaisen tietoturvan järjestämisestä. Rekisteröitynyt Asiakas ja Rekisteröitynyt Käyttäjä vastaa kaikesta tunnuksillaan tapahtuvasta asioinnista Sovelluksessa. \n\nPalvelun käyttämiseen ja näihin ehtoihin sovelletaan Suomen lakia lukuun ottamatta sen lainvalintaa koskevia säännöksiä.\n\nOsapuolet pyrkivät ratkaisemaan erimielisyydet ensisijaisesti neuvotteluteitse. Mikäli sovintoratkaisuun ei päästä, erimielisyydet ratkaistaan Helsingin käräjäoikeudessa. Kuluttaja-asiakas voi viedä erimielisyyden myös kuluttajariitalautakunnan ratkaistavaksi.\n\n13.	Yhteystiedot\n\nJos sinulla on kysyttävää näistä Käyttöehdoista tai Sovelluksesta, ota yhteyttä:\n      \nRenta Group Oy\nÄyritie 12 B\n01510 Vantaa \nSuomi\ninfo@renta.fi\nY-Tunnus 2732388-9\n    ` }, { language: `sv`, value: `SV:\n\n1	Common\n\nThe Renta Task Application (the “Application”) is owned and provided by Renta Group Oy (“Renta”).\n\nBy installing the Application and / or using the Application, the Registered Customer or the Unregistered User agrees to these Terms of Use (the "Terms of Use"). If the Registered Customer or the Unregistered User does not accept these Terms of Use, the Registered Customer or the Unregistered User does not have the right to install, open or use the application.\n\nRenta reserves the right to change these Terms of Use at any time without notice. A registered Customer or an Unregistered User shall be deemed to have accepted the updated Terms of Use by using the application after the change to the Terms of Use.\n\n2.	Renta Task application\n\nThe application is for Rentan Employees (Registered Users) and Registered Customers. It is possible to use the application either as an employee of Renta (Registered User) or alternatively as a registered Customer with a customer-specific license ("Registered Customer").\n\n2.1	Registered Customers.\nRegistering as a Customer requires an existing customer relationship with Renta. Renta has the right not to accept the registration and to revoke the license of the application.\n\nThe Registered Customer has the opportunity to view and approve work reports and invoicing for his construction sites through the application.\n\n2.2	Registered Users\nRegistration for the Application requires an existing employment relationship with Renta. Renta has the right not to accept the registration and to revoke the license of the application.\n\nThe Registered User has the opportunity to perform the actions required for work control through the application.\n\nTo ensure the proper operation of the application, the Registered Customer and the Registered User must ensure that they have the latest version of the application.\n\n3.	Product range and price list\n\nThe product range presented in the application corresponds to Renta's normal product range. Product range, product availability and price information may vary from location to location. Prices do not include VAT unless stated otherwise. VAT will be added to the rates upon invoicing.\n\nCustomer-specific price information for contract customers is presented in the Application. The presentation of prices may be limited by access rights.\n\nRenta is not responsible for any errors, omissions or other defects in the price and product information or other material presented in the Application.\n\n4.	Customer-Specific Work Reports\n\n4.1	Generation of a customer-specific work report\nThe work performed by the Registered Users on behalf of the customer forms a work report for the system.\n\n4.2	Processing a customer-specific work report\nThe Registered Customer has the opportunity to view the work reports concerning him or her and to accept and reject the work reports of the work performed. Renta has the right to invoice the work in accordance with the approved work report.\n\n5.	Customer-specific invoices\n\n5.1	Viewing Customer-Specific Invoices\nIt is possible for a registered Customer to view invoices concerning him in the application. Any incorrect invoices must be reclamed in accordance with Renta's instructions.\n\n6.	Intellectual Property Rights\n\nThe application and its content, including e.g. trademarks, trade names, product information and images are the property of Renta and / or its partners, which are protected by e.g. copyright law and international intellectual property agreements. All rights to the Application and its content are reserved. It is expressly stated that the Registered Customer or the Registered User may not sublicense, rent, transfer or otherwise distribute the Application or its rights to use the Application except as permitted in these Terms of Use.\n\nThe Registered Customer or the Registered User shall not have the right to change, modify, delete, copy, publish, make available to the public or transfer any intellectual property rights. Your right to use the application is limited to your use in accordance with these Terms of Use.\n\n7.	Permissions and access rights\n\nThe Registered Customer accepts as binding all measures taken through the Application with the registered Customer's credentials or by or on behalf of the Registered Customer. The use of Registered Customer credentials in the Application corresponds to the Registered Customer's signature.\n\nThe Registered Customer is obliged to keep the credentials carefully stored. If the Registered Customer suspects that the credentials have been forced to possession of a third party, the Registered Customer shall immediately inform the contact person of Renta about the situation. The contact person deletes the old credentials and opens the new ones. The Registered Customer is responsible for all orders placed with his / her username and for any damages that may result from compromising the credentials.\n\n8.	Rentan's responsibility\n\nThe application and its contents are provided to the Registered Customer and the Registered User “as is”. Renta is not responsible for any errors, omissions or other defects in the content transmitted in the Application. Renta does not guarantee the availability of the Application or its uninterrupted or error-free operation. Renta shall not be liable for any costs, losses or other possible direct or indirect damages that may arise from the use of this Application, the information provided in the Application or the non-availability of the Application, subject to mandatory legislation. In any case, Renta's liability is limited to a maximum amount corresponding to the agreed rental equipment rental and / or service price.\n\n9.	Cookies\n\nRenta uses cookies in the Application (so-called cookie function). A cookie is a text file stored in the user's browser when using the Application. For example, cookies make it possible to monitor the number of users of the Application and to collect information on how and when the Application is used.\n\nThe Registered Customer and the Unregistered User can disable the use of cookies in their browser settings. For more information on browser-specific instructions, contact your browser developer. Renta recommends the use of cookies in the Application in order to obtain the best possible user experience.\n\n10.	Third Party Services\n\nThe application may contain links to sites owned or operated by third parties. Renta is not responsible for the operation, content, direct or indirect damages or other features of such third party sites. By accessing these pages, the user must accept the terms of use of these pages and the Privacy Statement before using them.\n\n11.	Processing of personal data\n\nRenta processes and collects the personal data of Registered Customers in order to implement the services and to maintain and develop customer relationships. Renta's privacy statement describes the processing of personal data in more detail: https://renta.fi/en/privacy-policy-and-cookies\n\nThe personal data of unregistered Users will not be collected.\n\n12.	Other Terms\n\nRenta's valid rental terms apply to machine rental and services. The terms and conditions of the annual contracts are complied with with the customers of the annual contracts. The customer agrees to the delivery terms valid for each order.\n\nRenta may change, update, cancel or delete the Application, the contents of the Application or portions thereof at its sole discretion. The Registered Customer or the Registered User must stop using the Application if the Registered Customer or the Registered User does not accept the changes in the Terms of Use of the Application or the privacy statement.\n\nThe Registered Customer and the Unregistered User must use the Application in accordance with the terms of use of the application store from which they have acquired the Application. In all cases, the Registered Customer and the Registered User shall be liable for damages caused by his / her compliance with these Terms of Use.\n\nThe Registered Customer and the Registered User are responsible for the accuracy of the information they provide, for the careful storage of their username and password, and for the proper security of their equipment. The Registered Customer and the Registered User are responsible for all transactions in the Application with their credentials.\n\nThe use of the service and these terms and conditions are governed by Finnish law, except for its choice of law provisions.\n\nThe parties shall endeavor to resolve their differences primarily through negotiations. If no amicable settlement is reached, the disputes will be settled in the Helsinki District Court. The consumer customer can also take the dispute to the Consumer Disputes Board for resolution.\n\n13.	Contact\n\nIf you have any questions about these Terms of Use or the Application, please contact:\n\nRenta Group Oy\nÄyritie 12 B\n01510 Vantaa\nFinland\ninfo@renta.fi\nBusiness ID 2732388-9` }, { language: `pl`, value: `PL:\n\n1	Common\n\nThe Renta Task Application (the “Application”) is owned and provided by Renta Group Oy (“Renta”).\n\nBy installing the Application and / or using the Application, the Registered Customer or the Unregistered User agrees to these Terms of Use (the "Terms of Use"). If the Registered Customer or the Unregistered User does not accept these Terms of Use, the Registered Customer or the Unregistered User does not have the right to install, open or use the application.\n\nRenta reserves the right to change these Terms of Use at any time without notice. A registered Customer or an Unregistered User shall be deemed to have accepted the updated Terms of Use by using the application after the change to the Terms of Use.\n\n2.	Renta Task application\n\nThe application is for Rentan Employees (Registered Users) and Registered Customers. It is possible to use the application either as an employee of Renta (Registered User) or alternatively as a registered Customer with a customer-specific license ("Registered Customer").\n\n2.1	Registered Customers.\nRegistering as a Customer requires an existing customer relationship with Renta. Renta has the right not to accept the registration and to revoke the license of the application.\n\nThe Registered Customer has the opportunity to view and approve work reports and invoicing for his construction sites through the application.\n\n2.2	Registered Users\nRegistration for the Application requires an existing employment relationship with Renta. Renta has the right not to accept the registration and to revoke the license of the application.\n\nThe Registered User has the opportunity to perform the actions required for work control through the application.\n\nTo ensure the proper operation of the application, the Registered Customer and the Registered User must ensure that they have the latest version of the application.\n\n3.	Product range and price list\n\nThe product range presented in the application corresponds to Renta's normal product range. Product range, product availability and price information may vary from location to location. Prices do not include VAT unless stated otherwise. VAT will be added to the rates upon invoicing.\n\nCustomer-specific price information for contract customers is presented in the Application. The presentation of prices may be limited by access rights.\n\nRenta is not responsible for any errors, omissions or other defects in the price and product information or other material presented in the Application.\n\n4.	Customer-Specific Work Reports\n\n4.1	Generation of a customer-specific work report\nThe work performed by the Registered Users on behalf of the customer forms a work report for the system.\n\n4.2	Processing a customer-specific work report\nThe Registered Customer has the opportunity to view the work reports concerning him or her and to accept and reject the work reports of the work performed. Renta has the right to invoice the work in accordance with the approved work report.\n\n5.	Customer-specific invoices\n\n5.1	Viewing Customer-Specific Invoices\nIt is possible for a registered Customer to view invoices concerning him in the application. Any incorrect invoices must be reclamed in accordance with Renta's instructions.\n\n6.	Intellectual Property Rights\n\nThe application and its content, including e.g. trademarks, trade names, product information and images are the property of Renta and / or its partners, which are protected by e.g. copyright law and international intellectual property agreements. All rights to the Application and its content are reserved. It is expressly stated that the Registered Customer or the Registered User may not sublicense, rent, transfer or otherwise distribute the Application or its rights to use the Application except as permitted in these Terms of Use.\n\nThe Registered Customer or the Registered User shall not have the right to change, modify, delete, copy, publish, make available to the public or transfer any intellectual property rights. Your right to use the application is limited to your use in accordance with these Terms of Use.\n\n7.	Permissions and access rights\n\nThe Registered Customer accepts as binding all measures taken through the Application with the registered Customer's credentials or by or on behalf of the Registered Customer. The use of Registered Customer credentials in the Application corresponds to the Registered Customer's signature.\n\nThe Registered Customer is obliged to keep the credentials carefully stored. If the Registered Customer suspects that the credentials have been forced to possession of a third party, the Registered Customer shall immediately inform the contact person of Renta about the situation. The contact person deletes the old credentials and opens the new ones. The Registered Customer is responsible for all orders placed with his / her username and for any damages that may result from compromising the credentials.\n\n8.	Rentan's responsibility\n\nThe application and its contents are provided to the Registered Customer and the Registered User “as is”. Renta is not responsible for any errors, omissions or other defects in the content transmitted in the Application. Renta does not guarantee the availability of the Application or its uninterrupted or error-free operation. Renta shall not be liable for any costs, losses or other possible direct or indirect damages that may arise from the use of this Application, the information provided in the Application or the non-availability of the Application, subject to mandatory legislation. In any case, Renta's liability is limited to a maximum amount corresponding to the agreed rental equipment rental and / or service price.\n\n9.	Cookies\n\nRenta uses cookies in the Application (so-called cookie function). A cookie is a text file stored in the user's browser when using the Application. For example, cookies make it possible to monitor the number of users of the Application and to collect information on how and when the Application is used.\n\nThe Registered Customer and the Unregistered User can disable the use of cookies in their browser settings. For more information on browser-specific instructions, contact your browser developer. Renta recommends the use of cookies in the Application in order to obtain the best possible user experience.\n\n10.	Third Party Services\n\nThe application may contain links to sites owned or operated by third parties. Renta is not responsible for the operation, content, direct or indirect damages or other features of such third party sites. By accessing these pages, the user must accept the terms of use of these pages and the Privacy Statement before using them.\n\n11.	Processing of personal data\n\nRenta processes and collects the personal data of Registered Customers in order to implement the services and to maintain and develop customer relationships. Renta's privacy statement describes the processing of personal data in more detail: https://renta.fi/en/privacy-policy-and-cookies\n\nThe personal data of unregistered Users will not be collected.\n\n12.	Other Terms\n\nRenta's valid rental terms apply to machine rental and services. The terms and conditions of the annual contracts are complied with with the customers of the annual contracts. The customer agrees to the delivery terms valid for each order.\n\nRenta may change, update, cancel or delete the Application, the contents of the Application or portions thereof at its sole discretion. The Registered Customer or the Registered User must stop using the Application if the Registered Customer or the Registered User does not accept the changes in the Terms of Use of the Application or the privacy statement.\n\nThe Registered Customer and the Unregistered User must use the Application in accordance with the terms of use of the application store from which they have acquired the Application. In all cases, the Registered Customer and the Registered User shall be liable for damages caused by his / her compliance with these Terms of Use.\n\nThe Registered Customer and the Registered User are responsible for the accuracy of the information they provide, for the careful storage of their username and password, and for the proper security of their equipment. The Registered Customer and the Registered User are responsible for all transactions in the Application with their credentials.\n\nThe use of the service and these terms and conditions are governed by Finnish law, except for its choice of law provisions.\n\nThe parties shall endeavor to resolve their differences primarily through negotiations. If no amicable settlement is reached, the disputes will be settled in the Helsinki District Court. The consumer customer can also take the dispute to the Consumer Disputes Board for resolution.\n\n13.	Contact\n\nIf you have any questions about these Terms of Use or the Application, please contact:\n\nRenta Group Oy\nÄyritie 12 B\n01510 Vantaa\nFinland\ninfo@renta.fi\nBusiness ID 2732388-9` }, { language: `en`, value: `1	Common\n\nThe Renta Task Application (the “Application”) is owned and provided by Renta Group Oy (“Renta”).\n\nBy installing the Application and / or using the Application, the Registered Customer or the Unregistered User agrees to these Terms of Use (the "Terms of Use"). If the Registered Customer or the Unregistered User does not accept these Terms of Use, the Registered Customer or the Unregistered User does not have the right to install, open or use the application.\n\nRenta reserves the right to change these Terms of Use at any time without notice. A registered Customer or an Unregistered User shall be deemed to have accepted the updated Terms of Use by using the application after the change to the Terms of Use.\n\n2.	Renta Task application\n\nThe application is for Rentan Employees (Registered Users) and Registered Customers. It is possible to use the application either as an employee of Renta (Registered User) or alternatively as a registered Customer with a customer-specific license ("Registered Customer").\n\n2.1	Registered Customers.\nRegistering as a Customer requires an existing customer relationship with Renta. Renta has the right not to accept the registration and to revoke the license of the application.\n\nThe Registered Customer has the opportunity to view and approve work reports and invoicing for his construction sites through the application.\n\n2.2	Registered Users\nRegistration for the Application requires an existing employment relationship with Renta. Renta has the right not to accept the registration and to revoke the license of the application.\n\nThe Registered User has the opportunity to perform the actions required for work control through the application.\n\nTo ensure the proper operation of the application, the Registered Customer and the Registered User must ensure that they have the latest version of the application.\n\n3.	Product range and price list\n\nThe product range presented in the application corresponds to Renta's normal product range. Product range, product availability and price information may vary from location to location. Prices do not include VAT unless stated otherwise. VAT will be added to the rates upon invoicing.\n\nCustomer-specific price information for contract customers is presented in the Application. The presentation of prices may be limited by access rights.\n\nRenta is not responsible for any errors, omissions or other defects in the price and product information or other material presented in the Application.\n\n4.	Customer-Specific Work Reports\n\n4.1	Generation of a customer-specific work report\nThe work performed by the Registered Users on behalf of the customer forms a work report for the system.\n\n4.2	Processing a customer-specific work report\nThe Registered Customer has the opportunity to view the work reports concerning him or her and to accept and reject the work reports of the work performed. Renta has the right to invoice the work in accordance with the approved work report.\n\n5.	Customer-specific invoices\n\n5.1	Viewing Customer-Specific Invoices\nIt is possible for a registered Customer to view invoices concerning him in the application. Any incorrect invoices must be reclamed in accordance with Renta's instructions.\n\n6.	Intellectual Property Rights\n\nThe application and its content, including e.g. trademarks, trade names, product information and images are the property of Renta and / or its partners, which are protected by e.g. copyright law and international intellectual property agreements. All rights to the Application and its content are reserved. It is expressly stated that the Registered Customer or the Registered User may not sublicense, rent, transfer or otherwise distribute the Application or its rights to use the Application except as permitted in these Terms of Use.\n\nThe Registered Customer or the Registered User shall not have the right to change, modify, delete, copy, publish, make available to the public or transfer any intellectual property rights. Your right to use the application is limited to your use in accordance with these Terms of Use.\n\n7.	Permissions and access rights\n\nThe Registered Customer accepts as binding all measures taken through the Application with the registered Customer's credentials or by or on behalf of the Registered Customer. The use of Registered Customer credentials in the Application corresponds to the Registered Customer's signature.\n\nThe Registered Customer is obliged to keep the credentials carefully stored. If the Registered Customer suspects that the credentials have been forced to possession of a third party, the Registered Customer shall immediately inform the contact person of Renta about the situation. The contact person deletes the old credentials and opens the new ones. The Registered Customer is responsible for all orders placed with his / her username and for any damages that may result from compromising the credentials.\n\n8.	Rentan's responsibility\n\nThe application and its contents are provided to the Registered Customer and the Registered User “as is”. Renta is not responsible for any errors, omissions or other defects in the content transmitted in the Application. Renta does not guarantee the availability of the Application or its uninterrupted or error-free operation. Renta shall not be liable for any costs, losses or other possible direct or indirect damages that may arise from the use of this Application, the information provided in the Application or the non-availability of the Application, subject to mandatory legislation. In any case, Renta's liability is limited to a maximum amount corresponding to the agreed rental equipment rental and / or service price.\n\n9.	Cookies\n\nRenta uses cookies in the Application (so-called cookie function). A cookie is a text file stored in the user's browser when using the Application. For example, cookies make it possible to monitor the number of users of the Application and to collect information on how and when the Application is used.\n\nThe Registered Customer and the Unregistered User can disable the use of cookies in their browser settings. For more information on browser-specific instructions, contact your browser developer. Renta recommends the use of cookies in the Application in order to obtain the best possible user experience.\n\n10.	Third Party Services\n\nThe application may contain links to sites owned or operated by third parties. Renta is not responsible for the operation, content, direct or indirect damages or other features of such third party sites. By accessing these pages, the user must accept the terms of use of these pages and the Privacy Statement before using them.\n\n11.	Processing of personal data\n\nRenta processes and collects the personal data of Registered Customers in order to implement the services and to maintain and develop customer relationships. Renta's privacy statement describes the processing of personal data in more detail: https://renta.fi/en/privacy-policy-and-cookies\n\nThe personal data of unregistered Users will not be collected.\n\n12.	Other Terms\n\nRenta's valid rental terms apply to machine rental and services. The terms and conditions of the annual contracts are complied with with the customers of the annual contracts. The customer agrees to the delivery terms valid for each order.\n\nRenta may change, update, cancel or delete the Application, the contents of the Application or portions thereof at its sole discretion. The Registered Customer or the Registered User must stop using the Application if the Registered Customer or the Registered User does not accept the changes in the Terms of Use of the Application or the privacy statement.\n\nThe Registered Customer and the Unregistered User must use the Application in accordance with the terms of use of the application store from which they have acquired the Application. In all cases, the Registered Customer and the Registered User shall be liable for damages caused by his / her compliance with these Terms of Use.\n\nThe Registered Customer and the Registered User are responsible for the accuracy of the information they provide, for the careful storage of their username and password, and for the proper security of their equipment. The Registered Customer and the Registered User are responsible for all transactions in the Application with their credentials.\n\nThe use of the service and these terms and conditions are governed by Finnish law, except for its choice of law provisions.\n\nThe parties shall endeavor to resolve their differences primarily through negotiations. If no amicable settlement is reached, the disputes will be settled in the Helsinki District Court. The consumer customer can also take the dispute to the Consumer Disputes Board for resolution.\n\n13.	Contact\n\nIf you have any questions about these Terms of Use or the Application, please contact:\n\nRenta Group Oy\nÄyritie 12 B\n01510 Vantaa\nFinland\ninfo@renta.fi\nBusiness ID 2732388-9` },);
        this.set(this.myAccountPageAcceptancePrivacyNoticeLanguageItemName, { language: `fi`, value: `tietosuojaselosteen` }, { language: `sv`, value: `SV: privacy notice` }, { language: `pl`, value: `PL: privacy notice` }, { language: `en`, value: `privacy notice` },);
        this.set(this.myAccountPageAcceptancePrivacyNoticeTitleLanguageItemName, { language: `fi`, value: `RENTA TASK-SOVELLUKSEN TIETOSUOJASELOSTE` }, { language: `sv`, value: `SV: RENTAPRO-APPLICATIONS PRIVACY POLICY` }, { language: `pl`, value: `PL: RENTAPRO-APPLICATIONS PRIVACY POLICY` }, { language: `en`, value: `RENTA TASK-APPLICATIONS PRIVACY POLICY` },);
        this.set(this.myAccountPageAcceptancePrivacyNoticeContentLanguageItemName, { language: `fi`, value: `\nHenkilötietolaki 22.4.1999/523 10 ja 24 §\nLaadittu: 16.10.2019\n      \n1.	Rekisterinpitäjä \nRenta Group Oy\nY-tunnus: 2732388-9 \nOsoite: Äyritie 12B, 01510 Vantaa Suomi\n\n2.	Rekisteriasioista vastaava henkilö ja/tai yhteyshenkilö\nTietohallintojohtaja Joel Särkkä\nPuhelinnumero: +35850 323 5569 Sähköposti: joel.sarkka@renta.fi\n      \n3.	Rekisterin nimi\nRenta Group Oy:n Renta Task -sovelluksen käyttäjärekisteri.\n\n4.	Henkilötietojen käsittelyn tarkoitus\nRenta Group Oy ja sen tytäryhtiöt käsittelevät henkilötietoja henkilön tunnistamisteen palvelussa, luottotietojen tarkastukseen, suoramarkkinointiin, asiakasviestintään, työsuhteen vaatimusten täyttämiseksi sekä laskutuksen ja henkilökohtaisen asiakaspalvelun mahdollistamiseen.\n\nLisäksi rekisterin sisältäminen henkilötietojen käsittely mahdollistaa palveluun kirjautumisen, palvelun tilaamisen ja sen tuottamisen sekä palvelun kehittämisen.\n\n5.	Rekisterin tietosisältö\nRekisterissä voidaan käsitellä seuraavia tietoja:\n•	Rekisteröidyn perustiedot\n        o	nimi \n        o	henkilötunnus\n        o	postiosoite\n        o	puhelinnumero\n        o	sähköpostiosoite\n        o	Asema yrityksessä\n        o	Rekisteröidyn suostumus suoramarkkinointiin\n        o	Yrityksen tiedot\n•	Asiakuuteen liittyvät tiedot\n        o	palveluhistoria\n        o	luottotietomerkinnät\n        o	muut asiakkaan syöttämät merkinnät\n•	Teknisen tiedot\n        o	Sijaintitiedot\n        o	IP-osoite\n        o	Laitteen tunnistetiedot\n        o	mainonta-ID\n        o	käyttöjärjestelmä\n        o	selaintyyppi\n        o	muita yksityiskohtia laitteistosta \n      \n6.	Säännönmukaiset tietolähteet\nHenkilötietoja kerätään rekisteröidyltä itseltään sekä Intrum luottotietopalvelun kautta.\n\n7.	Säännönmukaiset tietojen luovutukset ja tietojen siirto EU:n tai Euroopan talousalueen ulkopuolelle \nTietoja ei luovuteta EU:n tai ETA-alueen ulkopuolelle.\n\n8.	Evästeiden käyttö verkkopalvelussa\nKäytämme verkkopalvelussa evästeitä. Eväste on pieni, käyttäjän tietokoneelle tallennettava tekstitiedosto, joka mahdollistaa palvelun turvallisen, tehokkaan ja käyttäjäystävällisen käytön.\n\nEvästeiden poiskytkeminen sekä poistaminen ovat mahdollisia selaimen asetuksissa.\n\n9.	Rekisterin suojauksen periaatteet\nRekisterin sisältämät henkilötiedot käsitellään aina luottamuksellisina. Rekisterin sisältämien tietojen käsittelyn periaatteet ovat tietoja käsittelevissä organisaatioissa ohjeistettu ja dokumentoitu.\n\nTietojärjestelmä on suojattu palomuurilla.\n\nVerkkosivustolla tietojen siirto suojataan SSL-suojatulla yhteydellä.\n\n10.	Rekisteröidyn kielto-oikeus\nRekisteröidyllä on oikeus kieltää rekisterinpitäjää käsittelemästä häntä itseään koskevia tietoja suoramainontaa, etämyyntiä ja muuta suoramarkkinointia sekä markkina- ja mielipidetutkimusta samoin kuin henkilömatrikkelia ja sukututkimusta varten. Kielto voidaan asettaa mobiilisovelluksen tai asiakasportaalin kautta.\n\n11.	Rekisteröidyn tarkastusoikeus\nRekisteröidyllä on oikeus tarkastaa rekisteriin tallennetut itseään koskevat tiedot ja saada niistä kopiot ilmaiseksi enintään kerran vuodessa.\n\nTarkastuspyyntö tulee tehdä sähköpostitse sellaisesta sähköpostiosoitteesta, joka voidaan rekisterin avulla varmistaa kuuluvan rekisteröidylle.\n\n12.	Tiedon korjaaminen\nRekisterinpitäjä oikaisee, poistaa tai täydentää rekisterissä olevan, käsittelyn tarkoituksen kannalta virheellisen, tarpeettoman, puutteellisen tai vanhentuneen henkilötiedon oma-aloitteisesti tai rekisteröidyn vaatimuksesta. Lisäksi henkilötietoja voidaan poistaa, mikäli asiakas väärinkäyttää palvelua tai harjoittaa palvelun avulla rikollista tai muuta kiellettyä toimintaa.` }, { language: `sv`, value: `SV:\n\nSections 10 and 24 of the Personal Data Act 22.4.1999 / 523\nPrepared: 16.10.2019\n\n1.	The Registrar\nRenta Group Oy\nBusiness ID: 2732388-9\nAddress: Äyritie 12B, 01510 Vantaa Finland\n\n2.	The person responsible for registration and / or the contact person\nCIO Joel Särkkä\nPhone number: +35850 323 5569\nEmail: joel.sarkka@renta.fi\n\n3.	Name of the register\nUser register of Renta Group Oy's Renta Task application.\n\n4.	Purpose of the processing of personal data\nRenta Group Oy and its subsidiaries process personal data in the personal identification service, credit information verification, direct marketing, customer communications, to meet employment requirements, and to enable invoicing and personal customer service.\n\nIn addition, the inclusion of the register in the processing of personal data enables logging in to the service, ordering and producing the service, and developing the service.\n\n5.	Information content of the register\nThe following information can be processed in the register:\n•	Basic information of the data subject\n        o	name\n        o	personal identification number\n        o	mail address\n        o	phone number\n        o	e-mail address\n        o	Position in the company\n        o	Consent of the data subject to direct marketing\n•	Company information\n        o	customer related information\n        o	service history\n        o	credit data entries\n        o	 other entries entered by the customer\n•	Technical information\n        o	location information\n        o	IP address\n        o	Device identification\n        o	advertising ID\n        o	operating system\n        o	browser type\n        o	other hardware details\n\n6. Regular sources of information\nPersonal information is collected from the registrant himself and through the Intrum credit information service.\n\n7. Regular data transfers and data transfers outside the EU or the European Economic Area\nThe data will not be disclosed outside the EU or the EEA.\n\n8. Use of cookies in the online service\nWe use cookies in the online service. A cookie is a small text file stored on a user's computer that enables safe, efficient and user-friendly use of the service.\n\nYou can disable and delete cookies in your browser settings.\n\n9. Registry Security Principles\nThe personal data contained in the register will always be treated as confidential. The principles of processing the data contained in the register are instructed and documented in the organizations processing the data.\n\nThe information system is protected by a firewall.\n\nOn the website, data transfer is secured with an SSL-secured connection.\n\n10. Right of prohibition of the data subject\nThe data subject shall have the right to prohibit the controller from processing personal data concerning him or her for direct mail, distance selling and other direct marketing, as well as for market and opinion research, as well as for personal registration and genealogy. The ban can be set via the mobile application or the customer portal.\n\n11. Right of inspection of the data subject\nThe data subject has the right to inspect the personal data stored in the register and to receive copies of it free of charge up to once a year.\n\nThe request for verification must be made by e-mail from an e-mail address that can be verified by the register to belong to the data subject.\n\n12. Correction of information\nThe controller shall correct, delete or supplement personal data in the register that are incorrect, unnecessary, incomplete or out of date for the purpose of processing on its own initiative or at the request of the data subject. In addition, personal data may be deleted if the customer misuses the service or engages in criminal or other prohibited activities using the service.` }, { language: `pl`, value: `PL:\n\nSections 10 and 24 of the Personal Data Act 22.4.1999 / 523\nPrepared: 16.10.2019\n\n1.	The Registrar\nRenta Group Oy\nBusiness ID: 2732388-9\nAddress: Äyritie 12B, 01510 Vantaa Finland\n\n2.	The person responsible for registration and / or the contact person\nCIO Joel Särkkä\nPhone number: +35850 323 5569\nEmail: joel.sarkka@renta.fi\n\n3.	Name of the register\nUser register of Renta Group Oy's Renta Task application.\n\n4.	Purpose of the processing of personal data\nRenta Group Oy and its subsidiaries process personal data in the personal identification service, credit information verification, direct marketing, customer communications, to meet employment requirements, and to enable invoicing and personal customer service.\n\nIn addition, the inclusion of the register in the processing of personal data enables logging in to the service, ordering and producing the service, and developing the service.\n\n5.	Information content of the register\nThe following information can be processed in the register:\n•	Basic information of the data subject\n        o	name\n        o	personal identification number\n        o	mail address\n        o	phone number\n        o	e-mail address\n        o	Position in the company\n        o	Consent of the data subject to direct marketing\n•	Company information\n        o	customer related information\n        o	service history\n        o	credit data entries\n        o	 other entries entered by the customer\n•	Technical information\n        o	location information\n        o	IP address\n        o	Device identification\n        o	advertising ID\n        o	operating system\n        o	browser type\n        o	other hardware details\n\n6. Regular sources of information\nPersonal information is collected from the registrant himself and through the Intrum credit information service.\n\n7. Regular data transfers and data transfers outside the EU or the European Economic Area\nThe data will not be disclosed outside the EU or the EEA.\n\n8. Use of cookies in the online service\nWe use cookies in the online service. A cookie is a small text file stored on a user's computer that enables safe, efficient and user-friendly use of the service.\n\nYou can disable and delete cookies in your browser settings.\n\n9. Registry Security Principles\nThe personal data contained in the register will always be treated as confidential. The principles of processing the data contained in the register are instructed and documented in the organizations processing the data.\n\nThe information system is protected by a firewall.\n\nOn the website, data transfer is secured with an SSL-secured connection.\n\n10. Right of prohibition of the data subject\nThe data subject shall have the right to prohibit the controller from processing personal data concerning him or her for direct mail, distance selling and other direct marketing, as well as for market and opinion research, as well as for personal registration and genealogy. The ban can be set via the mobile application or the customer portal.\n\n11. Right of inspection of the data subject\nThe data subject has the right to inspect the personal data stored in the register and to receive copies of it free of charge up to once a year.\n\nThe request for verification must be made by e-mail from an e-mail address that can be verified by the register to belong to the data subject.\n\n12. Correction of information\nThe controller shall correct, delete or supplement personal data in the register that are incorrect, unnecessary, incomplete or out of date for the purpose of processing on its own initiative or at the request of the data subject. In addition, personal data may be deleted if the customer misuses the service or engages in criminal or other prohibited activities using the service.` }, { language: `en`, value: `Sections 10 and 24 of the Personal Data Act 22.4.1999 / 523\nPrepared: 16.10.2019\n\n1.	The Registrar\nRenta Group Oy\nBusiness ID: 2732388-9\nAddress: Äyritie 12B, 01510 Vantaa Finland\n\n2.	The person responsible for registration and / or the contact person\nCIO Joel Särkkä\nPhone number: +35850 323 5569\nEmail: joel.sarkka@renta.fi\n\n3.	Name of the register\nUser register of Renta Group Oy's Renta Task application.\n\n4.	Purpose of the processing of personal data\nRenta Group Oy and its subsidiaries process personal data in the personal identification service, credit information verification, direct marketing, customer communications, to meet employment requirements, and to enable invoicing and personal customer service.\n\nIn addition, the inclusion of the register in the processing of personal data enables logging in to the service, ordering and producing the service, and developing the service.\n\n5.	Information content of the register\nThe following information can be processed in the register:\n•	Basic information of the data subject\n        o	name\n        o	personal identification number\n        o	mail address\n        o	phone number\n        o	e-mail address\n        o	Position in the company\n        o	Consent of the data subject to direct marketing\n•	Company information\n        o	customer related information\n        o	service history\n        o	credit data entries\n        o	 other entries entered by the customer\n•	Technical information\n        o	location information\n        o	IP address\n        o	Device identification\n        o	advertising ID\n        o	operating system\n        o	browser type\n        o	other hardware details\n\n6. Regular sources of information\nPersonal information is collected from the registrant himself and through the Intrum credit information service.\n\n7. Regular data transfers and data transfers outside the EU or the European Economic Area\nThe data will not be disclosed outside the EU or the EEA.\n\n8. Use of cookies in the online service\nWe use cookies in the online service. A cookie is a small text file stored on a user's computer that enables safe, efficient and user-friendly use of the service.\n\nYou can disable and delete cookies in your browser settings.\n\n9. Registry Security Principles\nThe personal data contained in the register will always be treated as confidential. The principles of processing the data contained in the register are instructed and documented in the organizations processing the data.\n\nThe information system is protected by a firewall.\n\nOn the website, data transfer is secured with an SSL-secured connection.\n\n10. Right of prohibition of the data subject\nThe data subject shall have the right to prohibit the controller from processing personal data concerning him or her for direct mail, distance selling and other direct marketing, as well as for market and opinion research, as well as for personal registration and genealogy. The ban can be set via the mobile application or the customer portal.\n\n11. Right of inspection of the data subject\nThe data subject has the right to inspect the personal data stored in the register and to receive copies of it free of charge up to once a year.\n\nThe request for verification must be made by e-mail from an e-mail address that can be verified by the register to belong to the data subject.\n\n12. Correction of information\nThe controller shall correct, delete or supplement personal data in the register that are incorrect, unnecessary, incomplete or out of date for the purpose of processing on its own initiative or at the request of the data subject. In addition, personal data may be deleted if the customer misuses the service or engages in criminal or other prohibited activities using the service.` },);
        this.set(this.myAccountPageUserAlreadyExistsLanguageItemName, { language: `fi`, value: `Käyttäjä, jolla on sama sähköposti- tai puhelinnumero, on jo olemassa.` }, { language: `sv`, value: `SV: User with same email or phone number already exists.` }, { language: `pl`, value: `PL: User with same email or phone number already exists.` }, { language: `en`, value: `User with same email or phone number already exists.` },);
        this.set(this.loginPageSsoUserNotFoundLanguageItemName, { language: `fi`, value: `Kirjautuminen epäonnistui, käyttäjää ei löydy.` }, { language: `sv`, value: `Inloggningen misslyckades, avändaren hittades inte.` }, { language: `pl`, value: `PL: Login failed, user not found.` }, { language: `en`, value: `Login failed, user not found.` },);
        this.set(this.loginPageSsoFailedLanguageItemName, { language: `fi`, value: `Kirjautuminen epäonnistui, ota yhteyttä asiakaspalveluun.` }, { language: `sv`, value: `Inloggningen misslyckades, kontakta kundtjänsten.` }, { language: `pl`, value: `PL: Login failed, contact support to solve the issue.` }, { language: `en`, value: `Login failed, contact support to solve the issue.` },);
        this.set(this.enumCustomerApprovalTypeEmailLanguageItemName, { language: `fi`, value: `Sähköposti` }, { language: `sv`, value: `Per email` }, { language: `pl`, value: `PL: By email` }, { language: `en`, value: `By email` },);
        this.set(this.enumCustomerApprovalTypePhoneLanguageItemName, { language: `fi`, value: `Valmiiksi hyväksytty` }, { language: `sv`, value: `Per telefon` }, { language: `pl`, value: `PL: By phone` }, { language: `en`, value: `By phone` },);
        this.set(this.enumCustomerApprovalTypePhoneDescriptionLanguageItemName, { language: `fi`, value: `Asiakas hyväksyy puhelimessa` }, { language: `sv`, value: `Raporten är redan godkännd av kunden per telefon` }, { language: `pl`, value: `PL: Report already approved by customer by phone` }, { language: `en`, value: `Report already approved by customer by phone` },);
        this.set(this.enumCustomerApprovalTypeEmailDescriptionLanguageItemName, { language: `fi`, value: `Asiakas hyväskyy sähköpostilla` }, { language: `sv`, value: `Raporten kommer att godkännas av kunden via email` }, { language: `pl`, value: `PL: Report will be approved by customer through email` }, { language: `en`, value: `Report will be approved by customer through email` },);
        this.set(this.enumCustomerApprovalTypeSignatureLanguageItemName, { language: `fi`, value: `Allekirjoitus` }, { language: `sv`, value: `Kundens underskrift` }, { language: `pl`, value: `PL: Customer signature` }, { language: `en`, value: `Customer signature` },);
        this.set(this.enumCustomerApprovalTypeSignatureDescriptionLanguageItemName, { language: `fi`, value: `Asiakas voi allekirjoittaa sovelluksessa` }, { language: `sv`, value: `Kunden kan skriva under raporten i applikationen` }, { language: `pl`, value: `PL: Customer can sign report in the application` }, { language: `en`, value: `Customer can sign report in the application` },);
        this.set(this.enumDailyAllowanceNoneLanguageItemName, { language: `fi`, value: `0` }, { language: `sv`, value: `0` }, { language: `en`, value: `0` },);
        this.set(this.enumDailyAllowanceNoneDescriptionLanguageItemName, { language: `fi`, value: `Ei päivärahaa` }, { language: `sv`, value: `Ingen dagpenning` }, { language: `en`, value: `No daily\nallowance` },);
        this.set(this.enumUserDocumentTypeCraneCertificateLanguageItemName, { language: `fi`, value: `Nosturitodistus` }, { language: `sv`, value: `lyft certifikat` }, { language: `pl`, value: `PL: Crane certificate` }, { language: `en`, value: `Crane certificate` },);
        this.set(this.enumUserDocumentTypeDrivingLicenceLanguageItemName, { language: `fi`, value: `Ajokortti` }, { language: `sv`, value: `Körkort` }, { language: `pl`, value: `PL: Driving licence` }, { language: `en`, value: `Driving licence` },);
        this.set(this.enumUserDocumentTypeElectricalSafetyCardLanguageItemName, { language: `fi`, value: `Sähköturvallisuuskortti` }, { language: `sv`, value: `El säkerhets kort` }, { language: `pl`, value: `PL: Electrical safety card` }, { language: `en`, value: `Electrical safety card` },);
        this.set(this.enumUserDocumentTypeFireWorkCardLanguageItemName, { language: `fi`, value: `Tulityökortti` }, { language: `sv`, value: `Het arbets kort` }, { language: `pl`, value: `PL: Fire work card` }, { language: `en`, value: `Fire work card` },);
        this.set(this.enumUserDocumentTypeFirstAidCardLanguageItemName, { language: `fi`, value: `Ensiapukortti` }, { language: `sv`, value: `Första hjälp kort` }, { language: `pl`, value: `PL: First aid card` }, { language: `en`, value: `First aid card` },);
        this.set(this.enumUserDocumentTypeForkliftCardLanguageItemName, { language: `fi`, value: `Trukinajolupa` }, { language: `sv`, value: `Gaffeltrucks kort` }, { language: `pl`, value: `PL: Forklift card` }, { language: `en`, value: `Forklift card` },);
        this.set(this.enumUserDocumentTypeIdCardLanguageItemName, { language: `fi`, value: `Valttikortti` }, { language: `sv`, value: `Arbetar ID kort` }, { language: `pl`, value: `PL: Worker id card` }, { language: `en`, value: `Worker id card` },);
        this.set(this.enumUserDocumentTypeLifterCardLanguageItemName, { language: `fi`, value: `Nostin` }, { language: `sv`, value: `Lyft kort` }, { language: `pl`, value: `PL: Lifter card` }, { language: `en`, value: `Lifter card` },);
        this.set(this.enumUserDocumentTypeRoadSafetyCardLanguageItemName, { language: `fi`, value: `Tieturvakortti` }, { language: `sv`, value: `Trafiksäkehets kort` }, { language: `pl`, value: `PL: Road safety card` }, { language: `en`, value: `Road safety card` },);
        this.set(this.enumUserDocumentTypeRoofFireWorkCardLanguageItemName, { language: `fi`, value: `Katon palotyökortti` }, { language: `sv`, value: `Tak brandarbets kort` }, { language: `pl`, value: `PL: Roof fire work card` }, { language: `en`, value: `Roof fire work card` },);
        this.set(this.enumUserDocumentTypeWetRoomCertificateLanguageItemName, { language: `fi`, value: `Vesityötodistus` }, { language: `sv`, value: `Våtutrymmes certifikat` }, { language: `pl`, value: `PL: Wet room certificate` }, { language: `en`, value: `Wet room certificate` },);
        this.set(this.enumUserDocumentTypeWorkSafetyCardLanguageItemName, { language: `fi`, value: `Työturvallisuuskortti` }, { language: `sv`, value: `Arbetssäkerhets kort` }, { language: `pl`, value: `PL: Work safety card` }, { language: `en`, value: `Work safety card` },);
        this.set(this.enumModuleModelUndefinedLanguageItemName, { language: `fi`, value: `---` }, { language: `sv`, value: `---` }, { language: `pl`, value: `---` }, { language: `en`, value: `---` },);
        this.set(this.enumModuleModelModuleLanguageItemName, { language: `fi`, value: `Moduuli` }, { language: `sv`, value: `Modul` }, { language: `pl`, value: `PL: Module` }, { language: `en`, value: `Module` },);
        this.set(this.enumModuleModelModulesLanguageItemName, { language: `fi`, value: `Moduulit` }, { language: `sv`, value: `SV: Modules` }, { language: `pl`, value: `PL: Modules` }, { language: `en`, value: `Modules` },);
        this.set(this.enumModuleModelPerimeterFrameLanguageItemName, { language: `fi`, value: `Kehäteline` }, { language: `sv`, value: `Ställning` }, { language: `pl`, value: `PL: Perimeter frame` }, { language: `en`, value: `Perimeter frame` },);
        this.set(this.enumModuleModelWeatherShelterLanguageItemName, { language: `fi`, value: `Sääsuoja` }, { language: `sv`, value: `Väderskydd` }, { language: `pl`, value: `PL: Weather shelter` }, { language: `en`, value: `Weather shelter` },);
        this.set(this.moduleModelCustomLanguageItemName, { language: `fi`, value: `Mukautettu` }, { language: `en`, value: `Custom` },);
        this.set(this.enumUserDocumentLevelFirstLanguageItemName, { language: `fi`, value: `Taso 1` }, { language: `sv`, value: `Nivå 1` }, { language: `pl`, value: `PL: First` }, { language: `en`, value: `First` },);
        this.set(this.enumUserDocumentLevelSecondLanguageItemName, { language: `fi`, value: `Taso 2` }, { language: `sv`, value: `Nivå 2` }, { language: `pl`, value: `PL: Second` }, { language: `en`, value: `Second` },);
        this.set(this.enumContractTaskTypeAssemblyLanguageItemName, { language: `fi`, value: `Asennus` }, { language: `sv`, value: `Installation` }, { language: `pl`, value: `PL: Assembly` }, { language: `en`, value: `Assembly` },);
        this.set(this.enumContractTaskTypeDismantleLanguageItemName, { language: `fi`, value: `Purku` }, { language: `sv`, value: `Demontera` }, { language: `pl`, value: `PL: Dismantle` }, { language: `en`, value: `Dismantle` },);
        this.set(this.enumContractTaskTypeDeliveryLanguageItemName, { language: `fi`, value: `Toimitus` }, { language: `sv`, value: `Leverans` }, { language: `pl`, value: `PL: Delivery` }, { language: `en`, value: `Delivery` },);
        this.set(this.enumContractTaskTypeReturnLanguageItemName, { language: `fi`, value: `Palautus` }, { language: `sv`, value: `Retur` }, { language: `pl`, value: `PL: Return` }, { language: `en`, value: `Return` },);
        this.set(this.enumContractTaskTypeCoveringLanguageItemName, { language: `fi`, value: `Peite` }, { language: `sv`, value: `Skydd` }, { language: `pl`, value: `PL: Covering` }, { language: `en`, value: `Covering` },);
        this.set(this.formInputFileDragAndDropLanguageItemName, { language: `fi`, value: `Pudota tiedosto tähän tai valitse klikkaamalla` }, { language: `sv`, value: `dra och släpp filen här, eller välj med att klicka` }, { language: `pl`, value: `PL: Drag'n'drop file here, or click to select` }, { language: `en`, value: `Drag'n'drop file here, or click to select` },);
        this.set(this.formInputFileReadonlyLanguageItemName, { language: `fi`, value: `Tämä tiedosto on vain luettavissa` }, { language: `sv`, value: `Filen är bara läsbar` }, { language: `pl`, value: `PL: File is readonly` }, { language: `en`, value: `File is readonly` },);
        this.set(this.formInputFilePreviewLanguageItemName, { language: `fi`, value: `Esikatselu` }, { language: `sv`, value: `Förhandsvisning` }, { language: `pl`, value: `PL: Preview` }, { language: `en`, value: `Preview` },);
        this.set(this.formInputFileChooseFileLanguageItemName, { language: `fi`, value: `Valitse tiedosto` }, { language: `sv`, value: `Välj fil` }, { language: `pl`, value: `PL: Choose file` }, { language: `en`, value: `Choose file` },);
        this.set(this.userDocumentSubtitleLanguageItemName, { language: `fi`, value: `Lataa asiakirja tai muokkaa olemassa olevaa` }, { language: `sv`, value: `Ladda upp dokument, eller modifiera existerande` }, { language: `pl`, value: `PL: Upload document or modify the existing` }, { language: `en`, value: `Upload document or modify the existing` },);
        this.set(this.userDocumentTitleLanguageItemName, { language: `fi`, value: `Käyttäjän asiakirja` }, { language: `sv`, value: `Användar dokument` }, { language: `pl`, value: `PL: User document` }, { language: `en`, value: `User document` },);
        this.set(this.userDocumentSendHelpTextLanguageItemName, { language: `fi`, value: `Lähetä asiakirja sähköpostilla` }, { language: `sv`, value: `Användar dokument via epost` }, { language: `pl`, value: `PL: Send user document by email` }, { language: `en`, value: `Send user document by email` },);
        this.set(this.userDocumentSendButtonLanguageItemName, { language: `fi`, value: `Lähetä asiakirja` }, { language: `sv`, value: `Användar dokument` }, { language: `pl`, value: `PL: Send document` }, { language: `en`, value: `Send document` },);
        this.set(this.userDocumentValidThruLanguageItemName, { language: `fi`, value: `Voimassa` }, { language: `sv`, value: `I kraft till` }, { language: `pl`, value: `PL: Valid thru` }, { language: `en`, value: `Valid thru` },);
        this.set(this.userDocumentImageLanguageItemName, { language: `fi`, value: `Asiakirjan kuva` }, { language: `sv`, value: `Dokument bild` }, { language: `pl`, value: `PL: Document image` }, { language: `en`, value: `Document image` },);
        this.set(this.userDocumentLevelLanguageItemName, { language: `fi`, value: `Taso` }, { language: `sv`, value: `Nivå` }, { language: `pl`, value: `PL: Level` }, { language: `en`, value: `Level` },);
        this.set(this.enumWorkDayStateNormalLanguageItemName, { language: `fi`, value: `Normaali` }, { language: `sv`, value: `Normal` }, { language: `pl`, value: `PL: Normal` }, { language: `en`, value: `Normal` },);
        this.set(this.enumWorkDayStateNormalDescriptionLanguageItemName, { language: `fi`, value: `Normaali työpäivä` }, { language: `sv`, value: `Normal arbetsdag` }, { language: `pl`, value: `PL: Normal working day` }, { language: `en`, value: `Normal working day` },);
        this.set(this.enumWorkDayStateSickLeaveLanguageItemName, { language: `fi`, value: `Sairasloma` }, { language: `sv`, value: `Sjukledig` }, { language: `pl`, value: `PL: Sick leave` }, { language: `en`, value: `Sick leave` },);
        this.set(this.enumWorkDayStateSickLeaveDescriptionLanguageItemName, { language: `fi`, value: `Työntekijä sairaslomalla` }, { language: `sv`, value: `Anstälda är på sjukledighet` }, { language: `pl`, value: `PL: Employee is on sick leave` }, { language: `en`, value: `Employee is on sick leave` },);
        this.set(this.enumWorkDayStateVacationLanguageItemName, { language: `fi`, value: `Lomapäivä` }, { language: `sv`, value: `Semester` }, { language: `pl`, value: `PL: Vacation` }, { language: `en`, value: `Vacation` },);
        this.set(this.enumWorkDayStateVacationDescriptionLanguageItemName, { language: `fi`, value: `Lomapäivä` }, { language: `sv`, value: `Anstälda är på semester` }, { language: `pl`, value: `PL: Employee is on vacation` }, { language: `en`, value: `Employee is on vacation` },);
        this.set(this.enumWorkDayStateWeeklyRestLanguageItemName, { language: `fi`, value: `Viikkolepo` }, { language: `sv`, value: `Veckovila` }, { language: `pl`, value: `PL: Weekly rest` }, { language: `en`, value: `Weekly rest` },);
        this.set(this.enumWorkDayStateWeeklyRestDescriptionLanguageItemName, { language: `fi`, value: `Viikkolepo` }, { language: `sv`, value: `Veckosemester` }, { language: `pl`, value: `PL: Weekly holiday` }, { language: `en`, value: `Weekly holiday` },);
        this.set(this.enumWorkDayStatePaidDayOffLanguageItemName, { language: `fi`, value: `Maksullinen vapaapäivä` }, { language: `sv`, value: `Betald ledig dag` }, { language: `pl`, value: `PL: Paid day off` }, { language: `en`, value: `Paid day off` },);
        this.set(this.enumWorkDayStatePaidDayOffDescriptionLanguageItemName, { language: `fi`, value: `Työntekijällä on palkallinen vapaapäivä` }, { language: `sv`, value: `Anstälda har betald ledighet` }, { language: `pl`, value: `PL: Employee has paid day off` }, { language: `en`, value: `Employee has paid day off` },);
        this.set(this.enumWorkDayStateFlexHoursLanguageItemName, { language: `fi`, value: `Pekkanen` }, { language: `sv`, value: `SV: Flex hours` }, { language: `pl`, value: `PL: Flex hours` }, { language: `en`, value: `Flex hours` },);
        this.set(this.enumWorkDayStateFlexHoursDescriptionLanguageItemName, { language: `fi`, value: `Työajan lyhennysvapaa` }, { language: `sv`, value: `SV: Description for FlexHours` }, { language: `pl`, value: `PL: Description for FlexHours` }, { language: `en`, value: `Flex hours` },);
        this.set(this.userDocumentSendSuccessLanguageItemName, { language: `fi`, value: `Dokumentti lähetetty` }, { language: `sv`, value: `Dokument skickat` }, { language: `pl`, value: `PL: Document sent successfully` }, { language: `en`, value: `Document sent successfully` },);
        this.set(this.genericAccessDeniedLanguageItemName, { language: `fi`, value: `Käyttö estetty` }, { language: `sv`, value: `SV: Access denied` }, { language: `pl`, value: `PL: Access denied` }, { language: `en`, value: `Access denied` },);
        this.set(this.genericDataSavedLanguageItemName, { language: `fi`, value: `Tiedot tallennettu` }, { language: `sv`, value: `Sparad` }, { language: `pl`, value: `PL: Saved successfully` }, { language: `en`, value: `Saved successfully` },);
        this.set(this.genericTaskLanguageItemName, { language: `fi`, value: `Tehtävä` }, { language: `sv`, value: `SV: Task` }, { language: `pl`, value: `PL: Task` }, { language: `en`, value: `Task` },);
        this.set(this.genericWarehouseLanguageItemName, { language: `fi`, value: `Varasto` }, { language: `sv`, value: `SV: Warehouse` }, { language: `pl`, value: `PL: Warehouse` }, { language: `en`, value: `Warehouse` },);
        this.set(this.genericTasksLanguageItemName, { language: `fi`, value: `Tehtävät` }, { language: `sv`, value: `Uppgifter` }, { language: `pl`, value: `PL: Tasks` }, { language: `en`, value: `Tasks` },);
        this.set(this.genericNameLanguageItemName, { language: `fi`, value: `Nimi` }, { language: `sv`, value: `Namn` }, { language: `pl`, value: `PL: Name` }, { language: `en`, value: `Name` },);
        this.set(this.genericVatIdLanguageItemName, { language: `fi`, value: `Y-tunnus` }, { language: `sv`, value: `FO-nummer` }, { language: `pl`, value: `PL: Business ID` }, { language: `en`, value: `Business ID` },);
        this.set(this.genericCostPoolLanguageItemName, { language: `fi`, value: `Kustannuspaikka` }, { language: `sv`, value: `Kostnadspool` }, { language: `pl`, value: `PL: Cost pool` }, { language: `en`, value: `Cost pool` },);
        this.set(this.genericDetailsLanguageItemName, { language: `fi`, value: `Tiedot` }, { language: `sv`, value: `Detaljer` }, { language: `pl`, value: `PL: Details` }, { language: `en`, value: `Details` },);
        this.set(this.warehousesPageTitleLanguageItemName, { language: `fi`, value: `Varastot` }, { language: `sv`, value: `Lager` }, { language: `pl`, value: `PL: Warehouses` }, { language: `en`, value: `Warehouses` },);
        this.set(this.warehousePanelPanelTitleLanguageItemName, { language: `fi`, value: `Varaston tiedot` }, { language: `sv`, value: `Lager detaljer` }, { language: `pl`, value: `PL: Warehouse details` }, { language: `en`, value: `Warehouse details` },);
        this.set(this.warehousesExternalIdLanguageItemName, { language: `fi`, value: `Varastonumero` }, { language: `sv`, value: `Lager nummer` }, { language: `pl`, value: `PL: Warehouse number` }, { language: `en`, value: `Warehouse number` },);
        this.set(this.enumBusinessAreaScaffoldingLanguageItemName, { language: `fi`, value: `Telineet` }, { language: `sv`, value: `Ställningar` }, { language: `pl`, value: `PL: Scaffolding` }, { language: `en`, value: `Scaffolding` },);
        this.set(this.enumBusinessAreaStpLanguageItemName, { language: `fi`, value: `Stp` }, { language: `sv`, value: `Stp` }, { language: `pl`, value: `Stp` }, { language: `en`, value: `Stp` },);
        this.set(this.adminSettingsKeyLanguageItemName, { language: `fi`, value: `Asetus` }, { language: `sv`, value: `SV: Setting` }, { language: `pl`, value: `PL: Setting` }, { language: `en`, value: `Setting` },);
        this.set(this.adminSettingsValueLanguageItemName, { language: `fi`, value: `Arvo` }, { language: `sv`, value: `SV: Value` }, { language: `pl`, value: `PL: Value` }, { language: `en`, value: `Value` },);
        this.set(this.adminUserDeletedLanguageItemName, { language: `fi`, value: `Käyttäjä {0} poistettu.` }, { language: `sv`, value: `SV: User account {0} deleted successfully.` }, { language: `pl`, value: `PL: User account {0} deleted successfully.` }, { language: `en`, value: `User account {0} deleted successfully.` },);
        this.set(this.adminUserDeletedPermanentlyLanguageItemName, { language: `fi`, value: `Käyttäjätili "{0}" poistettu pysyvästi.` }, { language: `sv`, value: `SV: User account "{0}" was permanently deleted.` }, { language: `pl`, value: `PL: User account "{0}" was permanently deleted.` }, { language: `en`, value: `User account "{0}" was permanently deleted.` },);
        this.set(this.adminUserRestoredLanguageItemName, { language: `fi`, value: `Käyttäjä {0} palautettu.` }, { language: `sv`, value: `SV: User account {0} restored successfully.` }, { language: `pl`, value: `PL: User account {0} restored successfully.` }, { language: `en`, value: `User account {0} restored successfully.` },);
        this.set(this.adminAddUserLanguageItemName, { language: `fi`, value: `Lisää käyttäjä` }, { language: `sv`, value: `Lägg till användare` }, { language: `pl`, value: `PL: Add user` }, { language: `en`, value: `Add user` },);
        this.set(this.adminShowDeletedLanguageItemName, { language: `fi`, value: `Näytä poistetut` }, { language: `sv`, value: `SV: Show deleted` }, { language: `pl`, value: `PL: Show deleted` }, { language: `en`, value: `Show deleted` },);
        this.set(this.adminSubcontractorLabelLanguageItemName, { language: `fi`, value: `Aliurakoitsija` }, { language: `en`, value: `Subcontractor` },);
        this.set(this.adminButtonAddNewSubcontractorLanguageItemName, { language: `fi`, value: `Lisää uusi aliurakoitsija` }, { language: `sv`, value: `SV: Add new subcontractor` }, { language: `pl`, value: `PL: Add new subcontractor` }, { language: `en`, value: `Add new subcontractor` },);
        this.set(this.adminButtonRestoreLanguageItemName, { language: `fi`, value: `Palauta` }, { language: `sv`, value: `SV: Restore` }, { language: `pl`, value: `PL: Restore` }, { language: `en`, value: `Restore` },);
        this.set(this.adminButtonDeleteLanguageItemName, { language: `fi`, value: `Poista` }, { language: `sv`, value: `Radera` }, { language: `pl`, value: `PL: Delete` }, { language: `en`, value: `Delete` },);
        this.set(this.adminButtonUnlockLanguageItemName, { language: `fi`, value: `Avaa lukitus` }, { language: `sv`, value: `SV: Unlock` }, { language: `pl`, value: `PL: Unlock` }, { language: `en`, value: `Unlock` },);
        this.set(this.adminSettingsSavedLanguageItemName, { language: `fi`, value: `Asetukset tallennettu` }, { language: `sv`, value: `Inställningar sparade` }, { language: `pl`, value: `PL: Settings saved` }, { language: `en`, value: `Settings saved` },);
        this.set(this.adminSettingsTabLanguageItemName, { language: `fi`, value: `Asetukset` }, { language: `sv`, value: `Inställningar` }, { language: `pl`, value: `PL: Settings` }, { language: `en`, value: `Settings` },);
        this.set(this.adminUsersTabLanguageItemName, { language: `fi`, value: `Käyttäjät` }, { language: `sv`, value: `Användare` }, { language: `pl`, value: `PL: Users` }, { language: `en`, value: `Users` },);
        this.set(this.adminAlertMessageUnlockUserLanguageItemName, { language: `fi`, value: `Käyttäjätilin "{0}" lukitus avattu.` }, { language: `sv`, value: `SV: User account "{0}" unlocked successfully.` }, { language: `pl`, value: `PL: User account "{0}" unlocked successfully.` }, { language: `en`, value: `User account "{0}" unlocked successfully.` },);
        this.set(this.adminConfirmationButtonUnlockUserLanguageItemName, { language: `fi`, value: `Oletko varma, että haluat poistaa käyttäjätilin "{0}" lukituksen?` }, { language: `sv`, value: `SV: Are you sure you want to unlock user "{0}"?` }, { language: `pl`, value: `PL: Are you sure you want to unlock user "{0}"?` }, { language: `en`, value: `Are you sure you want to unlock user "{0}"?` },);
        this.set(this.adminConfirmationButtonDeleteUserLanguageItemName, { language: `fi`, value: `Oletko varma, että haluat poistaa käyttäjätilin "{0}"?` }, { language: `sv`, value: `SV: Are you sure you want to delete user "{0}"?` }, { language: `pl`, value: `PL: Are you sure you want to delete user "{0}"?` }, { language: `en`, value: `Are you sure you want to delete user "{0}"?` },);
        this.set(this.adminConfirmationButtonRestoreUserLanguageItemName, { language: `fi`, value: `Oletko varma, että haluat palauttaa käyttäjätilin "{0}"?` }, { language: `sv`, value: `SV: Are you sure you want to restore user "{0}"?` }, { language: `pl`, value: `PL: Are you sure you want to restore user "{0}"?` }, { language: `en`, value: `Are you sure you want to restore user "{0}"?` },);
        this.set(this.genericSaveLanguageItemName, { language: `fi`, value: `Tallenna` }, { language: `en`, value: `Save` },);
        this.set(this.genericCancelLanguageItemName, { language: `fi`, value: `Peruuta` }, { language: `sv`, value: `Avbryt` }, { language: `pl`, value: `PL: Cancel` }, { language: `en`, value: `Cancel` },);
        this.set(this.genericConstructionsiteLanguageItemName, { language: `fi`, value: `Työmaa` }, { language: `sv`, value: `SV: Construction site` }, { language: `pl`, value: `PL: Construction site` }, { language: `en`, value: `Construction site` },);
        this.set(this.genericDateLanguageItemName, { language: `fi`, value: `Päivämäärä` }, { language: `sv`, value: `Datum` }, { language: `pl`, value: `PL: Date` }, { language: `en`, value: `Date` },);
        this.set(this.resetPasswordPageTitleLanguageItemName, { language: `fi`, value: `Aseta uusi salasana tunnukselle` }, { language: `sv`, value: `Sätt ett nytt lösenord för ditt konto` }, { language: `pl`, value: `PL: Set new password for your account` }, { language: `en`, value: `Set new password for your account` },);
        this.set(this.resetPasswordConfirmPasswordInputLanguageItemName, { language: `fi`, value: `Vahista salasana` }, { language: `sv`, value: `Bekräfta lösenord` }, { language: `pl`, value: `PL: Confirm password` }, { language: `en`, value: `Confirm password` },);
        this.set(this.resetPasswordPasswordsDontMatchMessageLanguageItemName, { language: `fi`, value: `Salasanat eivät täsmää` }, { language: `sv`, value: `Lösenorden matchar inte` }, { language: `pl`, value: `PL: Passwords don't match` }, { language: `en`, value: `Passwords don't match` },);
        this.set(this.resetPasswordSuccessMessageLanguageItemName, { language: `fi`, value: `Salasana asetettu` }, { language: `sv`, value: `Lösenordet bytt` }, { language: `pl`, value: `PL: Password set successfully` }, { language: `en`, value: `Password set successfully` },);
        this.set(this.resetPasswordSuccessMessageAndInfoLanguageItemName, { language: `fi`, value: `Salasana asetettu. Sinun on hyväksyttävä käyttöehdot ja tietosuojaseloste voidaksesi käyttää sovellusta.` }, { language: `sv`, value: `SV: Password set successfully. You must accept terms of usage and privacy notice in order to use application.` }, { language: `pl`, value: `PL: Password set successfully. You must accept terms of usage and privacy notice in order to use application.` }, { language: `en`, value: `Password set successfully. You must accept terms of usage and privacy notice in order to use application.` },);
        this.set(this.changePasswordCurrentPasswordLanguageItemName, { language: `fi`, value: `Nykyinen salasana` }, { language: `sv`, value: `Nuvarande lösenord` }, { language: `pl`, value: `PL: Current password` }, { language: `en`, value: `Current password` },);
        this.set(this.changePasswordNewPasswordLanguageItemName, { language: `fi`, value: `Uusi salasana` }, { language: `sv`, value: `Nytt lösenord` }, { language: `pl`, value: `PL: New password` }, { language: `en`, value: `New password` },);
        this.set(this.changePasswordPageTitleLanguageItemName, { language: `fi`, value: `Vaihda salasana` }, { language: `sv`, value: `Byt lösenord` }, { language: `pl`, value: `PL: Change password` }, { language: `en`, value: `Change password` },);
        this.set(this.changePasswordButtonLanguageItemName, { language: `fi`, value: `Vaihda salasana` }, { language: `sv`, value: `Byt lösenord` }, { language: `pl`, value: `PL: Change password` }, { language: `en`, value: `Change password` },);
        this.set(this.changePasswordWrongCurrentMessageLanguageItemName, { language: `fi`, value: `Väärä nykyinen salasana` }, { language: `sv`, value: `Nuvarande lösenord är fel` }, { language: `pl`, value: `PL: Wrong current password` }, { language: `en`, value: `Wrong current password` },);
        this.set(this.changePasswordWeakPasswordMessageLanguageItemName, { language: `fi`, value: `Salasanassa pitää olla yksi erikoismerkki, yksi pieni kirjain ('a'-'z'), yksi iso kirjain ('A'-'Z'), yksi numero ja vähintään 8 merkkiä` }, { language: `sv`, value: `Lösenordet måste innehålla ett special tecken, en liten bokstav ('a'-'z'), en stor bokstav ('A'-'Z'), en nummer och minst 8 tecken` }, { language: `pl`, value: `PL: Password must have one non alphanumeric character, one lowercase ('a'-'z') character, one uppercase ('A'-'Z') character, one number and be at least 8 characters long` }, { language: `en`, value: `Password must have one non alphanumeric character, one lowercase ('a'-'z') character, one uppercase ('A'-'Z') character, one number and be at least 8 characters long` },);
        this.set(this.roleNameSubcontractorManagerLanguageItemName, { language: `fi`, value: `Työnjohtaja` }, { language: `sv`, value: `Förman` }, { language: `pl`, value: `PL: Manager` }, { language: `en`, value: `Manager` },);
        this.set(this.roleNameSubcontractorMounterLanguageItemName, { language: `fi`, value: `Asentaja` }, { language: `sv`, value: `Montör` }, { language: `pl`, value: `PL: Mounter` }, { language: `en`, value: `Mounter` },);
        this.set(this.roleNameSubcontractorHeadMounterLanguageItemName, { language: `fi`, value: `Työmaavastaava` }, { language: `sv`, value: `Huvud montör` }, { language: `pl`, value: `PL: Head mounter` }, { language: `en`, value: `Head mounter` },);
        this.set(this.roleNameScaffoldingMounterLanguageItemName, { language: `fi`, value: `Telineet asentaja` }, { language: `sv`, value: `Ställnings montör` }, { language: `pl`, value: `PL: Scaffolding mounter` }, { language: `en`, value: `Scaffolding mounter` },);
        this.set(this.roleNameMounterLanguageItemName, { language: `fi`, value: `RTP asentaja` }, { language: `sv`, value: `RTP montör` }, { language: `pl`, value: `PL: RTP mounter` }, { language: `en`, value: `RTP mounter` },);
        this.set(this.roleNameScaffoldingHeadMounterLanguageItemName, { language: `fi`, value: `Telineet työmaavastaava` }, { language: `sv`, value: `RTP huvud montör` }, { language: `pl`, value: `PL: Scaffolding head mounter` }, { language: `en`, value: `Scaffolding head mounter` },);
        this.set(this.roleNameStpHeadMounterLanguageItemName, { language: `fi`, value: `RTP työmaavastaava` }, { language: `sv`, value: `RTP montör` }, { language: `pl`, value: `PL: RTP head mounter` }, { language: `en`, value: `RTP head mounter` },);
        this.set(this.roleNameScaffoldingManagerLanguageItemName, { language: `fi`, value: `Telineet työmaajohtaja` }, { language: `sv`, value: `Ställnings manager` }, { language: `pl`, value: `PL: Scaffolding manager` }, { language: `en`, value: `Scaffolding manager` },);
        this.set(this.roleNameStpManagerLanguageItemName, { language: `fi`, value: `RTP työmaajohtaja` }, { language: `sv`, value: `RTP chef` }, { language: `pl`, value: `PL: RTP manager` }, { language: `en`, value: `RTP manager` },);
        this.set(this.roleNameScaffoldingAdminLanguageItemName, { language: `fi`, value: `Telineet admin` }, { language: `sv`, value: `Ställnings administratör` }, { language: `pl`, value: `PL: Scaffolding admin` }, { language: `en`, value: `Scaffolding admin` },);
        this.set(this.roleNameStpAdminLanguageItemName, { language: `fi`, value: `RTP admin` }, { language: `sv`, value: `RTP admin` }, { language: `pl`, value: `PL: RTP admin` }, { language: `en`, value: `RTP admin` },);
        this.set(this.topNavChangePasswordLanguageItemName, { language: `fi`, value: `Vaihda salasana` }, { language: `sv`, value: `Byt lösenord` }, { language: `pl`, value: `PL: Change password` }, { language: `en`, value: `Change password` },);
        this.set(this.enumConstructionSiteStatusActiveLanguageItemName, { language: `fi`, value: `Aktiivinen` }, { language: `sv`, value: `Aktiv` }, { language: `pl`, value: `PL: Active` }, { language: `en`, value: `Active` },);
        this.set(this.enumConstructionSiteStatusActiveDescriptionLanguageItemName, { language: `fi`, value: `Rakenteilla` }, { language: `sv`, value: `Under konstruktion` }, { language: `pl`, value: `PL: Under construction` }, { language: `en`, value: `Under construction` },);
        this.set(this.enumConstructionSiteStatusInactiveLanguageItemName, { language: `fi`, value: `Ei aktiivinen` }, { language: `sv`, value: `Inaktiv` }, { language: `pl`, value: `PL: Inactive` }, { language: `en`, value: `Inactive` },);
        this.set(this.enumConstructionSiteStatusInactiveDescriptionLanguageItemName, { language: `fi`, value: `Rakentaminen on jäädytetty` }, { language: `sv`, value: `Byggandet är fryst` }, { language: `pl`, value: `PL: Construction is frozen` }, { language: `en`, value: `Construction is frozen` },);
        this.set(this.enumConstructionSiteStatusClosedLanguageItemName, { language: `fi`, value: `Suljettu` }, { language: `sv`, value: `Stängt` }, { language: `pl`, value: `PL: Closed` }, { language: `en`, value: `Closed` },);
        this.set(this.enumConstructionSiteStatusClosedDescriptionLanguageItemName, { language: `fi`, value: `Työ on valmis, tai sitä ei ole vielä aloitettu` }, { language: `sv`, value: `Byggandet är färdigt eller inte ännu påbörjat` }, { language: `pl`, value: `PL: Construction is completed or not started yet` }, { language: `en`, value: `Construction is completed or not started yet` },);
        this.set(this.enumWorkOrderStatusHasActiveTasksLanguageItemName, { language: `fi`, value: `Aktiivisia tehtäviä` }, { language: `sv`, value: `Har aktiva uppgifter` }, { language: `pl`, value: `PL: Has active tasks` }, { language: `en`, value: `Has active tasks` },);
        this.set(this.enumWorkOrderStatusHasActiveTasksDescriptionLanguageItemName, { language: `fi`, value: `Aktiivisia mutta ei valmistuneita tehtäviä` }, { language: `sv`, value: `SV: ` }, { language: `pl`, value: `PL: ` }, { language: `en`, value: `Has activated, but not completed tasks` },);
        this.set(this.enumWorkOrderStatusWorkReportNotSentLanguageItemName, { language: `fi`, value: `Raporttia ei lähetetty` }, { language: `sv`, value: `Arbets raport inte sänd` }, { language: `pl`, value: `PL: Work report not sent` }, { language: `en`, value: `Work report not sent` },);
        this.set(this.enumWorkOrderStatusWorkReportNotSentDescriptionLanguageItemName, { language: `fi`, value: `Raportteja lähettämättä, joissa hyväksyntätyyppi "sähköposti"` }, { language: `sv`, value: `SV: ` }, { language: `pl`, value: `PL: ` }, { language: `en`, value: `Has not sent work reports with approving type "Email"` },);
        this.set(this.enumWorkOrderStatusWorkReportNotApprovedByCustomerLanguageItemName, { language: `fi`, value: `Asiakas ei ole hyväksynyt` }, { language: `sv`, value: `Väntar på godkännande från kund` }, { language: `pl`, value: `PL: Pending customer approval` }, { language: `en`, value: `Pending customer approval` },);
        this.set(this.enumWorkOrderStatusWorkReportNotApprovedByCustomerDescriptionLanguageItemName, { language: `fi`, value: `Hyväksymättömiä työraportteja` }, { language: `sv`, value: `SV: ` }, { language: `pl`, value: `PL: ` }, { language: `en`, value: `Has not approved work reports` },);
        this.set(this.enumWorkOrderStatusTaskNotApprovedByManagerLanguageItemName, { language: `fi`, value: `Esihenkilö ei ole hyväksynyt` }, { language: `sv`, value: `Väntar på godkännande från förman` }, { language: `pl`, value: `PL: Pending manager approval` }, { language: `en`, value: `Pending manager approval` },);
        this.set(this.enumWorkOrderStatusTaskNotApprovedByManagerDescriptionLanguageItemName, { language: `fi`, value: `Valmistuneita mutta hyväksymättömiä tehtäviä` }, { language: `sv`, value: `SV: ` }, { language: `pl`, value: `PL: ` }, { language: `en`, value: `Has completed, but not approved tasks` },);
        this.set(this.enumWorkOrderStatusInvoiceRowsNotApprovedNyManagerLanguageItemName, { language: `fi`, value: `Laskurivejä hyväksymättä` }, { language: `sv`, value: `Väntar på godkännande av faktura` }, { language: `pl`, value: `PL: Pending invoice row approval` }, { language: `en`, value: `Pending invoice row approval` },);
        this.set(this.enumWorkOrderStatusInvoiceRowsNotApprovedNyManagerDescriptionLanguageItemName, { language: `fi`, value: `Hyväksymättömiä laskurivejä` }, { language: `sv`, value: `SV: ` }, { language: `pl`, value: `PL: ` }, { language: `en`, value: `Has not approved invoice rows` },);
        this.set(this.enumWorkOrderStatusInvoiceNotCreatedLanguageItemName, { language: `fi`, value: `Laskuttamatta` }, { language: `sv`, value: `Inte fakturerad` }, { language: `pl`, value: `PL: Not billed` }, { language: `en`, value: `Not billed` },);
        this.set(this.enumWorkOrderStatusInvoiceNotCreatedDescriptionLanguageItemName, { language: `fi`, value: `Hyväksyttyjä mutta Pagerolle lähettämättömiä laskuja` }, { language: `sv`, value: `SV: ` }, { language: `pl`, value: `PL: ` }, { language: `en`, value: `Has approved, but not sent to Pagero invoices` },);
        this.set(this.monthJanuaryLanguageItemName, { language: `fi`, value: `tammikuu` }, { language: `sv`, value: `Januari` }, { language: `pl`, value: `PL: January` }, { language: `en`, value: `January` },);
        this.set(this.monthFebruaryLanguageItemName, { language: `fi`, value: `helmikuu` }, { language: `sv`, value: `Februari` }, { language: `pl`, value: `PL: February` }, { language: `en`, value: `February` },);
        this.set(this.monthMarchLanguageItemName, { language: `fi`, value: `maaliskuu` }, { language: `sv`, value: `Mars` }, { language: `pl`, value: `PL: March` }, { language: `en`, value: `March` },);
        this.set(this.monthAprilLanguageItemName, { language: `fi`, value: `huhtikuu` }, { language: `sv`, value: `April` }, { language: `pl`, value: `PL: April` }, { language: `en`, value: `April` },);
        this.set(this.monthMayLanguageItemName, { language: `fi`, value: `toukokuu` }, { language: `sv`, value: `Maj` }, { language: `pl`, value: `PL: May` }, { language: `en`, value: `May` },);
        this.set(this.monthJuneLanguageItemName, { language: `fi`, value: `kesäkuu` }, { language: `sv`, value: `Juni` }, { language: `pl`, value: `PL: June` }, { language: `en`, value: `June` },);
        this.set(this.monthJulyLanguageItemName, { language: `fi`, value: `heinäkuu` }, { language: `sv`, value: `Juli` }, { language: `pl`, value: `PL: July` }, { language: `en`, value: `July` },);
        this.set(this.monthAugustLanguageItemName, { language: `fi`, value: `elokuu` }, { language: `sv`, value: `Augusti` }, { language: `pl`, value: `PL: August` }, { language: `en`, value: `August` },);
        this.set(this.monthSeptemberLanguageItemName, { language: `fi`, value: `syyskuu` }, { language: `sv`, value: `September` }, { language: `pl`, value: `PL: September` }, { language: `en`, value: `September` },);
        this.set(this.monthOctoberLanguageItemName, { language: `fi`, value: `lokakuu` }, { language: `sv`, value: `Oktober` }, { language: `pl`, value: `PL: October` }, { language: `en`, value: `October` },);
        this.set(this.monthNovemberLanguageItemName, { language: `fi`, value: `marraskuu` }, { language: `sv`, value: `November` }, { language: `pl`, value: `PL: November` }, { language: `en`, value: `November` },);
        this.set(this.monthDecemberLanguageItemName, { language: `fi`, value: `joulukuu` }, { language: `sv`, value: `December` }, { language: `pl`, value: `PL: December` }, { language: `en`, value: `December` },);
        this.set(this.roleNameAdminLanguageItemName, { language: `fi`, value: `Administrator` }, { language: `sv`, value: `Aadministratör` }, { language: `pl`, value: `PL: admin` }, { language: `en`, value: `Admin` },);
        this.set(this.roleNameContactPersonLanguageItemName, { language: `fi`, value: `Yhteyshenkilö` }, { language: `sv`, value: `Kontakt person` }, { language: `pl`, value: `PL: Contact person` }, { language: `en`, value: `Contact person` },);
        this.set(this.roleNameScaffoldingDriverLanguageItemName, { language: `fi`, value: `Telineiden kuljettaja` }, { language: `sv`, value: `Ställnings chaufför` }, { language: `pl`, value: `PL: Scaffolding driver` }, { language: `en`, value: `Scaffolding driver` },);
        this.set(this.roleNameStpDriverLanguageItemName, { language: `fi`, value: `RTP kuljettaja` }, { language: `sv`, value: `RTP kusk` }, { language: `pl`, value: `PL: RTP driver` }, { language: `en`, value: `RTP driver` },);
        this.set(this.enumUserRoleGroupAdminsLanguageItemName, { language: `fi`, value: `Järjestelmävalvojat` }, { language: `sv`, value: `Administratörer` }, { language: `pl`, value: `PL: Admins` }, { language: `en`, value: `Admins` },);
        this.set(this.enumUserRoleGroupSubcontractorsLanguageItemName, { language: `fi`, value: `Aliurakoitsijat` }, { language: `sv`, value: `Underleverantörer` }, { language: `pl`, value: `PL: Subcontractors` }, { language: `en`, value: `Subcontractors` },);
        this.set(this.enumUserRoleGroupAdminsDescriptionLanguageItemName, { language: `fi`, value: `Työmaa- ja yritysvalvojat` }, { language: `sv`, value: `Byggplats- och affärsadministratörer` }, { language: `pl`, value: `PL: Site & business administrators` }, { language: `en`, value: `Site & business administrators` },);
        this.set(this.enumUserRoleGroupManagersLanguageItemName, { language: `fi`, value: `Työnjohtajat` }, { language: `sv`, value: `Chefer` }, { language: `pl`, value: `PL: Managers` }, { language: `en`, value: `Managers` },);
        this.set(this.enumUserRoleGroupContactPersonsLanguageItemName, { language: `fi`, value: `Yhteyshenkilöt` }, { language: `pl`, value: `PL: Contact Persons` }, { language: `en`, value: `Contact Persons` },);
        this.set(this.enumUserRoleGroupManagersDescriptionLanguageItemName, { language: `fi`, value: `Työmaa johtajat & yhteyshenkilöt` }, { language: `sv`, value: `Byggplats chefer & kontaktpersoner` }, { language: `pl`, value: `PL: Site managers & contact persons` }, { language: `en`, value: `Site managers & contact persons` },);
        this.set(this.enumUserRoleGroupEmployeesLanguageItemName, { language: `fi`, value: `Työntekijät` }, { language: `sv`, value: `Anställda` }, { language: `pl`, value: `PL: Employees` }, { language: `en`, value: `Employees` },);
        this.set(this.enumUserRoleGroupEmployeesDescriptionLanguageItemName, { language: `fi`, value: `Pää asentajat, asentajat & kuljettajat` }, { language: `sv`, value: `Huvud montörer, montörer & chaufförer` }, { language: `pl`, value: `PL: Head mounters, mounters & drivers` }, { language: `en`, value: `Head mounters, mounters & drivers` },);
        this.set(this.enumTaxRateRate24LanguageItemName, { language: `fi`, value: `24%` }, { language: `sv`, value: `24%` }, { language: `pl`, value: `24%` }, { language: `en`, value: `24%` },);
        this.set(this.enumTaxRateRate14LanguageItemName, { language: `fi`, value: `14%` }, { language: `sv`, value: `14%` }, { language: `pl`, value: `14%` }, { language: `en`, value: `14%` },);
        this.set(this.enumTaxRateRate10LanguageItemName, { language: `fi`, value: `10%` }, { language: `sv`, value: `10%` }, { language: `pl`, value: `10%` }, { language: `en`, value: `10%` },);
        this.set(this.enumTaxRateRate0LanguageItemName, { language: `fi`, value: `0%` }, { language: `sv`, value: `0%` }, { language: `pl`, value: `0%` }, { language: `en`, value: `0%` },);
        this.set(this.adminHeaderTitleLanguageItemName, { language: `fi`, value: `Admin Hallinta` }, { language: `sv`, value: `Admin Kontrollpanel` }, { language: `pl`, value: `PL: Admin management` }, { language: `en`, value: `Admin management` },);
        this.set(this.adminChooseRoleLanguageItemName, { language: `fi`, value: `Valitse rooli` }, { language: `sv`, value: `Välj en roll` }, { language: `pl`, value: `PL: Choose a role` }, { language: `en`, value: `Choose a role` },);
        this.set(this.confirmationDialogAreYouSureLanguageItemName, { language: `fi`, value: `Oletko varma?` }, { language: `sv`, value: `Är du säker?` }, { language: `pl`, value: `PL: Are you sure?` }, { language: `en`, value: `Are you sure?` },);
        this.set(this.confirmationDialogConfirmLanguageItemName, { language: `fi`, value: `Vahvista` }, { language: `sv`, value: `Bekräfta` }, { language: `pl`, value: `PL: Confirm` }, { language: `en`, value: `Confirm` },);
        this.set(this.confirmationDialogCloseLanguageItemName, { language: `fi`, value: `Sulje` }, { language: `sv`, value: `Stäng` }, { language: `pl`, value: `PL: Close` }, { language: `en`, value: `Close` },);
        this.set(this.footerFrontpageLanguageItemName, { language: `fi`, value: `Etusivu` }, { language: `sv`, value: `Framsida` }, { language: `pl`, value: `PL: Frontpage` }, { language: `en`, value: `Frontpage` },);
        this.set(this.baseInputDocumentTooBigLanguageItemName, { language: `fi`, value: `Dokumentti tiedosto liian iso` }, { language: `sv`, value: `Dokument filen är för stor` }, { language: `pl`, value: `PL: Document file is too big` }, { language: `en`, value: `Document file is too big` },);
        this.set(this.baseInputTotalSizeTooBigLanguageItemName, { language: `fi`, value: `Dokumenttien kokonaiskoko on liian iso` }, { language: `sv`, value: `SV: Total size of documents is too big` }, { language: `pl`, value: `PL: Total size of documents is too big` }, { language: `en`, value: `Total size of documents is too big` },);
        this.set(this.baseInputDocumentTypeNotSupportedLanguageItemName, { language: `fi`, value: `Dokumentin tyyppi ei ole tuettu. Valitse tiedosto, joka on {0}` }, { language: `sv`, value: `Dokumenttyp stöds inte. Välj dokument som är {0}.` }, { language: `pl`, value: `PL: Document type is not supported, choose file with extension` }, { language: `en`, value: `Document type is not supported, choose file with extension {0}` },);
        this.set(this.passwordHelpTextPasswordHintsLanguageItemName, { language: `fi`, value: `Salasanassa tulee olla vähintään:` }, { language: `sv`, value: `Lösenordet måste innehålla åtminstone:` }, { language: `pl`, value: `PL: Password must have at least:` }, { language: `en`, value: `Password must have at least:` },);
        this.set(this.passwordHelpTextSpecialCharacterLanguageItemName, { language: `fi`, value: `yksi erikoismerkki` }, { language: `sv`, value: `ett special tecken` }, { language: `pl`, value: `PL: one non alphanumeric character` }, { language: `en`, value: `one non alphanumeric character` },);
        this.set(this.passwordHelpTextLowerCaseLanguageItemName, { language: `fi`, value: `yksi pieni kirjain ('a'-'z')` }, { language: `sv`, value: `en liten bokstav ('a'-'z')` }, { language: `pl`, value: `PL: one lowercase ('a'-'z') character` }, { language: `en`, value: `one lowercase ('a'-'z') character` },);
        this.set(this.passwordHelpTextUpperCaseLanguageItemName, { language: `fi`, value: `yksi iso kirjain ('A'-'Z')` }, { language: `sv`, value: `en stor bokstav ('A'-'Z')` }, { language: `pl`, value: `PL: one uppercase ('A'-'Z') character` }, { language: `en`, value: `one uppercase ('A'-'Z') character` },);
        this.set(this.passwordHelpTextNumberLanguageItemName, { language: `fi`, value: `yksi numero` }, { language: `sv`, value: `en nummer` }, { language: `pl`, value: `PL: one number` }, { language: `en`, value: `one number` },);
        this.set(this.passwordHelpTextLengthLanguageItemName, { language: `fi`, value: `vähintään 8 merkkiä` }, { language: `sv`, value: `åtminstone 8 tecken` }, { language: `pl`, value: `PL: at least 8 characters long` }, { language: `en`, value: `at least 8 characters long` },);
        this.set(this.enumConstructionSiteSubContractorTaskStatusWorkReportNotApprovedByCustomerLanguageItemName, { language: `fi`, value: `Työraportti ei ole hyväksytty` }, { language: `sv`, value: `Arbets raport inte godkännd` }, { language: `pl`, value: `PL: Work report not approved` }, { language: `en`, value: `Work report not approved` },);
        this.set(this.enumConstructionSiteSubContractorTaskStatusWorkReportNotApprovedByCustomerDescriptionLanguageItemName, { language: `fi`, value: `Jotkut työraportit eivät ole hyväksytty asiakkaalta` }, { language: `sv`, value: `Vissa arbets raporter än inte godkända av kunden` }, { language: `pl`, value: `PL: Some work reports are not approved by customer` }, { language: `en`, value: `Some work reports are not approved by customer` },);
        this.set(this.enumConstructionSiteSubContractorTaskStatusOpenTasksLanguageItemName, { language: `fi`, value: `Avoimet tehtävät` }, { language: `sv`, value: `Öppna uppgifter` }, { language: `pl`, value: `PL: Open tasks` }, { language: `en`, value: `Open tasks` },);
        this.set(this.enumConstructionSiteSubContractorTaskStatusOpenTasksDescriptionLanguageItemName, { language: `fi`, value: `Jotkut tehtävistä eivät ole suoritettu` }, { language: `sv`, value: `Vissa uppgifter är inte färdiga` }, { language: `pl`, value: `PL: Some tasks are not completed` }, { language: `en`, value: `Some tasks are not completed` },);
        this.set(this.enumConstructionSiteSubContractorTaskStatusTaskNotApprovedLanguageItemName, { language: `fi`, value: `Tehtäviä ei ole hyväksytty` }, { language: `sv`, value: `Uppgifter inte godkända` }, { language: `pl`, value: `PL: Tasks not approved` }, { language: `en`, value: `Tasks not approved` },);
        this.set(this.enumConstructionSiteSubContractorTaskStatusTaskNotApprovedDescriptionLanguageItemName, { language: `fi`, value: `Jotkut tehtävistä ei ole hyväksytty esimieheltä` }, { language: `sv`, value: `Vissa uppgifter är inte godkända av förman` }, { language: `pl`, value: `PL: Some tasks are not approved by manager` }, { language: `en`, value: `Some tasks are not approved by manager` },);
        this.set(this.enumConstructionSiteSubContractorTaskStatusWorkReportNotSentLanguageItemName, { language: `fi`, value: `Työraportit ei ole lähetetty` }, { language: `sv`, value: `Arbets raporter inte sända` }, { language: `pl`, value: `PL: Work reports not sent` }, { language: `en`, value: `Work reports not sent` },);
        this.set(this.enumConstructionSiteSubContractorTaskStatusWorkReportNotSentDescriptionLanguageItemName, { language: `fi`, value: `Jotkut työraportit ei ole lähetetty asiakkaalle` }, { language: `sv`, value: `Vissa arbets raporter är inte skickade till kunden` }, { language: `pl`, value: `PL: Some work reports are not sent to customer` }, { language: `en`, value: `Some work reports are not sent to customer` },);
        this.set(this.enumConstructionSiteSubContractorTaskStatusWorkReportNotInvoicedLanguageItemName, { language: `fi`, value: `Työraporttia ei laskutettu` }, { language: `sv`, value: `Arbets raport inte fakturerad` }, { language: `pl`, value: `PL: Work reports not invoiced` }, { language: `en`, value: `Work reports not invoiced` },);
        this.set(this.enumConstructionSiteSubContractorTaskStatusWorkReportNotInvoicedDescriptionLanguageItemName, { language: `fi`, value: `Jotkut työraportit eivät ole laskuja` }, { language: `sv`, value: `Vissa arbets raporter är inte fakturerade` }, { language: `pl`, value: `PL: Some work reports are not invoices` }, { language: `en`, value: `Some work reports are not invoices` },);
        this.set(this.predefinedTaskGroupMounterLanguageItemName, { language: `fi`, value: `Lisätehtäviä asentajille` }, { language: `sv`, value: `Extra uppgifter för montörer` }, { language: `pl`, value: `PL: Extra tasks for mounters` }, { language: `en`, value: `Extra tasks for mounters` },);
        this.set(this.predefinedTaskGroupDeliveryLanguageItemName, { language: `fi`, value: `Toimitustehtävät` }, { language: `sv`, value: `Leverans uppgift` }, { language: `pl`, value: `PL: Delivery tasks` }, { language: `en`, value: `Delivery tasks` },);
        this.set(this.enumPredefinedExtraTaskAssemblyLanguageItemName, { language: `fi`, value: `Asennus` }, { language: `sv`, value: `Installering` }, { language: `pl`, value: `PL: Assembly` }, { language: `en`, value: `Assembly` },);
        this.set(this.enumPredefinedExtraTaskDismantleLanguageItemName, { language: `fi`, value: `Purku` }, { language: `sv`, value: `Demontera` }, { language: `pl`, value: `PL: Dismantle` }, { language: `en`, value: `Dismantle` },);
        this.set(this.enumPredefinedExtraTaskWeatherCoverOpeningLanguageItemName, { language: `fi`, value: `Säänsuojan avaus` }, { language: `sv`, value: `Väderskydds öppning` }, { language: `pl`, value: `PL: Weather cover opening` }, { language: `en`, value: `Weather cover opening` },);
        this.set(this.enumPredefinedExtraTaskExtraWorkLanguageItemName, { language: `fi`, value: `Lisätyö` }, { language: `sv`, value: `Extra arbete` }, { language: `pl`, value: `PL: Extra work` }, { language: `en`, value: `Extra work` },);
        this.set(this.enumPredefinedExtraTaskModificationWorkLanguageItemName, { language: `fi`, value: `Muutostyö` }, { language: `sv`, value: `Modifierings arbete` }, { language: `pl`, value: `PL: Modification work` }, { language: `en`, value: `Modification work` },);
        this.set(this.enumPredefinedExtraTaskRepairWorkLanguageItemName, { language: `fi`, value: `Korjaustyö` }, { language: `sv`, value: `Reparations arbete` }, { language: `pl`, value: `PL: Repair work` }, { language: `en`, value: `Repair work` },);
        this.set(this.enumPredefinedDeliveryTaskDeliveryTransportLanguageItemName, { language: `fi`, value: `Toimituskuljetus` }, { language: `sv`, value: `Leverans transport` }, { language: `pl`, value: `PL: Delivery transport` }, { language: `en`, value: `Delivery transport` },);
        this.set(this.enumPredefinedDeliveryTaskReturnTransportLanguageItemName, { language: `fi`, value: `Paluukuljetus` }, { language: `sv`, value: `Returnerings transport` }, { language: `pl`, value: `PL: Return transport` }, { language: `en`, value: `Return transport` },);
        this.set(this.enumPredefinedDeliveryTaskPackedMaterialTransportLanguageItemName, { language: `fi`, value: `Pakattujen materiaalien kuljetus` }, { language: `sv`, value: `Packad material transport` }, { language: `pl`, value: `PL: Packed material transport` }, { language: `en`, value: `Packed material transport` },);
        this.set(this.enumScaffoldingLoadClassTypeClass1LanguageItemName, { language: `fi`, value: `Luokka 1` }, { language: `sv`, value: `Klass 1` }, { language: `pl`, value: `PL: Class 1` }, { language: `en`, value: `Class 1` },);
        this.set(this.enumScaffoldingLoadClassTypeClass1DescriptionLanguageItemName, { language: `fi`, value: `Luokka 1 (0.75 kN/m2)` }, { language: `sv`, value: `Klass 1 (0.75 kN/m2)` }, { language: `pl`, value: `PL: Class 1 (0.75 kN/m2)` }, { language: `en`, value: `Class 1 (0.75 kN/m2)` },);
        this.set(this.enumScaffoldingLoadClassTypeClass2LanguageItemName, { language: `fi`, value: `Luokka 2` }, { language: `sv`, value: `Klass 2` }, { language: `pl`, value: `PL: Class 2` }, { language: `en`, value: `Class 2` },);
        this.set(this.enumScaffoldingLoadClassTypeClass2DescriptionLanguageItemName, { language: `fi`, value: `Luokka 2 (1.5 kN/m2)` }, { language: `sv`, value: `Klass 2 (1.5 kN/m2)` }, { language: `pl`, value: `PL: Class 2 (1.5 kN/m2)` }, { language: `en`, value: `Class 2 (1.5 kN/m2)` },);
        this.set(this.enumScaffoldingLoadClassTypeClass3LanguageItemName, { language: `fi`, value: `Luokka 3` }, { language: `sv`, value: `Klass 3` }, { language: `pl`, value: `PL: Class 3` }, { language: `en`, value: `Class 3` },);
        this.set(this.enumScaffoldingLoadClassTypeClass3DescriptionLanguageItemName, { language: `fi`, value: `Luokka 3 (2 kN/m2)` }, { language: `sv`, value: `Klass 3 (2 kN/m2)` }, { language: `pl`, value: `PL: Class 3 (2 kN/m2)` }, { language: `en`, value: `Class 3 (2 kN/m2)` },);
        this.set(this.enumScaffoldingLoadClassTypeClass4LanguageItemName, { language: `fi`, value: `Luokka 4` }, { language: `sv`, value: `Klass 4` }, { language: `pl`, value: `PL: Class 4` }, { language: `en`, value: `Class 4` },);
        this.set(this.enumScaffoldingLoadClassTypeClass4DescriptionLanguageItemName, { language: `fi`, value: `Luokka 4 (3 kN/m2)` }, { language: `sv`, value: `Klass 4 /3 kN/m2)` }, { language: `pl`, value: `PL: Class 4 (3 kN/m2)` }, { language: `en`, value: `Class 4 (3 kN/m2)` },);
        this.set(this.enumScaffoldingLoadClassTypeClass5LanguageItemName, { language: `fi`, value: `Luokka 5` }, { language: `sv`, value: `Klass 5` }, { language: `pl`, value: `PL: Class 5` }, { language: `en`, value: `Class 5` },);
        this.set(this.enumScaffoldingLoadClassTypeClass5DescriptionLanguageItemName, { language: `fi`, value: `Luokka 5 (4.5 kN/m2)` }, { language: `sv`, value: `Klass 5 (4.5 kN/m2)` }, { language: `pl`, value: `PL: Class 5 (4.5 kN/m2)` }, { language: `en`, value: `Class 5 (4.5 kN/m2)` },);
        this.set(this.enumScaffoldingLoadClassTypeClass6LanguageItemName, { language: `fi`, value: `Luokka 6` }, { language: `sv`, value: `Klass 6` }, { language: `pl`, value: `PL: Class 6` }, { language: `en`, value: `Class 6` },);
        this.set(this.enumScaffoldingLoadClassTypeClass6DescriptionLanguageItemName, { language: `fi`, value: `Luokka 6 (6 kN/m2)` }, { language: `sv`, value: `Klass 6 (6 kN/m2)` }, { language: `pl`, value: `PL: Class 6 (6 kN/m2)` }, { language: `en`, value: `Class 6 (6 kN/m2)` },);
        this.set(this.enumProductUnitPieceLanguageItemName, { language: `fi`, value: `Kappale` }, { language: `sv`, value: `Antal` }, { language: `pl`, value: `PL: Piece` }, { language: `en`, value: `Piece` },);
        this.set(this.enumProductUnitMeterLanguageItemName, { language: `fi`, value: `Metri` }, { language: `sv`, value: `Meter` }, { language: `pl`, value: `PL: Meter` }, { language: `en`, value: `Meter` },);
        this.set(this.enumProductUnitKilometerLanguageItemName, { language: `fi`, value: `Kilometri` }, { language: `sv`, value: `Kilometer` }, { language: `pl`, value: `PL: Kilometer` }, { language: `en`, value: `Kilometer` },);
        this.set(this.enumProductUnitMeter2LanguageItemName, { language: `fi`, value: `Neliömetri` }, { language: `sv`, value: `Kvadratmeter` }, { language: `pl`, value: `PL: Square meter` }, { language: `en`, value: `Square meter` },);
        this.set(this.enumProductUnitLiterLanguageItemName, { language: `fi`, value: `Litra` }, { language: `sv`, value: `Liter` }, { language: `pl`, value: `PL: Liter` }, { language: `en`, value: `Liter` },);
        this.set(this.enumProductUnitBoxLanguageItemName, { language: `fi`, value: `Laatikko` }, { language: `sv`, value: `Låda` }, { language: `pl`, value: `PL: Box` }, { language: `en`, value: `Box` },);
        this.set(this.enumProductUnitPairLanguageItemName, { language: `fi`, value: `Pari` }, { language: `sv`, value: `Par` }, { language: `pl`, value: `PL: Pair` }, { language: `en`, value: `Pair` },);
        this.set(this.enumProductUnitBottleLanguageItemName, { language: `fi`, value: `Pullo` }, { language: `sv`, value: `Flaska` }, { language: `pl`, value: `PL: Bottle` }, { language: `en`, value: `Bottle` },);
        this.set(this.enumProductUnitCanLanguageItemName, { language: `fi`, value: `Purkki` }, { language: `sv`, value: `Burk` }, { language: `pl`, value: `PL: Can` }, { language: `en`, value: `Can` },);
        this.set(this.enumProductUnitBagLanguageItemName, { language: `fi`, value: `Pussi` }, { language: `sv`, value: `Kasse` }, { language: `pl`, value: `PL: Bag` }, { language: `en`, value: `Bag` },);
        this.set(this.enumProductUnitRollLanguageItemName, { language: `fi`, value: `Rulla` }, { language: `sv`, value: `Rulle` }, { language: `pl`, value: `PL: Roll` }, { language: `en`, value: `Roll` },);
        this.set(this.enumProductUnitCustomLanguageItemName, { language: `fi`, value: `Mukautettu` }, { language: `sv`, value: `Anpassad` }, { language: `pl`, value: `PL: Custom` }, { language: `en`, value: `Custom` },);
        this.set(this.sendWorkReportTitleLanguageItemName, { language: `fi`, value: `Lähetä työraportti` }, { language: `sv`, value: `Skicka arbetsraport` }, { language: `pl`, value: `PL: Send work report` }, { language: `en`, value: `Send work report` },);
        this.set(this.sendWorkReportSubtitleLanguageItemName, { language: `fi`, value: `uudelle tai olemassa olevalle yhteyshenkilölle` }, { language: `sv`, value: `till ny eller befintlig kontakt person` }, { language: `pl`, value: `PL: for approving by email to existing or new contact person` }, { language: `en`, value: `for approving by email to existing or new contact person` },);
        this.set(this.sendWorkReportDropdownLabelLanguageItemName, { language: `fi`, value: `Yhteyshenkilö` }, { language: `sv`, value: `Kontakt person` }, { language: `pl`, value: `PL: Contact person` }, { language: `en`, value: `Contact person` },);
        this.set(this.sendWorkReportDropdownNewContactPersonLanguageItemName, { language: `fi`, value: `Uusi yhteyshenkilö` }, { language: `sv`, value: `SV: New contact person` }, { language: `pl`, value: `PL: New contact person` }, { language: `en`, value: `New contact person` },);
        this.set(this.sendWorkReportNewContactPersonLanguageItemName, { language: `fi`, value: `Luo uusi yhteyshenkilö` }, { language: `sv`, value: `Skapa ny kontakt person` }, { language: `pl`, value: `PL: Create new contact person` }, { language: `en`, value: `Create new contact person` },);
        this.set(this.workHoursWidgetApprovedLanguageItemName, { language: `fi`, value: `Hyväksytty` }, { language: `sv`, value: `Godkänd` }, { language: `pl`, value: `PL: Approved` }, { language: `en`, value: `Approved` },);
        this.set(this.workHoursWidgetReportedLanguageItemName, { language: `fi`, value: `Ilmoitettu` }, { language: `sv`, value: `Rapporterad` }, { language: `pl`, value: `PL: Reported` }, { language: `en`, value: `Reported` },);
        this.set(this.workHoursWidgetContractHoursLanguageItemName, { language: `fi`, value: `Urakkatunnit` }, { language: `sv`, value: `SV: Contract hours` }, { language: `pl`, value: `PL: Contract hours` }, { language: `en`, value: `Contract hours` },);
        this.set(this.workHoursWidgetSalaryHoursLanguageItemName, { language: `fi`, value: `Palkkatunnit` }, { language: `sv`, value: `SV: Salary hours` }, { language: `pl`, value: `PL: Salary hours` }, { language: `en`, value: `Salary hours` },);
        this.set(this.myWorkHoursLabelLanguageItemName, { language: `fi`, value: `Omat työtunnit` }, { language: `sv`, value: `Mina arbets timmar` }, { language: `pl`, value: `PL: My work hours` }, { language: `en`, value: `My work hours` },);
        this.set(this.myWorkHoursDescriptionLanguageItemName, { language: `fi`, value: `Katso ilmoitetut/hyväksytyt työtunnit` }, { language: `sv`, value: `Kolla raporterade/godkända arbetstimmar` }, { language: `pl`, value: `PL: Check reported/approved work hours` }, { language: `en`, value: `Check reported/approved work hours` },);
        this.set(this.myWorkHoursNoTaskLanguageItemName, { language: `fi`, value: `EI VALITTUA TEHTÄVÄÄ` }, { language: `en`, value: `NO TASK ASSIGNED` },);
        this.set(this.myWorkHoursLunchHourInstructionsTitleLanguageItemName, { language: `fi`, value: `Huomio` }, { language: `en`, value: `Note` },);
        this.set(this.myWorkHoursLunchHourInstructionsDescriptionLanguageItemName, { language: `fi`, value: `Syötä työtunnit ilman ruokatuntivähennyksiä.` }, { language: `en`, value: `Enter all of your working hours. Lunch hours will be calculated automatically.` },);
        this.set(this.myWorkHoursNoReportedHoursLanguageItemName, { language: `fi`, value: `Ei ilmoitettuja tunteja tälle päivälle` }, { language: `sv`, value: `Inga raporterade timmar för denna dag` }, { language: `pl`, value: `PL: No reported hours for this day` }, { language: `en`, value: `No reported hours for this day` },);
        this.set(this.enumPaymentTermsCodeP0LanguageItemName, { language: `fi`, value: `0 pv netto` }, { language: `sv`, value: `0 dagar netto` }, { language: `pl`, value: `PL: 0 days net` }, { language: `en`, value: `0 days net` },);
        this.set(this.enumPaymentTermsCodeP14LanguageItemName, { language: `fi`, value: `14 pv netto` }, { language: `sv`, value: `14 dagar netto` }, { language: `pl`, value: `PL: 14 days net` }, { language: `en`, value: `14 days net` },);
        this.set(this.enumPaymentTermsCodeP21LanguageItemName, { language: `fi`, value: `21 pv netto` }, { language: `sv`, value: `21 dagar netto` }, { language: `pl`, value: `PL: 21 days net` }, { language: `en`, value: `21 days net` },);
        this.set(this.enumPaymentTermsCodeP30LanguageItemName, { language: `fi`, value: `30 pv netto` }, { language: `sv`, value: `30 dagar netto` }, { language: `pl`, value: `PL: 30 days net` }, { language: `en`, value: `30 days net` },);
        this.set(this.enumPaymentTermsCodeP45LanguageItemName, { language: `fi`, value: `45 pv netto` }, { language: `sv`, value: `45 dagar netto` }, { language: `pl`, value: `PL: 45 days net` }, { language: `en`, value: `45 days net` },);
        this.set(this.enumPaymentTermsCodeP60LanguageItemName, { language: `fi`, value: `60 pv netto` }, { language: `sv`, value: `60 dagar netto` }, { language: `pl`, value: `PL: 60 days net` }, { language: `en`, value: `60 days net` },);
        this.set(this.enumPaymentTermsCodeP7LanguageItemName, { language: `fi`, value: `7 pv netto` }, { language: `sv`, value: `7 dagar netto` }, { language: `pl`, value: `PL: 7 days net` }, { language: `en`, value: `7 days net` },);
        this.set(this.enumInvoiceStateCreatedLanguageItemName, { language: `fi`, value: `Luotu` }, { language: `sv`, value: `Skapad` }, { language: `pl`, value: `PL: Created` }, { language: `en`, value: `Created` },);
        this.set(this.enumInvoiceStateCreatedDescriptionLanguageItemName, { language: `fi`, value: `Luo per esimies, ei hyväksytty` }, { language: `sv`, value: `Skapad av förman, inte godkänd` }, { language: `pl`, value: `PL: Create by manager, not approved` }, { language: `en`, value: `Create by manager, not approved` },);
        this.set(this.enumInvoiceStateApprovedLanguageItemName, { language: `fi`, value: `Hyväksytty` }, { language: `sv`, value: `Godkänd` }, { language: `pl`, value: `PL: Approved` }, { language: `en`, value: `Approved` },);
        this.set(this.enumInvoiceStateApprovedDescriptionLanguageItemName, { language: `fi`, value: `Laskut hyväksytty esimieheltä` }, { language: `sv`, value: `Faktura godkännd av förman` }, { language: `pl`, value: `PL: Invoice approved by manager` }, { language: `en`, value: `Invoice approved by manager` },);
        this.set(this.enumInvoiceStateSentLanguageItemName, { language: `fi`, value: `Lähetetty` }, { language: `sv`, value: `Skickat` }, { language: `pl`, value: `PL: Sent` }, { language: `en`, value: `Sent` },);
        this.set(this.enumInvoiceStateSentDescriptionLanguageItemName, { language: `fi`, value: `Lasku lähetetty laskujärjestelmään` }, { language: `sv`, value: `Faktura skickat till faktureringssystemet` }, { language: `pl`, value: `PL: Invoice sent to invoicing system` }, { language: `en`, value: `Invoice sent to invoicing system` },);
        this.set(this.enumInvoiceStateProcessedLanguageItemName, { language: `fi`, value: `Käsitelty` }, { language: `sv`, value: `Bearbetas` }, { language: `pl`, value: `PL: Processed` }, { language: `en`, value: `Processed` },);
        this.set(this.enumInvoiceStateProcessedDescriptionLanguageItemName, { language: `fi`, value: `Onnistuneesti käseitelty laskutusjärjestelmästä` }, { language: `sv`, value: `Processerat av faktureringssystemet` }, { language: `pl`, value: `PL: Successfully processed by invoicing system` }, { language: `en`, value: `Successfully processed by invoicing system` },);
        this.set(this.enumInvoiceStateFailedLanguageItemName, { language: `fi`, value: `Epäonnistui` }, { language: `sv`, value: `Misslyckades` }, { language: `pl`, value: `PL: Failed` }, { language: `en`, value: `Failed` },);
        this.set(this.enumInvoiceStateFailedDescriptionLanguageItemName, { language: `fi`, value: `Epäonnistui käsittelyn aikana laskutusjärjestelmästä` }, { language: `sv`, value: `Misslyckades under räknings systemets processering` }, { language: `pl`, value: `PL: Failed during processing by invoicing system` }, { language: `en`, value: `Failed during processing by invoicing system` },);
        this.set(this.enumInvoiceStateFilterCreatedLanguageItemName, { language: `fi`, value: `Luotu` }, { language: `en`, value: `Created` },);
        this.set(this.enumInvoiceStateFilterCreatedDescriptionLanguageItemName, { language: `fi`, value: `Luo per esimies, ei hyväksytty` }, { language: `en`, value: `Create by manager, not approved` },);
        this.set(this.enumInvoiceStateFilterApprovedLanguageItemName, { language: `fi`, value: `Hyväksytty` }, { language: `en`, value: `Approved` },);
        this.set(this.enumInvoiceStateFilterApprovedDescriptionLanguageItemName, { language: `fi`, value: `Laskut hyväksytty esimieheltä` }, { language: `en`, value: `Invoice approved by manager` },);
        this.set(this.enumInvoiceStateFilterSentLanguageItemName, { language: `fi`, value: `Lähetetty` }, { language: `en`, value: `Sent` },);
        this.set(this.enumInvoiceStateFilterSentDescriptionLanguageItemName, { language: `fi`, value: `Lasku lähetetty laskujärjestelmään` }, { language: `en`, value: `Invoice sent to invoicing system` },);
        this.set(this.enumInvoiceStateFilterProcessedLanguageItemName, { language: `fi`, value: `Käsitelty` }, { language: `en`, value: `Processed` },);
        this.set(this.enumInvoiceStateFilterProcessedDescriptionLanguageItemName, { language: `fi`, value: `Onnistuneesti käseitelty laskutusjärjestelmästä` }, { language: `en`, value: `Successfully processed by invoicing system` },);
        this.set(this.enumInvoiceStateFilterFailedLanguageItemName, { language: `fi`, value: `Epäonnistui` }, { language: `en`, value: `Failed` },);
        this.set(this.enumInvoiceStateFilterFailedDescriptionLanguageItemName, { language: `fi`, value: `Epäonnistui käsittelyn aikana laskutusjärjestelmästä` }, { language: `en`, value: `Failed during processing by invoicing system` },);
        this.set(this.enumInvoiceStateFilterLockedLanguageItemName, { language: `fi`, value: `Lukittu` }, { language: `en`, value: `Locked` },);
        this.set(this.enumInvoiceStateFilterLockedDescriptionLanguageItemName, { language: `fi`, value: `Laskut jotka ovat lukittu ja valmiita lähetettäväksi` }, { language: `en`, value: `An invoice marked as locked and ready to be sent` },);
        this.set(this.enumInvoiceTypeDebitLanguageItemName, { language: `fi`, value: `Myyntilasku` }, { language: `sv`, value: `Debit` }, { language: `pl`, value: `Debit` }, { language: `en`, value: `Debit` },);
        this.set(this.enumInvoiceTypeCreditLanguageItemName, { language: `fi`, value: `Hyvityslasku` }, { language: `sv`, value: `Credit` }, { language: `pl`, value: `Credit` }, { language: `en`, value: `Credit` },);
        this.set(this.enumInvoiceRowTypeContractTaskLanguageItemName, { language: `fi`, value: `Sopimus tehtävä` }, { language: `sv`, value: `Kontrakt uppgift` }, { language: `pl`, value: `PL: Contract task` }, { language: `en`, value: `Contract task` },);
        this.set(this.enumInvoiceRowTypeContractTaskDescriptionLanguageItemName, { language: `fi`, value: `3030` }, { language: `sv`, value: `3030` }, { language: `pl`, value: `3030` }, { language: `en`, value: `3030` },);
        this.set(this.enumInvoiceRowTypeRentLanguageItemName, { language: `fi`, value: `Vuokra` }, { language: `sv`, value: `Hyr` }, { language: `pl`, value: `PL: Rent` }, { language: `en`, value: `Rent` },);
        this.set(this.enumInvoiceRowTypeRentDescriptionLanguageItemName, { language: `fi`, value: `3000` }, { language: `sv`, value: `3000` }, { language: `pl`, value: `3000` }, { language: `en`, value: `3000` },);
        this.set(this.enumInvoiceRowTypeExtraRentLanguageItemName, { language: `fi`, value: `Minimivuokra` }, { language: `sv`, value: `SV: Extra rent` }, { language: `pl`, value: `PL: Extra rent` }, { language: `en`, value: `Extra rent` },);
        this.set(this.enumInvoiceRowTypeWorkReportLanguageItemName, { language: `fi`, value: `Työraportti` }, { language: `sv`, value: `Arbets raport` }, { language: `pl`, value: `PL: Work report` }, { language: `en`, value: `Work report` },);
        this.set(this.enumInvoiceRowTypeWorkReportDescriptionLanguageItemName, { language: `fi`, value: `3020` }, { language: `sv`, value: `3020` }, { language: `pl`, value: `3020` }, { language: `en`, value: `3020` },);
        this.set(this.enumInvoiceRowTypeWorkReportsLanguageItemName, { language: `fi`, value: `Työraportit` }, { language: `sv`, value: `Arbets rapporter` }, { language: `pl`, value: `PL: Work reports` }, { language: `en`, value: `Work reports` },);
        this.set(this.enumInvoiceRowTypeTaskEquipmentLanguageItemName, { language: `fi`, value: `Tarvikkeet` }, { language: `sv`, value: `SV: Equipment` }, { language: `pl`, value: `PL: Equipment` }, { language: `en`, value: `Equipment` },);
        this.set(this.enumInvoiceRowTypeTaskEquipmentDescriptionLanguageItemName, { language: `fi`, value: `3050` }, { language: `sv`, value: `3050` }, { language: `pl`, value: `3050` }, { language: `en`, value: `3050` },);
        this.set(this.enumInvoiceRowTypeTaskExtraChargeLanguageItemName, { language: `fi`, value: `Lisämaksu` }, { language: `sv`, value: `SV: Extra charge` }, { language: `pl`, value: `PL: Extra charge` }, { language: `en`, value: `Extra charge` },);
        this.set(this.enumManualInvoiceRowTypeContractTaskLanguageItemName, { language: `fi`, value: `3030` }, { language: `sv`, value: `3030` }, { language: `pl`, value: `3030` }, { language: `en`, value: `3030` },);
        this.set(this.enumManualInvoiceRowTypeContractTaskDescriptionLanguageItemName, { language: `fi`, value: `Sopimus tehtävä` }, { language: `sv`, value: `SV: Contract task` }, { language: `pl`, value: `PL: Contract task` }, { language: `en`, value: `Contract task` },);
        this.set(this.enumManualInvoiceRowTypeRentLanguageItemName, { language: `fi`, value: `3000` }, { language: `sv`, value: `3000` }, { language: `pl`, value: `3000` }, { language: `en`, value: `3000` },);
        this.set(this.enumManualInvoiceRowTypeRentDescriptionLanguageItemName, { language: `fi`, value: `Vuokra` }, { language: `sv`, value: `SV: Rent` }, { language: `pl`, value: `PL: Rent` }, { language: `en`, value: `Rent` },);
        this.set(this.enumManualInvoiceRowTypeWorkReportLanguageItemName, { language: `fi`, value: `3020` }, { language: `sv`, value: `3020` }, { language: `pl`, value: `3020` }, { language: `en`, value: `3020` },);
        this.set(this.enumManualInvoiceRowTypeWorkReportDescriptionLanguageItemName, { language: `fi`, value: `Työraportti` }, { language: `sv`, value: `SV: WorkReport` }, { language: `pl`, value: `PL: WorkReport` }, { language: `en`, value: `WorkReport` },);
        this.set(this.enumManualInvoiceRowTypeTaskEquipmentLanguageItemName, { language: `fi`, value: `3050` }, { language: `sv`, value: `3050` }, { language: `pl`, value: `3050` }, { language: `en`, value: `3050` },);
        this.set(this.enumManualInvoiceRowTypeTaskEquipmentDescriptionLanguageItemName, { language: `fi`, value: `Tarvikkeet` }, { language: `sv`, value: `SV: Equipment` }, { language: `pl`, value: `PL: Equipment` }, { language: `en`, value: `Equipment` },);
        this.set(this.gridNoItemsLanguageItemName, { language: `fi`, value: `Ei kohteita` }, { language: `sv`, value: `Inga artiklar` }, { language: `pl`, value: `PL: No items` }, { language: `en`, value: `No items` },);
        this.set(this.gridNoDataInvoicesLanguageItemName, { language: `fi`, value: `Laskuja ei ole` }, { language: `sv`, value: `Inga räkningar` }, { language: `pl`, value: `PL: No invoices` }, { language: `en`, value: `No invoices` },);
        this.set(this.gridNoDataInvoiceRowsLanguageItemName, { language: `fi`, value: `Laskurivejä ei ole vielä luotu` }, { language: `sv`, value: `Inga räknings rader har skapats ännu` }, { language: `pl`, value: `PL: No invoice rows have been created yet` }, { language: `en`, value: `No invoice rows have been created yet` },);
        this.set(this.gridNoDataModulesLanguageItemName, { language: `fi`, value: `Moduuleja ei ole vielä luotu` }, { language: `sv`, value: `Inga moduler har skapats ännu` }, { language: `pl`, value: `PL: No modules have been created yet` }, { language: `en`, value: `No modules have been created yet` },);
        this.set(this.gridNoDataTasksLanguageItemName, { language: `fi`, value: `Ei tehtäviä` }, { language: `sv`, value: `Inga uppdrag har skapats ännu` }, { language: `pl`, value: `PL: No tasks have been created yet` }, { language: `en`, value: `No tasks have been created yet` },);
        this.set(this.gridNoDataSubcontractorsLanguageItemName, { language: `fi`, value: `Ei aliurakoitsijoita` }, { language: `sv`, value: `Inga underleverantörer` }, { language: `pl`, value: `PL: No subcontractors` }, { language: `en`, value: `No subcontractors` },);
        this.set(this.gridNoDataWorkReportsLanguageItemName, { language: `fi`, value: `Työraportteja ei ole vielä luotu` }, { language: `sv`, value: `Inga raporter har skapats ännu` }, { language: `pl`, value: `PL: No work reports have been created yet` }, { language: `en`, value: `No work reports have been created yet` },);
        this.set(this.documentPreviewModalInvoiceTitleLanguageItemName, { language: `fi`, value: `Laskun esikatselu` }, { language: `sv`, value: `Räknings förhandsgranskning` }, { language: `pl`, value: `PL: Invoice preview` }, { language: `en`, value: `Invoice preview` },);
        this.set(this.documentPreviewModalWorkReportTitleLanguageItemName, { language: `fi`, value: `Työraportin esikatselu` }, { language: `sv`, value: `Arbets raports förhandsvisning` }, { language: `pl`, value: `PL: Work report preview` }, { language: `en`, value: `Work report preview` },);
        this.set(this.componentFooterContactLanguageItemName, { language: `fi`, value: `Yhteystiedot` }, { language: `sv`, value: `Kontakt information` }, { language: `pl`, value: `PL: Contact information` }, { language: `en`, value: `Contact information` },);
        this.set(this.componentFooterFrontpageLanguageItemName, { language: `fi`, value: `Etusivu` }, { language: `sv`, value: `Framsida` }, { language: `pl`, value: `PL: Frontpage` }, { language: `en`, value: `Frontpage` },);
        this.set(this.componentListLoadingLanguageItemName, { language: `fi`, value: `Ladataan...` }, { language: `sv`, value: `Laddar...` }, { language: `pl`, value: `PL: Loading...` }, { language: `en`, value: `Loading...` },);
        this.set(this.workDayPanelHalfDayAllowanceLanguageItemName, { language: `fi`, value: `1/2 puolipäivä` }, { language: `sv`, value: `1/2 Halv dag` }, { language: `pl`, value: `PL: Half of the day` }, { language: `en`, value: `Half of the day` },);
        this.set(this.workDayPanelWorkDayTypeLanguageItemName, { language: `fi`, value: `Tyyppi` }, { language: `sv`, value: `SV: Type` }, { language: `pl`, value: `PL: Type` }, { language: `en`, value: `Type` },);
        this.set(this.workDayPanelSalaryHoursLanguageItemName, { language: `fi`, value: `Palkka\ntunnit` }, { language: `sv`, value: `SV: Salary \nhours` }, { language: `pl`, value: `PL: Salary \nhours` }, { language: `en`, value: `Salary \nhours` },);
        this.set(this.workDayPanelSalaryHoursDescriptionLanguageItemName, { language: `fi`, value: `Palkanmaksuun lähetettävät tunnit` }, { language: `sv`, value: `SV: Hours to be transferred to payroll` }, { language: `pl`, value: `PL: Hours to be transferred to payroll` }, { language: `en`, value: `Hours to be transferred to payroll` },);
        this.set(this.addTaskModalWorkReportLanguageItemName, { language: `fi`, value: `Työraportti` }, { language: `sv`, value: `Arbets raport` }, { language: `pl`, value: `PL: Work Report` }, { language: `en`, value: `Work Report` },);
        this.set(this.addTaskModalPriceEuroLanguageItemName, { language: `fi`, value: `Hinta, €` }, { language: `en`, value: `Price, €` },);
        this.set(this.addTaskModalCostEuroLanguageItemName, { language: `fi`, value: `Kustannus, €` }, { language: `en`, value: `Cost, €` },);
        this.set(this.addTaskModalSiteOrWarehouseLanguageItemName, { language: `fi`, value: `Työmaa tai varasto` }, { language: `sv`, value: `Byggplats eller lager` }, { language: `pl`, value: `PL: Site or warehouse` }, { language: `en`, value: `Site or warehouse` },);
        this.set(this.addTaskModalAgreementLanguageItemName, { language: `fi`, value: `Sopimus` }, { language: `sv`, value: `SV: Agreement` }, { language: `pl`, value: `PL: Agreement` }, { language: `en`, value: `Agreement` },);
        this.set(this.addTaskModalExtraHoursAutoCalculatedLanguageItemName, { language: `fi`, value: `Automaattisesti laskettu` }, { language: `en`, value: `Auto calculated` },);
        this.set(this.addWorkReportModalCreateNewReportLanguageItemName, { language: `fi`, value: `Luo uusi työraportti` }, { language: `sv`, value: `Skapa ny arbets raport` }, { language: `pl`, value: `PL: Create new work report` }, { language: `en`, value: `Create new work report` },);
        this.set(this.addWorkReportModalAttachmentsLanguageItemName, { language: `fi`, value: `Liitteet` }, { language: `sv`, value: `SV: Attachments` }, { language: `pl`, value: `PL: Attachments` }, { language: `en`, value: `Attachments` },);
        this.set(this.addWorkReportModalAttachmentRemoveConfirmationLanguageItemName, { language: `fi`, value: `Oletko varma että haluat poista liitetiedosto?` }, { language: `en`, value: `Are you sure that you want to remove attachment file?` },);
        this.set(this.addWorkReportModalCreateNewReportSubtitleLanguageItemName, { language: `fi`, value: `Täytä laskutus materiaalilla` }, { language: `sv`, value: `Och fyll den med räknings material` }, { language: `pl`, value: `PL: And fill it with invoicing material` }, { language: `en`, value: `And fill it with invoicing material` },);
        this.set(this.addWorkReportModalValidationCreateWorkReportFirstLanguageItemName, { language: `fi`, value: `Luo työraportti, jotta voit lisätä uusia tehtäviä` }, { language: `en`, value: `Create work report first to enable creating new tasks functionality` },);
        this.set(this.addWorkReportModalGridExtraChargesLanguageItemName, { language: `fi`, value: `Lisämaksut` }, { language: `en`, value: `Extra charges` },);
        this.set(this.addWorkReportModalGridExtraChargesTitleLanguageItemName, { language: `fi`, value: `Tehtävän lisämaksujen kokonaishinta` }, { language: `en`, value: `Sum of task extra charges costs` },);
        this.set(this.taskHoursPanelHoursLanguageItemName, { language: `fi`, value: `Työtunnit` }, { language: `sv`, value: `Timmar` }, { language: `pl`, value: `PL: Hours` }, { language: `en`, value: `Hours` },);
        this.set(this.taskHoursPanelHoursInfoLanguageItemName, { language: `fi`, value: `Automaattisesti lasketut tunnit` }, { language: `sv`, value: `Automatiskt räknade timmar` }, { language: `pl`, value: `PL: Automatically counted hours` }, { language: `en`, value: `Automatically counted hours` },);
        this.set(this.taskHoursPanelExtraHoursLanguageItemName, { language: `fi`, value: `Laskutunnit` }, { language: `sv`, value: `Extra \n timmar` }, { language: `pl`, value: `PL: Extra \n hours` }, { language: `en`, value: `Extra \n hours` },);
        this.set(this.taskHoursPanelExtraHoursInfoLanguageItemName, { language: `fi`, value: `Lisätunnit, asentajan ilmoittama` }, { language: `sv`, value: `Extra timmar, raporterat av uppgiftens montör` }, { language: `pl`, value: `PL: Extra hours, reported by mounter for the task` }, { language: `en`, value: `Extra hours, reported by mounter for the task` },);
        this.set(this.taskHoursPanelOvertimeLanguageItemName, { language: `fi`, value: `Ylityö` }, { language: `sv`, value: `Övertid` }, { language: `pl`, value: `PL: Overtime` }, { language: `en`, value: `Overtime` },);
        this.set(this.taskHoursPanelContractHoursLanguageItemName, { language: `fi`, value: `Tunnit` }, { language: `sv`, value: `SV: Hours` }, { language: `pl`, value: `PL: Hours` }, { language: `en`, value: `Hours` },);
        this.set(this.taskHoursPanelContractHoursPriceLanguageItemName, { language: `fi`, value: `Hinta, €/h` }, { language: `sv`, value: `Pris, €/h` }, { language: `pl`, value: `PL: Price, €/h` }, { language: `en`, value: `Price, €/h` },);
        this.set(this.taskHoursPanelContractHoursPriceInfoLanguageItemName, { language: `fi`, value: `Sopimushinta €` }, { language: `sv`, value: `Kontrakt pris €` }, { language: `pl`, value: `PL: Contract cost €` }, { language: `en`, value: `Contract cost €` },);
        this.set(this.taskHoursPanelNoAccessToHoursLanguageItemName, { language: `fi`, value: `Tehtävä sisältää tunteja, joihin sinulla ei ole pääsyä` }, { language: `sv`, value: `SV: Task contains hours that you do not have access to` }, { language: `pl`, value: `PL: Task contains hours that you do not have access to` }, { language: `en`, value: `Task contains hours that you do not have access to` },);
        this.set(this.addTaskModalMountersLanguageItemName, { language: `fi`, value: `Asentajat` }, { language: `sv`, value: `Montörer` }, { language: `pl`, value: `PL: Mounters` }, { language: `en`, value: `Mounters` },);
        this.set(this.addTaskModalNameLanguageItemName, { language: `fi`, value: `Nimi` }, { language: `en`, value: `Name` },);
        this.set(this.tasksPanelDateLanguageItemName, { language: `fi`, value: `Päivämäärä` }, { language: `sv`, value: `Datum` }, { language: `pl`, value: `PL: Date` }, { language: `en`, value: `Date` },);
        this.set(this.tasksPanelCreateModuleLanguageItemName, { language: `fi`, value: `Luo moduuli` }, { language: `sv`, value: `SV: Create module` }, { language: `pl`, value: `PL: Create module` }, { language: `en`, value: `Create module` },);
        this.set(this.tasksPanelCreateExtraModuleLanguageItemName, { language: `fi`, value: `Luo extra moduuli` }, { language: `sv`, value: `SV: Create extra module` }, { language: `pl`, value: `PL: Create extra module` }, { language: `en`, value: `Create extra module` },);
        this.set(this.tasksPanelCostLanguageItemName, { language: `fi`, value: `Kustannus` }, { language: `sv`, value: `Kostnad` }, { language: `pl`, value: `PL: Cost` }, { language: `en`, value: `Cost` },);
        this.set(this.tasksPanelPriceLanguageItemName, { language: `fi`, value: `Hinta` }, { language: `en`, value: `Price` },);
        this.set(this.tasksPanelDeleteTaskLanguageItemName, { language: `fi`, value: `Poista työtilaus` }, { language: `en`, value: `Delete task` },);
        this.set(this.tasksPanelCommitChangesLanguageItemName, { language: `fi`, value: `Tallenna` }, { language: `en`, value: `Save changes` },);
        this.set(this.tasksPanelCancelChangesLanguageItemName, { language: `fi`, value: `Peruuta` }, { language: `en`, value: `Cancel changes` },);
        this.set(this.tasksPanelDeleteHoursLanguageItemName, { language: `fi`, value: `Poista tunnit` }, { language: `en`, value: `Delete hours` },);
        this.set(this.tasksPanelRentTabTitleLanguageItemName, { language: `fi`, value: `Vuokra` }, { language: `sv`, value: `Hyr` }, { language: `pl`, value: `PL: Rent` }, { language: `en`, value: `Rent` },);
        this.set(this.tasksPanelAgreementLanguageItemName, { language: `fi`, value: `Maksuerätaulukko` }, { language: `sv`, value: `SV: Agreement` }, { language: `pl`, value: `PL: Agreement` }, { language: `en`, value: `Agreement` },);
        this.set(this.taskTooltipsNewTaskLanguageItemName, { language: `fi`, value: `Uusi työtilaus` }, { language: `en`, value: `New work order` },);
        this.set(this.taskTooltipsTaskInProgressLanguageItemName, { language: `fi`, value: `Tehtävä tekeillä` }, { language: `sv`, value: `SV: Task in process` }, { language: `pl`, value: `PL: Task in process` }, { language: `en`, value: `Task in process` },);
        this.set(this.taskTooltipsTaskWaitingActivationLanguageItemName, { language: `fi`, value: `Tehtävä odottaa aloituspäivämäärää` }, { language: `sv`, value: `SV: Task is waiting for activation date` }, { language: `pl`, value: `PL: Task is waiting for activation date` }, { language: `en`, value: `Task is waiting for activation date` },);
        this.set(this.taskTooltipsTaskApprovedLanguageItemName, { language: `fi`, value: `Tehtävä suoritettu ja hyväksytty` }, { language: `sv`, value: `SV: Task is completed and approved` }, { language: `pl`, value: `PL: Task is completed and approved` }, { language: `en`, value: `Task is completed and approved` },);
        this.set(this.taskTooltipsTaskDeclinedLanguageItemName, { language: `fi`, value: `Asiakas on hylännyt työtilauksen` }, { language: `en`, value: `Work order is declined by customer` },);
        this.set(this.taskTooltipsTaskWaitingApprovalLanguageItemName, { language: `fi`, value: `Tehtävä suoritettu ja odottaa hyväksyntää` }, { language: `sv`, value: `SV: Task is completed, waiting for approving` }, { language: `pl`, value: `PL: Task is completed, waiting for approving` }, { language: `en`, value: `Task is completed, waiting for approving` },);
        this.set(this.taskTooltipsTaskInvoicedLanguageItemName, { language: `fi`, value: `Tehtävä laskutettu` }, { language: `sv`, value: `SV: Task is invoiced` }, { language: `pl`, value: `PL: Task is invoiced` }, { language: `en`, value: `Task is invoiced` },);
        this.set(this.taskTooltipsTaskReadyForInvoicingLanguageItemName, { language: `fi`, value: `Tehtävä valmiina laskutettavaksi (laskurivi hyväksytty)` }, { language: `sv`, value: `SV: Task is ready to be invoiced (invoice row created and approved)` }, { language: `pl`, value: `PL: Task is ready to be invoiced (invoice row created and approved)` }, { language: `en`, value: `Task is ready to be invoiced (invoice row created and approved)` },);
        this.set(this.taskHoursPanelFixedPriceLanguageItemName, { language: `fi`, value: `Kiinteä hinta, €` }, { language: `sv`, value: `Fast pris, €` }, { language: `pl`, value: `PL: Fixed price, €` }, { language: `en`, value: `Fixed price, €` },);
        this.set(this.tasksPanelInfoMounterHoursLanguageItemName, { language: `fi`, value: `Tiedot asentajan tunneista, sitoutuneet tehtävään` }, { language: `sv`, value: `Information om montörens timmar, gällande uppgiften` }, { language: `pl`, value: `PL: Information about mounter's hours, commited to the task` }, { language: `en`, value: `Information about mounter's hours, commited to the task` },);
        this.set(this.tasksPanelStartLanguageItemName, { language: `fi`, value: `Alku` }, { language: `sv`, value: `Starta` }, { language: `pl`, value: `PL: Start` }, { language: `en`, value: `Start` },);
        this.set(this.tasksPanelNameLanguageItemName, { language: `fi`, value: `Nimi` }, { language: `en`, value: `Name` },);
        this.set(this.tasksPanelStartInfoLanguageItemName, { language: `fi`, value: `Aloitus päivämäärä (päivämäärä kuin tehtävä on aloitettu)` }, { language: `sv`, value: `Aktiverings datum (datum när uppgiften är påbörjad)` }, { language: `pl`, value: `PL: Activation date (date when task is started)` }, { language: `en`, value: `Activation date (date when task is started)` },);
        this.set(this.tasksPanelDoneLanguageItemName, { language: `fi`, value: `Valmis` }, { language: `sv`, value: `Färdig` }, { language: `pl`, value: `PL: Done` }, { language: `en`, value: `Done` },);
        this.set(this.tasksPanelAddTaskTitleLanguageItemName, { language: `fi`, value: `Lisää tehtävä` }, { language: `sv`, value: `Lägg till uppgift` }, { language: `pl`, value: `PL: Add task` }, { language: `en`, value: `Add task` },);
        this.set(this.tasksPanelAddWorkReportTitleLanguageItemName, { language: `fi`, value: `Lisää työraportti` }, { language: `sv`, value: `Lägg till arbets raport` }, { language: `pl`, value: `PL: Add work report` }, { language: `en`, value: `Add work report` },);
        this.set(this.tasksPanelChangeWorkReportTitleLanguageItemName, { language: `fi`, value: `Muokkaa Työraporttia` }, { language: `sv`, value: `SV: Change Work Report` }, { language: `pl`, value: `PL: Change Work Report` }, { language: `en`, value: `Change Work Report` },);
        this.set(this.tasksPanelSaveWorkReportTitleLanguageItemName, { language: `fi`, value: `Tallenna Työraportti` }, { language: `sv`, value: `SV: Save Work Report` }, { language: `pl`, value: `PL: Save Work Report` }, { language: `en`, value: `Save Work Report` },);
        this.set(this.tasksPanelForecastLanguageItemName, { language: `fi`, value: `Ennuste` }, { language: `sv`, value: `Prognos` }, { language: `pl`, value: `PL: Forecast` }, { language: `en`, value: `Forecast` },);
        this.set(this.tasksPanelForecastInfoLanguageItemName, { language: `fi`, value: `Päivämäärä kun tehtävä pitäisi olla valmis` }, { language: `sv`, value: `Datum när uppgiften borde vara färdig (kontrakt datum)` }, { language: `pl`, value: `PL: Date when task should be completed (contract date)` }, { language: `en`, value: `Date when task should be completed (contract date)` },);
        this.set(this.tasksPanelExtraHoursInfoLanguageItemName, { language: `fi`, value: `Tehtävän lisätunnit, automaattisesti laskettu tuntien perusteella` }, { language: `sv`, value: `Uppgift extra timmar, beräknar automatiskt baserat på montörens inmatade extra timmar` }, { language: `pl`, value: `PL: Task extra hours, automatically calculated based on mounters entered extra hours` }, { language: `en`, value: `Task extra hours, automatically calculated based on mounters entered extra hours` },);
        this.set(this.tasksPanelActionsLanguageItemName, { language: `fi`, value: `Toiminnot` }, { language: `sv`, value: `Handlingar` }, { language: `pl`, value: `PL: Actions` }, { language: `en`, value: `Actions` },);
        this.set(this.tasksPanelCompleteTaskLanguageItemName, { language: `fi`, value: `Valmis tehtävä` }, { language: `sv`, value: `Färdig uppgift` }, { language: `pl`, value: `PL: Complete Task` }, { language: `en`, value: `Complete Task` },);
        this.set(this.tasksPanelActivateTaskLanguageItemName, { language: `fi`, value: `Aktivoi tehtävä` }, { language: `sv`, value: `Aktivera uppgift` }, { language: `pl`, value: `PL: Activate Task` }, { language: `en`, value: `Activate Task` },);
        this.set(this.tasksPanelApproveTaskCreateLanguageItemName, { language: `fi`, value: `Hyväksy tehtävä luodaksesi laskurivin` }, { language: `sv`, value: `Godkänn uppgift för att lägga till fakturerings rad` }, { language: `pl`, value: `PL: Approve task to create a invoice row` }, { language: `en`, value: `Approve task to create a invoice row` },);
        this.set(this.tasksPanelRestoreTaskLanguageItemName, { language: `fi`, value: `Palauta poistettu tehtävä` }, { language: `sv`, value: `Återställ raderade uppgifter` }, { language: `pl`, value: `PL: Restore deleted task` }, { language: `en`, value: `Restore deleted task` },);
        this.set(this.tasksPanelCodeLanguageItemName, { language: `fi`, value: `Koodi` }, { language: `sv`, value: `Kod` }, { language: `pl`, value: `PL: Code` }, { language: `en`, value: `Code` },);
        this.set(this.tasksPanelWorkReportDescriptionLanguageItemName, { language: `fi`, value: `Työreportin kuvaus` }, { language: `sv`, value: `Arbets raportens beskrivning` }, { language: `pl`, value: `PL: Description of the work report` }, { language: `en`, value: `Description of the work report` },);
        this.set(this.tasksPanelTypeLanguageItemName, { language: `fi`, value: `Tyyppi` }, { language: `sv`, value: `Typ` }, { language: `pl`, value: `PL: Type` }, { language: `en`, value: `Type` },);
        this.set(this.tasksPanelTasksLanguageItemName, { language: `fi`, value: `Tehtävät` }, { language: `sv`, value: `Uppgifter` }, { language: `pl`, value: `PL: Tasks` }, { language: `en`, value: `Tasks` },);
        this.set(this.tasksPanelExtraModuleCreatedLanguageItemName, { language: `fi`, value: `Extra moduuli on onnistuneesti luotu` }, { language: `sv`, value: `Extra moduler har skapats` }, { language: `pl`, value: `PL: Extra module has been successfully created` }, { language: `en`, value: `Extra module has been successfully created` },);
        this.set(this.tasksPanelConfirmationExtraModuleLanguageItemName, { language: `fi`, value: `Oletko varma että haluat luoda extra moduuli?` }, { language: `sv`, value: `Är du säker att du vill skapa extra modul för denna uppgift?` }, { language: `pl`, value: `PL: Are you sure that you want to create extra module for this task?` }, { language: `en`, value: `Are you sure that you want to create extra module for this task?` },);
        this.set(this.addTaskModalDescriptionLanguageItemName, { language: `fi`, value: `Kuvaus` }, { language: `sv`, value: `Beskrivning` }, { language: `pl`, value: `PL: Description` }, { language: `en`, value: `Description` },);
        this.set(this.addTaskModalAddTaskLanguageItemName, { language: `fi`, value: `Lisää tehtävä` }, { language: `sv`, value: `Lägg till uppgift` }, { language: `pl`, value: `PL: Add task` }, { language: `en`, value: `Add task` },);
        this.set(this.addTaskModalCreateTaskLanguageItemName, { language: `fi`, value: `Luo tehtävä` }, { language: `en`, value: `Create task` },);
        this.set(this.addTaskModalCreateAndContinueLanguageItemName, { language: `fi`, value: `Luo ja jatka` }, { language: `en`, value: `Create and continue` },);
        this.set(this.addTaskModalCreateAndCloseLanguageItemName, { language: `fi`, value: `Luo ja sulje` }, { language: `en`, value: `Create and close` },);
        this.set(this.addTaskModalValidationCreateTaskFirstLanguageItemName, { language: `fi`, value: `Luo taski, jotta voit lisätä tunnit ja lisämaksut` }, { language: `en`, value: `Create task first to enable mounter hours and extra charges functionality` },);
        this.set(this.addTaskModalValidationCreateWorkReportFirstLanguageItemName, { language: `fi`, value: `Tallenna työraportti, jotta voit lisätä tunnit ja lisämaksut` }, { language: `en`, value: `Save work report first to enable mounter hours and extra charges functionality` },);
        this.set(this.addTaskModalDeleteLanguageItemName, { language: `fi`, value: `Poista` }, { language: `sv`, value: `Radera` }, { language: `pl`, value: `PL: Delete` }, { language: `en`, value: `Delete` },);
        this.set(this.addTaskModalExtraHoursLanguageItemName, { language: `fi`, value: `Lisätunnit` }, { language: `en`, value: `Extra hours` },);
        this.set(this.addTaskModalDeleteConfirmLanguageItemName, { language: `fi`, value: `Haluatko varmasti poistaa tehtävän?` }, { language: `sv`, value: `SV: Do you really want to delete this task?` }, { language: `pl`, value: `PL: Do you really want to delete this task?` }, { language: `en`, value: `Do you really want to delete this task?` },);
        this.set(this.addTaskModalChangeTaskLanguageItemName, { language: `fi`, value: `Muokkaa tehtävää` }, { language: `sv`, value: `SV: Change task` }, { language: `pl`, value: `PL: Change task` }, { language: `en`, value: `Edit task` },);
        this.set(this.addTaskModalSaveTaskLanguageItemName, { language: `fi`, value: `Tallenna tehtävä` }, { language: `sv`, value: `SV: Save task` }, { language: `pl`, value: `PL: Save task` }, { language: `en`, value: `Save task` },);
        this.set(this.workDayPanelAutoDistanceLanguageItemName, { language: `fi`, value: `Automaattinen \n etäisyys, km` }, { language: `sv`, value: `Automatisk distans, km` }, { language: `pl`, value: `PL: Auto distance\nkm` }, { language: `en`, value: `Auto distance\nkm` },);
        this.set(this.workDayPanelWorkingHoursLanguageItemName, { language: `fi`, value: `Työtunnit` }, { language: `sv`, value: `SV: Hours` }, { language: `pl`, value: `PL: Hours` }, { language: `en`, value: `Hours` },);
        this.set(this.invoiceExportModalSendToNavLanguageItemName, { language: `fi`, value: `Lähetä Naville` }, { language: `sv`, value: `Skicka till Nav` }, { language: `pl`, value: `PL: Send To Nav` }, { language: `en`, value: `Send To Nav` },);
        this.set(this.addTaskModalAddTaskSubtitleLanguageItemName, { language: `fi`, value: `Lisää uusi tehtävä työmaalle ja määrä työntekijää` }, { language: `sv`, value: `Lägg till uppgift för byggplats och tilldela montörer` }, { language: `pl`, value: `PL: Add new task for construction site and assign mounters` }, { language: `en`, value: `Add new task for construction site and assign mounters` },);
        this.set(this.addConstructionsiteSalesPersonLanguageItemName, { language: `fi`, value: `Myyjä` }, { language: `sv`, value: `Försäljare` }, { language: `pl`, value: `PL: Sales person` }, { language: `en`, value: `Sales person` },);
        this.set(this.addConstructionsiteTitleLanguageItemName, { language: `fi`, value: `Lisää työmaa` }, { language: `sv`, value: `SV: Add construction site` }, { language: `pl`, value: `PL: Add construction site` }, { language: `en`, value: `Add construction site` },);
        this.set(this.addConstructionsiteAddSiteLanguageItemName, { language: `fi`, value: `Lisää työmaa` }, { language: `sv`, value: `Lägg till byggplats` }, { language: `pl`, value: `PL: Add site` }, { language: `en`, value: `Add site` },);
        this.set(this.addConstructionsiteFlyoutLanguageItemName, { language: `fi`, value: `Työmaa on luotu` }, { language: `en`, value: `Construction site has been created` },);
        this.set(this.addConstructionsiteRedirectLanguageItemName, { language: `fi`, value: `Uudelleenohjaus työmaan sivulle` }, { language: `en`, value: `Redirect to construction site page` },);
        this.set(this.addConstructionsiteToolbarAllManagersLanguageItemName, { language: `fi`, value: `Kaikki managerit` }, { language: `sv`, value: `Alla förmänn` }, { language: `pl`, value: `PL: All managers` }, { language: `en`, value: `All managers` },);
        this.set(this.addConstructionsiteToolbarAllSalesPersonsLanguageItemName, { language: `fi`, value: `Kaikki myyjät` }, { language: `sv`, value: `Alla försäljare` }, { language: `pl`, value: `PL: All sales persons` }, { language: `en`, value: `All sales persons` },);
        this.set(this.constructionSitesToolbarCustomerLanguageItemName, { language: `fi`, value: `Asiakas` }, { language: `sv`, value: `Kund` }, { language: `pl`, value: `PL: Customer` }, { language: `en`, value: `Customer` },);
        this.set(this.addConstructionsiteToolbarSiteLanguageItemName, { language: `fi`, value: `Työmaa` }, { language: `sv`, value: `Byggplats` }, { language: `pl`, value: `PL: Site` }, { language: `en`, value: `Site` },);
        this.set(this.addConstructionsiteToolbarAnyStatusLanguageItemName, { language: `fi`, value: `Mikä tahansa tila` }, { language: `sv`, value: `All status` }, { language: `pl`, value: `PL: Any status` }, { language: `en`, value: `Any status` },);
        this.set(this.addConstructionsiteToolbarAnyTaskStatusLanguageItemName, { language: `fi`, value: `Mikä tahansa tehtävä tila` }, { language: `sv`, value: `Vilken uppgiftstatus som helst` }, { language: `pl`, value: `PL: Any task status` }, { language: `en`, value: `Any task status` },);
        this.set(this.addConstructionsiteToolbarAnySubTaskStatusLanguageItemName, { language: `fi`, value: `Mikä tahansa aliurakoitsijan tila` }, { language: `sv`, value: `All underleverantör uppgift status` }, { language: `pl`, value: `PL: Any subcontractor task status` }, { language: `en`, value: `Any subcontractor task status` },);
        this.set(this.addConstructionsiteToolbarFilterLanguageItemName, { language: `fi`, value: `Suodata` }, { language: `sv`, value: `Filtrera` }, { language: `pl`, value: `PL: Filter` }, { language: `en`, value: `Filter` },);
        this.set(this.addConstructionsiteToolbarClearFilterLanguageItemName, { language: `fi`, value: `Tyhjennä suodatin` }, { language: `sv`, value: `Töm filter` }, { language: `pl`, value: `PL: Clear filter` }, { language: `en`, value: `Clear filter` },);
        this.set(this.constructionSitesToolBarCustomerFilterLanguageItemName, { language: `fi`, value: `Asiakas / nro` }, { language: `en`, value: `Customer / no.` },);
        this.set(this.constructionSitesToolBarSiteFilterLanguageItemName, { language: `fi`, value: `Työmaa / nro` }, { language: `en`, value: `Site / no.` },);
        this.set(this.constructionSitesCustomerNumberLanguageItemName, { language: `fi`, value: `Asiakasnumero` }, { language: `sv`, value: `Kundnummer` }, { language: `pl`, value: `PL: Customer number` }, { language: `en`, value: `Customer number` },);
        this.set(this.constructionSitesStatusLanguageItemName, { language: `fi`, value: `Tila` }, { language: `sv`, value: `Status` }, { language: `pl`, value: `PL: Status` }, { language: `en`, value: `Status` },);
        this.set(this.constructionSitesActivateLanguageItemName, { language: `fi`, value: `Aktivoi` }, { language: `sv`, value: `Aktivera` }, { language: `pl`, value: `PL: Activate` }, { language: `en`, value: `Activate` },);
        this.set(this.constructionSitesNameLanguageItemName, { language: `fi`, value: `Nimi` }, { language: `en`, value: `Name` },);
        this.set(this.constructionSitesCommitChangesLanguageItemName, { language: `fi`, value: `Tallenna` }, { language: `en`, value: `Commit changes` },);
        this.set(this.constructionSitesCancelChangesLanguageItemName, { language: `fi`, value: `Peruuta` }, { language: `en`, value: `Cancel changes` },);
        this.set(this.constructionSitesDeactivateLanguageItemName, { language: `fi`, value: `Deaktivoi` }, { language: `sv`, value: `Avaktivera` }, { language: `pl`, value: `PL: Deactivate` }, { language: `en`, value: `Deactivate` },);
        this.set(this.constructionSitesCloseLanguageItemName, { language: `fi`, value: `Sulje` }, { language: `sv`, value: `Stäng` }, { language: `pl`, value: `PL: Close` }, { language: `en`, value: `Close` },);
        this.set(this.addConstructionsiteManagerLanguageItemName, { language: `fi`, value: `Työnjohtaja` }, { language: `sv`, value: `Förman` }, { language: `pl`, value: `PL: Manager` }, { language: `en`, value: `Manager` },);
        this.set(this.addConstructionsiteWarehouseLanguageItemName, { language: `fi`, value: `Kustannuspaikka` }, { language: `sv`, value: `Lager` }, { language: `pl`, value: `PL: Warehouse` }, { language: `en`, value: `Warehouse` },);
        this.set(this.addConstructionsiteOrganizationLanguageItemName, { language: `fi`, value: `Asiakas` }, { language: `sv`, value: `Organisation` }, { language: `pl`, value: `PL: Organization` }, { language: `en`, value: `Organization` },);
        this.set(this.constructionSitesInvoiceReferenceLanguageItemName, { language: `fi`, value: `Laskuviite` }, { language: `sv`, value: `Fakturerings referens` }, { language: `pl`, value: `PL: Invoice reference` }, { language: `en`, value: `Invoice reference` },);
        this.set(this.constructionSitesReferenceLanguageItemName, { language: `fi`, value: `Viite` }, { language: `sv`, value: `Referens` }, { language: `pl`, value: `PL: Reference` }, { language: `en`, value: `Reference` },);
        this.set(this.addConstructionsiteDuplicateDeviceIdLanguageItemName, { language: `fi`, value: `Työaikaseurantalaitteen id on jo rekisteröity toiseen työmaahan tai varastoon` }, { language: `en`, value: `Time tracking device id is already register for another construction site or warehouse.` },);
        this.set(this.constructionSitesSitesLanguageItemName, { language: `fi`, value: `Työmaat` }, { language: `sv`, value: `Byggplatser` }, { language: `pl`, value: `PL: Sites` }, { language: `en`, value: `Sites` },);
        this.set(this.taskHoursPanelMounterLanguageItemName, { language: `fi`, value: `Asentaja` }, { language: `sv`, value: `Montör` }, { language: `pl`, value: `PL: Mounter` }, { language: `en`, value: `Mounter` },);
        this.set(this.taskHoursPanelCommitChangesLanguageItemName, { language: `fi`, value: `Tallenna` }, { language: `en`, value: `Commit changes` },);
        this.set(this.taskHoursPanelCancelChangesLanguageItemName, { language: `fi`, value: `Peruuta` }, { language: `en`, value: `Cancel changes` },);
        this.set(this.taskHoursPanelApproveHoursLanguageItemName, { language: `fi`, value: `Hyväksy tunnit` }, { language: `en`, value: `Approve hours` },);
        this.set(this.taskHoursPanelDeleteHoursLanguageItemName, { language: `fi`, value: `Poista tunnit` }, { language: `en`, value: `Delete hours` },);
        this.set(this.taskHoursPanelRestoreDeletedHoursLanguageItemName, { language: `fi`, value: `Palauta poistetut tunnit` }, { language: `en`, value: `Restore deleted hours` },);
        this.set(this.taskHoursPanelDateLanguageItemName, { language: `fi`, value: `Päivämäärä` }, { language: `en`, value: `Date` },);
        this.set(this.tasksPanelSentAtLanguageItemName, { language: `fi`, value: `Lähetetty` }, { language: `sv`, value: `Skickat` }, { language: `pl`, value: `PL: Sent at` }, { language: `en`, value: `Sent at` },);
        this.set(this.tasksPanelPreviewWorkReportLanguageItemName, { language: `fi`, value: `Esikatsele työraporttia` }, { language: `sv`, value: `Förhandsgranska arbets raport` }, { language: `pl`, value: `PL: Preview work report` }, { language: `en`, value: `Preview work report` },);
        this.set(this.tasksPanelDownloadWorkReportLanguageItemName, { language: `fi`, value: `Lataa työraportti` }, { language: `sv`, value: `Ladda ner arbets raport` }, { language: `pl`, value: `PL: Download work report` }, { language: `en`, value: `Download work report` },);
        this.set(this.tasksPanelApproveWorkReportInvoiceLanguageItemName, { language: `fi`, value: `Hyväksy työraportti luodaaksesi laskurivin` }, { language: `sv`, value: `Godkänn arbets raport för att skapa faktura rad` }, { language: `pl`, value: `PL: Approve work report to create a invoice row` }, { language: `en`, value: `Approve work report to create a invoice row` },);
        this.set(this.tasksPanelDeleteWorkReportLanguageItemName, { language: `fi`, value: `Poista työraportti` }, { language: `sv`, value: `Radera arbets raport` }, { language: `pl`, value: `PL: Delete work report` }, { language: `en`, value: `Delete work report` },);
        this.set(this.tasksPanelRestoreDeletedWorkReportLanguageItemName, { language: `fi`, value: `Palauta postettu työraportti` }, { language: `sv`, value: `Återställ raderad arbets raport` }, { language: `pl`, value: `PL: Restore deleted work report` }, { language: `en`, value: `Restore deleted work report` },);
        this.set(this.addConstructionsiteProjectNumberLanguageItemName, { language: `fi`, value: `Projekti numero` }, { language: `sv`, value: `Projekt nummer` }, { language: `pl`, value: `PL: Project number` }, { language: `en`, value: `Project number` },);
        this.set(this.tasksPanelSentToLanguageItemName, { language: `fi`, value: `Lähetä käyttäjälle` }, { language: `sv`, value: `Skicka till` }, { language: `pl`, value: `PL: Sent to` }, { language: `en`, value: `Sent to` },);
        this.set(this.tasksPanelComplitionDateLanguageItemName, { language: `fi`, value: `Tehtävän valmistumis päivämäärä` }, { language: `sv`, value: `SV: Date when task was completed` }, { language: `pl`, value: `PL: Date when task was completed` }, { language: `en`, value: `Date when task was completed` },);
        this.set(this.constructionSitesSitesInfoLanguageItemName, { language: `fi`, value: `Työmaat` }, { language: `sv`, value: `Lista på byggplatser` }, { language: `pl`, value: `PL: Construction sites` }, { language: `en`, value: `Construction sites` },);
        this.set(this.tasksPanelSendToCustomerLanguageItemName, { language: `fi`, value: `Lähetä asiakkaalle hyväksyttäväksi` }, { language: `sv`, value: `Skicka till kunden för godkännande` }, { language: `pl`, value: `PL: Send to customer for approving` }, { language: `en`, value: `Send to customer for approving` },);
        this.set(this.addMounterModalAddHoursInfoLanguageItemName, { language: `fi`, value: `Lisää asentajan työtunnit työmaalle tai varastolle` }, { language: `sv`, value: `Lägg till montör arbets timmar för byggplats eller varuhus` }, { language: `pl`, value: `PL: Add mounter working hours for site or warehouse` }, { language: `en`, value: `Add mounter working hours for site or warehouse` },);
        this.set(this.salaryHoursPanelEveningLanguageItemName, { language: `fi`, value: `Ilta` }, { language: `sv`, value: `Kväll` }, { language: `pl`, value: `PL: Evening` }, { language: `en`, value: `Evening` },);
        this.set(this.workDayPanelAutoHoursLanguageItemName, { language: `fi`, value: `Automaattiset tunnit` }, { language: `sv`, value: `Auto timmar` }, { language: `pl`, value: `PL: Auto Hours` }, { language: `en`, value: `Auto Hours` },);
        this.set(this.salaryHoursPanelTotalLanguageItemName, { language: `fi`, value: `Yhteensä` }, { language: `sv`, value: `Totalt` }, { language: `pl`, value: `PL: Total` }, { language: `en`, value: `Total` },);
        this.set(this.salaryHoursPanelNormalHoursLanguageItemName, { language: `fi`, value: `Normaali tunnit` }, { language: `sv`, value: `Normal timmar` }, { language: `pl`, value: `PL: Normal hours` }, { language: `en`, value: `Normal hours` },);
        this.set(this.salaryHoursPanelPriceLanguageItemName, { language: `fi`, value: `Hinta` }, { language: `en`, value: `Price` },);
        this.set(this.salaryHoursPanelWorkingHoursLanguageItemName, { language: `fi`, value: `Työtunnit` }, { language: `sv`, value: `SV: Hours` }, { language: `pl`, value: `PL: Hours` }, { language: `en`, value: `Hours` },);
        this.set(this.salaryHoursPanelHoursLanguageItemName, { language: `fi`, value: `Tunnit` }, { language: `sv`, value: `SV: Hours` }, { language: `pl`, value: `PL: Hours` }, { language: `en`, value: `Hours` },);
        this.set(this.salaryExportModalSendToPayrollLanguageItemName, { language: `fi`, value: `Lähetä palkkalistalle` }, { language: `sv`, value: `Skicka till lönelista` }, { language: `pl`, value: `PL: Send to payroll` }, { language: `en`, value: `Send to payroll` },);
        this.set(this.salaryHoursPanelOvertimeFiftyLanguageItemName, { language: `fi`, value: `Ylityö 50%` }, { language: `sv`, value: `Övertid 50%` }, { language: `pl`, value: `PL: Overtime 50%` }, { language: `en`, value: `Overtime 50%` },);
        this.set(this.addMounterModalNoTasksAvailableLanguageItemName, { language: `fi`, value: `Ei tehtäviä saatavilla` }, { language: `sv`, value: `Inga uppgifter tillgängliga` }, { language: `pl`, value: `PL: No tasks available` }, { language: `en`, value: `No tasks available` },);
        this.set(this.addMounterModalWorkingHoursLanguageItemName, { language: `fi`, value: `Työtunnit` }, { language: `sv`, value: `Arbets timmar` }, { language: `pl`, value: `PL: Working hours` }, { language: `en`, value: `Working hours` },);
        this.set(this.addMounterModalHoursLanguageItemName, { language: `fi`, value: `Laskutunnit` }, { language: `sv`, value: `SV: Hours` }, { language: `pl`, value: `PL: Hours` }, { language: `en`, value: `Hours` },);
        this.set(this.addMounterModalTaskLanguageItemName, { language: `fi`, value: `Tehtävä` }, { language: `sv`, value: `Uppgift` }, { language: `pl`, value: `PL: Task` }, { language: `en`, value: `Task` },);
        this.set(this.checkInsPanelSignLanguageItemName, { language: `fi`, value: `Työmaalle kirjautuminen` }, { language: `en`, value: `Site sign` },);
        this.set(this.checkInsPanelSignInLanguageItemName, { language: `fi`, value: `Kirjautunut` }, { language: `sv`, value: `Loggat in` }, { language: `pl`, value: `PL: Sign in at` }, { language: `en`, value: `Sign in at` },);
        this.set(this.checkInsPanelCheckInLanguageItemName, { language: `fi`, value: `Tehtävälle sisään kirjautuminen` }, { language: `sv`, value: `Loggat in kl` }, { language: `pl`, value: `PL: Check in at` }, { language: `en`, value: `Task check in` },);
        this.set(this.checkInsPanelCheckOutLanguageItemName, { language: `fi`, value: `Tehtävältä ulos kirjautuminen` }, { language: `sv`, value: `Checkat ut kl` }, { language: `pl`, value: `PL: Check out at` }, { language: `en`, value: `Task check out` },);
        this.set(this.checkInsPanelSiteOrWarehouseLanguageItemName, { language: `fi`, value: `Työmaa tai varasto` }, { language: `sv`, value: `Byggplats eller lager` }, { language: `pl`, value: `PL: Site or warehouse` }, { language: `en`, value: `Site or warehouse` },);
        this.set(this.checkInsPanelSignOutLanguageItemName, { language: `fi`, value: `Uloskirjautunut` }, { language: `sv`, value: `Loggat ut kl` }, { language: `pl`, value: `PL: Sign out at` }, { language: `en`, value: `Sign out at` },);
        this.set(this.checkInsPanelCheckInAtLanguageItemName, { language: `fi`, value: `Kirjautunut sisään` }, { language: `en`, value: `Check in at` },);
        this.set(this.workDayPanelFixedContractCostLanguageItemName, { language: `fi`, value: `Kiinteä hinta, €` }, { language: `sv`, value: `Fast kontrakt pris, €` }, { language: `pl`, value: `PL: Fixed price, €` }, { language: `en`, value: `Fixed price, €` },);
        this.set(this.addMounterModalAddHoursLanguageItemName, { language: `fi`, value: `Lisää tunnit` }, { language: `sv`, value: `Lägg till timmar` }, { language: `pl`, value: `PL: Add hours` }, { language: `en`, value: `Add hours` },);
        this.set(this.checkInsPanelCheckInAddressLanguageItemName, { language: `fi`, value: `Kirjautumis osoite` }, { language: `sv`, value: `Utchecknings adress` }, { language: `pl`, value: `PL: Check in address` }, { language: `en`, value: `Check in address` },);
        this.set(this.checkInsPanelCheckOutAtLanguageItemName, { language: `fi`, value: `Kirjautui ulos` }, { language: `en`, value: `Check out at` },);
        this.set(this.checkInsPanelCheckOutAddressLanguageItemName, { language: `fi`, value: `Uloskirjautumis osoite` }, { language: `sv`, value: `Utloggnings adress` }, { language: `pl`, value: `PL: Check out address` }, { language: `en`, value: `Check out address` },);
        this.set(this.checkInsPanelTaskLanguageItemName, { language: `fi`, value: `Tehtävä` }, { language: `sv`, value: `Uppgift` }, { language: `pl`, value: `PL: Task` }, { language: `en`, value: `Task` },);
        this.set(this.salaryHoursPanelOvertimeHundredLanguageItemName, { language: `fi`, value: `Ylityö 100%` }, { language: `sv`, value: `Övertid 100%` }, { language: `pl`, value: `PL: Overtime 100%` }, { language: `en`, value: `Overtime 100%` },);
        this.set(this.salaryHoursPanelContractHoursLanguageItemName, { language: `fi`, value: `Sopimus tunnit` }, { language: `sv`, value: `Kontrakt timmar` }, { language: `pl`, value: `PL: Contract hours` }, { language: `en`, value: `Contract hours` },);
        this.set(this.salaryHoursPanelMarkAsNormalLanguageItemName, { language: `fi`, value: `Merkitse normaaliksi` }, { language: `sv`, value: `Märka som normal` }, { language: `pl`, value: `PL: Mark as normal` }, { language: `en`, value: `Mark as normal` },);
        this.set(this.salaryHoursPanelNightOvertimeLanguageItemName, { language: `fi`, value: `Yö ylityö` }, { language: `sv`, value: `Natt övertid` }, { language: `pl`, value: `PL: Night overtime` }, { language: `en`, value: `Night overtime` },);
        this.set(this.salaryHoursPanelNightLanguageItemName, { language: `fi`, value: `Yö` }, { language: `sv`, value: `Natt` }, { language: `pl`, value: `PL: Night` }, { language: `en`, value: `Night` },);
        this.set(this.workDayPanelPassengersLanguageItemName, { language: `fi`, value: `Matkustajia` }, { language: `sv`, value: `Passagerare` }, { language: `pl`, value: `PL: Passengers` }, { language: `en`, value: `Passengers` },);
        this.set(this.workDayPanelPassengersDescriptionLanguageItemName, { language: `fi`, value: `Määrä matkustajia kyydissä` }, { language: `sv`, value: `SV: Amount of people you traveled with` }, { language: `pl`, value: `PL: Amount of people you traveled with` }, { language: `en`, value: `Amount of people you traveled with` },);
        this.set(this.salaryHoursPanelSundayOvertimeLanguageItemName, { language: `fi`, value: `Sunnuntai ylityö` }, { language: `sv`, value: `Söndag övertid` }, { language: `pl`, value: `PL: Sunday overtime` }, { language: `en`, value: `Sunday overtime` },);
        this.set(this.workDayPanelDetailsLanguageItemName, { language: `fi`, value: `Tiedot` }, { language: `sv`, value: `Detaljer` }, { language: `pl`, value: `PL: Details` }, { language: `en`, value: `Details` },);
        this.set(this.workDayPanelCompensationsLanguageItemName, { language: `fi`, value: `Korvaukset` }, { language: `sv`, value: `SV: Compensations` }, { language: `pl`, value: `PL: Compensations` }, { language: `en`, value: `Compensations` },);
        this.set(this.workDayPanelContractLanguageItemName, { language: `fi`, value: `Urakka` }, { language: `sv`, value: `Kontrakt` }, { language: `pl`, value: `PL: Contract` }, { language: `en`, value: `Contract` },);
        this.set(this.workDayPanelDetailsInfoLanguageItemName, { language: `fi`, value: `Tiedot asentajan kirjautumisesta` }, { language: `sv`, value: `Information om montörens loggning` }, { language: `pl`, value: `PL: Information about mounter's check-ins` }, { language: `en`, value: `Information about mounter's check-ins` },);
        this.set(this.workDayPanelAddNewTaskHoursLanguageItemName, { language: `fi`, value: `Lisää uuden tehtävän tunnit` }, { language: `sv`, value: `Lägg till ny uppgifts timmar` }, { language: `pl`, value: `PL: Add new task hours` }, { language: `en`, value: `Add new task hours` },);
        this.set(this.workDayPanelWorkDayLanguageItemName, { language: `fi`, value: `Työpäivä` }, { language: `sv`, value: `Arbets dag` }, { language: `pl`, value: `PL: Work Day` }, { language: `en`, value: `Work Day` },);
        this.set(this.workDayPanelDailyAllowanceLanguageItemName, { language: `fi`, value: `Korvaukset` }, { language: `sv`, value: `Dagpenning` }, { language: `en`, value: `Daily Allowance` },);
        this.set(this.workDayPanelAggregateDailyAllowanceLanguageItemName, { language: `fi`, value: `Päiväraha` }, { language: `sv`, value: `PL: Daily Allowance` }, { language: `en`, value: `Daily Allowance` },);
        this.set(this.workDayPanelOwnEquipmentLanguageItemName, { language: `fi`, value: `Omat työkalut` }, { language: `sv`, value: `Egen utrustning` }, { language: `pl`, value: `PL: Own equipment` }, { language: `en`, value: `Own equipment` },);
        this.set(this.workDayPanelAllowanceLanguageItemName, { language: `fi`, value: `Päiväraha` }, { language: `sv`, value: `Dagpenning` }, { language: `pl`, value: `PL: Allowance` }, { language: `en`, value: `Allowance` },);
        this.set(this.workDayPanelEquipmentLanguageItemName, { language: `fi`, value: `Työkalut` }, { language: `sv`, value: `Verktyg` }, { language: `pl`, value: `PL: Equipment` }, { language: `en`, value: `Equipment` },);
        this.set(this.workDayPanelDistanceLanguageItemName, { language: `fi`, value: `Etäisyys, km` }, { language: `sv`, value: `Distans, km` }, { language: `pl`, value: `PL: Distance, km` }, { language: `en`, value: `Distance, km` },);
        this.set(this.workDayPanelDistanceInfoLanguageItemName, { language: `fi`, value: `Etäisyys laskettu GPS perusteella` }, { language: `sv`, value: `Distans räknat på basen av GPS` }, { language: `pl`, value: `PL: Distance calculated based on GPS` }, { language: `en`, value: `Distance calculated based on GPS` },);
        this.set(this.salaryHoursPanelEveningOvertimeLanguageItemName, { language: `fi`, value: `Ilta ylityö` }, { language: `sv`, value: `Kvälls övertid` }, { language: `pl`, value: `PL: Evening overtime` }, { language: `en`, value: `Evening overtime` },);
        this.set(this.workDayPanelToolbarDailyHoursLanguageItemName, { language: `fi`, value: `Päivittäiset tunnit` }, { language: `sv`, value: `Dagliga timmar` }, { language: `pl`, value: `PL: Daily hours` }, { language: `en`, value: `Daily hours` },);
        this.set(this.workDayPanelToolbarDailyHoursSubTextLanguageItemName, { language: `fi`, value: `Päiväkohtaiset tiedot tunneista.` }, { language: `sv`, value: `Daglig information gällande arbetstagares timmar.` }, { language: `pl`, value: `PL: Employees hours per day, construction site & task.` }, { language: `en`, value: `Employees hours per day, construction site & task.` },);
        this.set(this.workDayPanelToolbarMonthsLanguageItemName, { language: `fi`, value: `Kuukaudet` }, { language: `sv`, value: `Månader` }, { language: `pl`, value: `PL: Months` }, { language: `en`, value: `Months` },);
        this.set(this.workDayPanelToolbarPeriodsLanguageItemName, { language: `fi`, value: `Palkkakaudet` }, { language: `sv`, value: `Löne perioder` }, { language: `pl`, value: `PL: Periods` }, { language: `en`, value: `Periods` },);
        this.set(this.workDayPanelToolbarInvoicePeriodsLanguageItemName, { language: `fi`, value: `Laskutusjaksot` }, { language: `sv`, value: `SV: Invoice periods` }, { language: `pl`, value: `PL: Invoice periods` }, { language: `en`, value: `Invoice periods` },);
        this.set(this.workDayPanelToolbarSalaryPeriodsLanguageItemName, { language: `fi`, value: `Palkkajaksot` }, { language: `sv`, value: `SV: Salary periods` }, { language: `pl`, value: `PL: Salary periods` }, { language: `en`, value: `Salary periods` },);
        this.set(this.workDayPanelToolbarAnyLanguageItemName, { language: `fi`, value: `Kummatkin` }, { language: `sv`, value: `Alla` }, { language: `pl`, value: `PL: Any` }, { language: `en`, value: `Any` },);
        this.set(this.workDayPanelToolbarAnySubTextLanguageItemName, { language: `fi`, value: `Tunnit varastoista ja työmailta` }, { language: `sv`, value: `Timmar från lager och byggplatser` }, { language: `pl`, value: `PL: Any construction sites or warehouse` }, { language: `en`, value: `Any construction sites or warehouse` },);
        this.set(this.workDayPanelToolbarConstructionSitesInfoSubTextLanguageItemName, { language: `fi`, value: `Tunnit työmailta` }, { language: `sv`, value: `Timmar från Byggplatser` }, { language: `pl`, value: `PL: Active and assigned construction sites` }, { language: `en`, value: `Active and assigned construction sites` },);
        this.set(this.workDayPanelToolbarAssignedWarehousesLanguageItemName, { language: `fi`, value: `Tunnit varastoilta` }, { language: `sv`, value: `Timmar från lagren` }, { language: `pl`, value: `PL: Assigned warehouses` }, { language: `en`, value: `Assigned warehouses` },);
        this.set(this.workDayPanelToolbarAnySalaryHoursLanguageItemName, { language: `fi`, value: `Kaikki` }, { language: `sv`, value: `Alla` }, { language: `pl`, value: `PL: Any salary hours` }, { language: `en`, value: `Any salary hours` },);
        this.set(this.workDayPanelToolbarAnySalaryHoursSubTextLanguageItemName, { language: `fi`, value: `Kaikki tunnit` }, { language: `sv`, value: `Alla arbets timmar` }, { language: `pl`, value: `PL: Any salary hours, not approved, approved, exported` }, { language: `en`, value: `Any salary hours, not approved, approved, exported` },);
        this.set(this.workDayPanelToolbarApprovedByManagerLanguageItemName, { language: `fi`, value: `Esimiehen hyväksymät` }, { language: `sv`, value: `Godkända av förman` }, { language: `pl`, value: `PL: Approved by manager` }, { language: `en`, value: `Approved by manager` },);
        this.set(this.workDayPanelToolbarApprovedByDirectorLanguageItemName, { language: `fi`, value: `Johtajan hyväksymät` }, { language: `sv`, value: `Godkända av direktören` }, { language: `pl`, value: `PL: Approved by director` }, { language: `en`, value: `Approved by director` },);
        this.set(this.workDayPanelToolbarApprovedByDirectorSubTextLanguageItemName, { language: `fi`, value: `Esimiehen ja johtajan hyväksymät` }, { language: `sv`, value: `Godkända av förman och direktör` }, { language: `pl`, value: `PL: Approved by manager and director (exportable)` }, { language: `en`, value: `Approved by manager and director (exportable)` },);
        this.set(this.workDayPanelToolbarNotApprovedByManagerLanguageItemName, { language: `fi`, value: `Työnjohtaja ei ole hyväksynyt` }, { language: `sv`, value: `Inte godkända av förman` }, { language: `pl`, value: `PL: Not approved by manager` }, { language: `en`, value: `Not approved by manager` },);
        this.set(this.workDayPanelToolbarNotApprovedByManagerSubTextLanguageItemName, { language: `fi`, value: `Hyväksyntä puuttuu` }, { language: `sv`, value: `Inte godkända` }, { language: `pl`, value: `PL: Not approved by manager and director (not approved at all)` }, { language: `en`, value: `Not approved by manager and director (not approved at all)` },);
        this.set(this.workDayPanelToolbarNotApprovedByDirectorLanguageItemName, { language: `fi`, value: `Johtaja ei ole hyväksynyt` }, { language: `sv`, value: `Inte godkända av direktör` }, { language: `pl`, value: `PL: Not approved by director` }, { language: `en`, value: `Not approved by director` },);
        this.set(this.workDayPanelToolbarNotApprovedByDirectorSubTextLanguageItemName, { language: `fi`, value: `Hyväksyntä puuttuu` }, { language: `sv`, value: `Godkända endast av förman` }, { language: `pl`, value: `PL: Approved by manager only, not approved by director` }, { language: `en`, value: `Approved by manager only, not approved by director` },);
        this.set(this.workDayPanelToolbarReportTypeLanguageItemName, { language: `fi`, value: `Näytä:` }, { language: `sv`, value: `Raport typ:` }, { language: `pl`, value: `PL: Report type:` }, { language: `en`, value: `Report type:` },);
        this.set(this.workDayPanelToolbarSourceLanguageItemName, { language: `fi`, value: `Työmaa/Varasto` }, { language: `sv`, value: `Byggplats/Lager` }, { language: `pl`, value: `PL: Source:` }, { language: `en`, value: `Source:` },);
        this.set(this.workDayPanelToolbarApproveLanguageItemName, { language: `fi`, value: `Tila:` }, { language: `sv`, value: `Godkänn:` }, { language: `pl`, value: `PL: Approve:` }, { language: `en`, value: `Approve:` },);
        this.set(this.workDayPanelToolbarDateLanguageItemName, { language: `fi`, value: `Päivämäärä:` }, { language: `sv`, value: `Datum:` }, { language: `pl`, value: `PL: Date:` }, { language: `en`, value: `Date:` },);
        this.set(this.workDayPanelToolbarSearchLanguageItemName, { language: `fi`, value: `Etsi` }, { language: `sv`, value: `Sök` }, { language: `pl`, value: `PL: Search` }, { language: `en`, value: `Search` },);
        this.set(this.workDayPanelToolbarAddMounterLanguageItemName, { language: `fi`, value: `Lisää työntekijä` }, { language: `sv`, value: `Lägg till arbetare` }, { language: `pl`, value: `PL: Add mounter` }, { language: `en`, value: `Add mounter` },);
        this.set(this.workDayPanelToolbarExportMepcoLanguageItemName, { language: `fi`, value: `Tallenna Mepco -tiedosto` }, { language: `sv`, value: `Exportera i Mepco format(.csv)` }, { language: `pl`, value: `PL: Export salary file in Mepco format (.csv)` }, { language: `en`, value: `Export salary file in Mepco format (.csv)` },);
        this.set(this.workDayPanelToolbarExportMepcoSubTextLanguageItemName, { language: `fi`, value: `Valittuna johtajan hyväksymät rivit` }, { language: `sv`, value: `Välj rader godkända av chefen` }, { language: `pl`, value: `PL: Choose rows with state 'Approved by director' to export` }, { language: `en`, value: `Choose rows with state 'Approved by director' to export` },);
        this.set(this.workDayPanelToolbarExportRowInfoLanguageItemName, { language: `fi`, value: `Olet lähettämässä {0} riviä {1} työntekijälle` }, { language: `sv`, value: `Du skickar {0} rader till {1} anställda` }, { language: `pl`, value: `PL: You are going to export {0} rows for {1} employees` }, { language: `en`, value: `You are going to export {0} rows for {1} employees` },);
        this.set(this.workDayPanelToolbarExportTikonLanguageItemName, { language: `fi`, value: `Tallenna Mepco -tiedosto` }, { language: `sv`, value: `Exportera löne fil i Mepco format (.csv)` }, { language: `pl`, value: `PL: Export salary file in Mepco format (.csv)` }, { language: `en`, value: `Export salary file in Mepco format (.csv)` },);
        this.set(this.invoiceExportModalDownloadFileLanguageItemName, { language: `fi`, value: `Lataa tiedosto` }, { language: `sv`, value: `Ladda ner fil` }, { language: `pl`, value: `PL: Download file` }, { language: `en`, value: `Download file` },);
        this.set(this.invoiceToolbarAnyStateLanguageItemName, { language: `fi`, value: `Mikä tahansa tila` }, { language: `sv`, value: `Alla tillstånd` }, { language: `pl`, value: `PL: Any state` }, { language: `en`, value: `Any state` },);
        this.set(this.invoiceToolbarInvoiceLanguageItemName, { language: `fi`, value: `Lasku` }, { language: `sv`, value: `Faktura` }, { language: `pl`, value: `PL: Invoice` }, { language: `en`, value: `Invoice` },);
        this.set(this.invoiceToolbarInvoiceTitleLanguageItemName, { language: `fi`, value: `Laskunumero, koodi tai referenssi` }, { language: `sv`, value: `Faktura nummer, kod eller referens` }, { language: `pl`, value: `PL: Invoice number, code or reference` }, { language: `en`, value: `Invoice number, code or reference` },);
        this.set(this.invoiceToolbarCustomerNameOrNumberLanguageItemName, { language: `fi`, value: `Asiakkaan nimi tai numero` }, { language: `sv`, value: `Kund namn eller nummer` }, { language: `pl`, value: `PL: Customer name or number` }, { language: `en`, value: `Customer name or number` },);
        this.set(this.invoiceToolbarConstructionSiteNameOrNumberLanguageItemName, { language: `fi`, value: `Työmaan nimi tai numero` }, { language: `sv`, value: `Byggplats namn eller nummer` }, { language: `pl`, value: `PL: Construction site name or number` }, { language: `en`, value: `Construction site name or number` },);
        this.set(this.invoiceToolbarNavisionLanguageItemName, { language: `fi`, value: `Navision` }, { language: `sv`, value: `Navision` }, { language: `pl`, value: `Navision` }, { language: `en`, value: `Navision` },);
        this.set(this.invoiceToolbarNavisionTitleLanguageItemName, { language: `fi`, value: `Vie Microsoft Dynamics NAV formaattiin` }, { language: `sv`, value: `Exportera till Microsoft Dynamics NAV format` }, { language: `pl`, value: `PL: Export to Microsoft Dynamics NAV format` }, { language: `en`, value: `Export to Microsoft Dynamics NAV format` },);
        this.set(this.invoiceToolbarPageroLanguageItemName, { language: `fi`, value: `Pageroon` }, { language: `sv`, value: `Pagero` }, { language: `pl`, value: `PL: Pagero` }, { language: `en`, value: `Pagero` },);
        this.set(this.invoiceToolbarExportToPageroLanguageItemName, { language: `fi`, value: `Vie Pageroon` }, { language: `sv`, value: `Exportera till Pagero` }, { language: `pl`, value: `PL: Export to Pagero` }, { language: `en`, value: `Export to Pagero` },);
        this.set(this.invoiceToolbarExportNavisionFormatLanguageItemName, { language: `fi`, value: `Lataa laskut Navision formaatissa` }, { language: `sv`, value: `Exportera faktura i Navision format` }, { language: `pl`, value: `PL: Export invoices in Navision format` }, { language: `en`, value: `Export invoices in Navision format` },);
        this.set(this.invoiceToolbarExportNavisionFormatSubTitleLanguageItemName, { language: `fi`, value: `Kaikki 'Lähetetyt, mutta ei viedyt laskut` }, { language: `sv`, value: `Alla 'Sända' men inte exporterade fakturor` }, { language: `pl`, value: `PL: All 'Sent', but not exported invoices` }, { language: `en`, value: `All 'Sent', but not exported invoices` },);
        this.set(this.invoiceToolbarExportPageroFormatLanguageItemName, { language: `fi`, value: `Vie laskut Pageroon` }, { language: `sv`, value: `Exportera fakturor till Pagero` }, { language: `pl`, value: `PL: Export invoices to Pagero (F-Invoice)` }, { language: `en`, value: `Export invoices to Pagero (F-Invoice)` },);
        this.set(this.invoiceToolbarExportPageroFormatSubTitleLanguageItemName, { language: `fi`, value: `Kaikki 'Hyväksytyt', mutta ei laskutettu` }, { language: `sv`, value: `Alla 'Godkända' men inte sända räkningar` }, { language: `pl`, value: `PL: All 'Approved', but not billed invoices` }, { language: `en`, value: `All 'Approved', but not billed invoices` },);
        this.set(this.invoicesDeleteCreditInvoiceConfirmationLanguageItemName, { language: `fi`, value: `Haluatko varmasti\npoistaa hyvityslaskun \n<mark>#{0}</mark> summalle <mark>{1:C}€</mark>\nasiakkaalle\n'<mark>{2}</mark>'?` }, { language: `sv`, value: `SV: Are you sure\nyou want delete credit invoice\n<mark>#{0}</mark> on <mark>{1:C}€</mark>\nfor customer\n'<mark>{2}</mark>'?` }, { language: `pl`, value: `PL: Are you sure\nyou want delete credit invoice\n<mark>#{0}</mark> on <mark>{1:C}€</mark>\nfor customer\n'<mark>{2}</mark>'?` }, { language: `en`, value: `Are you sure\nyou want delete credit invoice\n<mark>#{0}</mark> on <mark>{1:C}€</mark>\nfor customer\n'<mark>{2}</mark>'?` },);
        this.set(this.invoicesCreditInvoiceCreatedLanguageItemName, { language: `fi`, value: `Hyvityslasku {0} luotu.` }, { language: `sv`, value: `SV: Credit invoice {0} created successfully.` }, { language: `pl`, value: `PL: Credit invoice {0} created successfully.` }, { language: `en`, value: `Credit invoice {0} created successfully.` },);
        this.set(this.invoicesInvoiceCustomerConfirmationLanguageItemName, { language: `fi`, value: `Haluatko varmasti\nlaskuttaa laskun\n<mark>#{0}</mark> summalla <mark>{1:C}€</mark>\nasiakkaalta\n'<mark>{2}</mark>'?` }, { language: `sv`, value: `SV: Are you sure\nyou want bill invoice\n<mark>#{0}</mark> on <mark>{1:C}€</mark>\nfor customer\n'<mark>{2}</mark>'?` }, { language: `pl`, value: `PL: Are you sure\nyou want bill invoice\n<mark>#{0}</mark> on <mark>{1:C}€</mark>\nfor customer\n'<mark>{2}</mark>'?` }, { language: `en`, value: `Are you sure\nyou want bill invoice\n<mark>#{0}</mark> on <mark>{1:C}€</mark>\nfor customer\n'<mark>{2}</mark>'?` },);
        this.set(this.invoicesCreditInvoiceCustomerConfirmationLanguageItemName, { language: `fi`, value: `Haluatko varmasti\nhyvityslaskuttaa\n<mark>#{0}</mark> summalla <mark>{1:C}€</mark>\nasiakasta\n'<mark>{2}</mark>'?` }, { language: `sv`, value: `SV: Are you sure\nyou want credit invoice\n<mark>#{0}</mark> on <mark>{1:C}€</mark>\nfor customer\n'<mark>{2}</mark>'?` }, { language: `pl`, value: `PL: Are you sure\nyou want credit invoice\n<mark>#{0}</mark> on <mark>{1:C}€</mark>\nfor customer\n'<mark>{2}</mark>'?` }, { language: `en`, value: `Are you sure\nyou want credit invoice\n<mark>#{0}</mark> on <mark>{1:C}€</mark>\nfor customer\n'<mark>{2}</mark>'?` },);
        this.set(this.invoicesExportInfoLanguageItemName, { language: `fi`, value: `Olet lähettämässä {0} laskua {1}:lle yritykselle.` }, { language: `sv`, value: `SV: You are going to export {0} invoices for {1} company(s).` }, { language: `pl`, value: `PL: You are going to export {0} invoices for {1} company(s).` }, { language: `en`, value: `You are going to export {0} invoices for {1} company(s).` },);
        this.set(this.invoicesNothingSelectedLanguageItemName, { language: `fi`, value: `Ei mitään valittu.` }, { language: `sv`, value: `SV: Nothing selected.` }, { language: `pl`, value: `PL: Nothing selected.` }, { language: `en`, value: `Nothing selected.` },);
        this.set(this.invoicesSentToAccountingLanguageItemName, { language: `fi`, value: `Laskut lähetetty kirjanpitoon.` }, { language: `sv`, value: `SV: Invoice(s) sent to accounting system successfully.` }, { language: `pl`, value: `PL: Invoice(s) sent to accounting system successfully.` }, { language: `en`, value: `Invoice(s) sent to accounting system successfully.` },);
        this.set(this.invoicesMarkedAsExportedLanguageItemName, { language: `fi`, value: `Laskut merkattu viedyiksi. Tallenna ja vie laskut NAViin.` }, { language: `sv`, value: `SV: Invoice(s) marked as exported. Store and transfer the file to NAV system.` }, { language: `pl`, value: `PL: Invoice(s) marked as exported. Store and transfer the file to NAV system.` }, { language: `en`, value: `Invoice(s) marked as exported. Store and transfer the file to NAV system.` },);
        this.set(this.invoicesInformationInvoiceRowsLanguageItemName, { language: `fi`, value: `Informaatio lasku rivistä` }, { language: `sv`, value: `Information gällande faktura raderna` }, { language: `pl`, value: `PL: Information about invoice rows` }, { language: `en`, value: `Information about invoice rows` },);
        this.set(this.invoicesReferenceLanguageItemName, { language: `fi`, value: `Viite` }, { language: `sv`, value: `Referens` }, { language: `pl`, value: `PL: Reference` }, { language: `en`, value: `Reference` },);
        this.set(this.invoicesCostLanguageItemName, { language: `fi`, value: `€` }, { language: `en`, value: `Cost, €` },);
        this.set(this.invoicesInvoiceCommentLanguageItemName, { language: `fi`, value: `Lasku komentti asiakkaalle` }, { language: `sv`, value: `Faktura kommentar för kund` }, { language: `pl`, value: `PL: Invoice comment for customer` }, { language: `en`, value: `Invoice comment for customer` },);
        this.set(this.genericNameAndProjectLanguageItemName, { language: `fi`, value: `Nimi ja projekti numero` }, { language: `sv`, value: `Namn och projekt nummer` }, { language: `pl`, value: `PL: Name and project number` }, { language: `en`, value: `Name and project number` },);
        this.set(this.invoicesCreatedAtLanguageItemName, { language: `fi`, value: `Luotu` }, { language: `sv`, value: `Skapad` }, { language: `pl`, value: `PL: Created at` }, { language: `en`, value: `Created at` },);
        this.set(this.invoicesEntryLanguageItemName, { language: `fi`, value: `Kirjaus` }, { language: `sv`, value: `Anteckning` }, { language: `pl`, value: `PL: Entry` }, { language: `en`, value: `Entry` },);
        this.set(this.invoicesEntryTitleLanguageItemName, { language: `fi`, value: `Päivämäärä, jolloin maksu on siirrettävä asiakkaalle, laskutusjakson viimeinen päivä` }, { language: `sv`, value: `Datumbetalningen ska överföras till en kund, sista faktureringsperiodens dag` }, { language: `pl`, value: `PL: The date payment should be transferred to a customer, last day of invoicing period` }, { language: `en`, value: `The date payment should be transferred to a customer, last day of invoicing period` },);
        this.set(this.invoicesNetLanguageItemName, { language: `fi`, value: `Maksuehto` }, { language: `sv`, value: `SV: Net` }, { language: `pl`, value: `PL: Net` }, { language: `en`, value: `Net` },);
        this.set(this.invoicesDueLanguageItemName, { language: `fi`, value: `Eräpäivä` }, { language: `sv`, value: `förfallodag` }, { language: `pl`, value: `PL: Due` }, { language: `en`, value: `Due` },);
        this.set(this.invoicesDueTitleLanguageItemName, { language: `fi`, value: `Päivä, jonka aikana maksu on suoritettava viimeistään (Maksupäivä 0 Netto)` }, { language: `sv`, value: `Datum då betalningen måste göras senast (betalningsdatum 0 netto)` }, { language: `pl`, value: `PL: The date during which the payment must be made at the latest (Payment Date 0 Net)` }, { language: `en`, value: `The date during which the payment must be made at the latest (Payment Date 0 Net)` },);
        this.set(this.invoicesStateLanguageItemName, { language: `fi`, value: `Tila` }, { language: `sv`, value: `Status` }, { language: `pl`, value: `PL: State` }, { language: `en`, value: `State` },);
        this.set(this.invoicesSentNumberLanguageItemName, { language: `fi`, value: `Laskun numero` }, { language: `sv`, value: `Faktura nummer` }, { language: `pl`, value: `PL: Invoice number` }, { language: `en`, value: `Invoice number` },);
        this.set(this.invoicesNavLanguageItemName, { language: `fi`, value: `NAV` }, { language: `sv`, value: `NAV` }, { language: `pl`, value: `NAV` }, { language: `en`, value: `NAV` },);
        this.set(this.invoicesPreviewInvoiceLanguageItemName, { language: `fi`, value: `Esikatsele laskua` }, { language: `sv`, value: `Förhandsgranska faktura` }, { language: `pl`, value: `PL: Preview Invoice` }, { language: `en`, value: `Preview Invoice` },);
        this.set(this.invoicesDownloadInvoiceLanguageItemName, { language: `fi`, value: `Lataa lasku` }, { language: `sv`, value: `Ladda ner faktura` }, { language: `pl`, value: `PL: Download Invoice` }, { language: `en`, value: `Download Invoice` },);
        this.set(this.invoicesSendToPageroLanguageItemName, { language: `fi`, value: `Lähetä Pagerolle` }, { language: `sv`, value: `Skicka till Pagero` }, { language: `pl`, value: `PL: Send to Pagero` }, { language: `en`, value: `Send to Pagero` },);
        this.set(this.invoicesCancelInvoiceLanguageItemName, { language: `fi`, value: `Peruuta lasku (luo luottolasku)` }, { language: `sv`, value: `Avbryt faktura (skapa kredit faktura)` }, { language: `pl`, value: `PL: Cancel invoice (create credit invoice)` }, { language: `en`, value: `Cancel invoice (create credit invoice)` },);
        this.set(this.invoicesListOfInvoicesLanguageItemName, { language: `fi`, value: `Lista laskuista ja laskujen tiloista` }, { language: `sv`, value: `Lista på fakturor och faktura status` }, { language: `pl`, value: `PL: List of invoices and invoice states` }, { language: `en`, value: `List of invoices and invoice states` },);
        this.set(this.invoicesInvoicesLanguageItemName, { language: `fi`, value: `Laskut` }, { language: `sv`, value: `Fakturor` }, { language: `pl`, value: `PL: Invoices` }, { language: `en`, value: `Invoices` },);
        this.set(this.myInvoicesMyInvoicesLanguageItemName, { language: `fi`, value: `Minun laskuni` }, { language: `sv`, value: `Mina fakturor` }, { language: `pl`, value: `PL: My Invoices` }, { language: `en`, value: `My Invoices` },);
        this.set(this.myWorkReportsConfirmationApproveLanguageItemName, { language: `fi`, value: `Oletko varma, että haluat hyväksyä työraportin {0}?` }, { language: `sv`, value: `SV: Are you sure, you want approve work report {0}?` }, { language: `pl`, value: `PL: Are you sure, you want approve work report {0}?` }, { language: `en`, value: `Are you sure, you want approve work report {0}?` },);
        this.set(this.myWorkReportsConfirmationDeclineLanguageItemName, { language: `fi`, value: `Oletko varma, että haluat hylätä työraportin {0}?` }, { language: `sv`, value: `SV: Are you sure, you want decline work report {0}?` }, { language: `pl`, value: `PL: Are you sure, you want decline work report {0} \n(it will be returned back to site manager)?` }, { language: `en`, value: `Are you sure, you want decline work report {0}?` },);
        this.set(this.myWorkReportApprovedAtLanguageItemName, { language: `fi`, value: `Hyväksytty` }, { language: `sv`, value: `Godkännd` }, { language: `pl`, value: `PL: Approved at` }, { language: `en`, value: `Approved at` },);
        this.set(this.myWorkReportDeclineWorkReportLanguageItemName, { language: `fi`, value: `Hylkää työraportit (palauta takaisin esimiehelle)` }, { language: `sv`, value: `Avvisa arbetsrapporten till (skicka tillbaka till förmannen)` }, { language: `pl`, value: `PL: Decline work report to (return back to manager)` }, { language: `en`, value: `Decline work report to (return back to manager)` },);
        this.set(this.myWorkReportMyReportLanguageItemName, { language: `fi`, value: `Minun Työraporttini` }, { language: `sv`, value: `Mina arbets raporter` }, { language: `pl`, value: `PL: My Work Reports` }, { language: `en`, value: `My Work Reports` },);
        this.set(this.myWorkReportNoDataLanguageItemName, { language: `fi`, value: `Työraporttia ei ole vielä saatu` }, { language: `sv`, value: `Inga arbets raporter mottagna ännu` }, { language: `pl`, value: `PL: No work reports received yet` }, { language: `en`, value: `No work reports received yet` },);
        this.set(this.myAuditsApprovedAtLanguageItemName, { language: `fi`, value: `Hyväksytty` }, { language: `sv`, value: `Godkännd` }, { language: `pl`, value: `PL: Approved at` }, { language: `en`, value: `Approved at` },);
        this.set(this.myAuditsMyAuditLanguageItemName, { language: `fi`, value: `Minun tarkastukseni` }, { language: `sv`, value: `Mina inspektioner` }, { language: `pl`, value: `PL: My audits` }, { language: `en`, value: `My audits` },);
        this.set(this.myAuditsNoDataLanguageItemName, { language: `fi`, value: `Tarkastusraporttia ei ole vielä saatu` }, { language: `sv`, value: `Inga inspektionsrapporter mottagna ännu` }, { language: `pl`, value: `PL: No audit reports received yet` }, { language: `en`, value: `No audit reports received yet` },);
        this.set(this.myAuditsActionsApproveLanguageItemName, { language: `fi`, value: `Hyväksy tarkastus raporttia` }, { language: `sv`, value: `Godkänn inspektionsrapport` }, { language: `pl`, value: `PL: Approve audit report` }, { language: `en`, value: `Approve audit report` },);
        this.set(this.myAuditsActionsPreviewLanguageItemName, { language: `fi`, value: `Esikatsele tarkastus raporttia` }, { language: `sv`, value: `Förhandsgranska inspektionsrapporten` }, { language: `pl`, value: `PL: Preview audit report` }, { language: `en`, value: `Preview audit report` },);
        this.set(this.myAuditsActionsDownloadLanguageItemName, { language: `fi`, value: `Lataa tarkastus raportti` }, { language: `sv`, value: `Ladda ner inspektionsrapport` }, { language: `pl`, value: `PL: Download audit report` }, { language: `en`, value: `Download audit report` },);
        this.set(this.myAuditsConfirmationApproveLanguageItemName, { language: `fi`, value: `Haluatko varmasti hyväksyä tarkastusraportin #{0} "{1}"` }, { language: `sv`, value: `Är du säker, att du vill godkänna raport #{0} \"{1}\"` }, { language: `pl`, value: `PL: Are you sure, you want approve audit report #{0} \"{1}\"` }, { language: `en`, value: `Are you sure, you want approve audit report #{0} \"{1}\"` },);
        this.set(this.myAuditsReportPreviewLanguageItemName, { language: `fi`, value: `Tarkastusraportin esikatselu` }, { language: `sv`, value: `Förhandsgranska inspektionsrapporter` }, { language: `pl`, value: `PL: Audit report preview` }, { language: `en`, value: `Audit report preview` },);
        this.set(this.agreementMinimumRentalDaysLanguageItemName, { language: `fi`, value: `Minimi vuokrapäiviä` }, { language: `sv`, value: `SV: Minimum rental days` }, { language: `pl`, value: `PL: Minimum rental days` }, { language: `en`, value: `Minimum rental days` },);
        this.set(this.agreementModuleNameLanguageItemName, { language: `fi`, value: `Nimi` }, { language: `sv`, value: `Namn` }, { language: `pl`, value: `PL: Name` }, { language: `en`, value: `Name` },);
        this.set(this.addAgreementExtraTaskHourlyCostLanguageItemName, { language: `fi`, value: `Oletus tuntihinta` }, { language: `sv`, value: `Standard timpris` }, { language: `pl`, value: `PL: Default task hourly price` }, { language: `en`, value: `Default task hourly price` },);
        this.set(this.addAgreementTitleLanguageItemName, { language: `fi`, value: `Lisää sopimus` }, { language: `sv`, value: `Lägg till kontrakt` }, { language: `pl`, value: `PL: Add agreement` }, { language: `en`, value: `Add agreement` },);
        this.set(this.addAgreementSubtitleLanguageItemName, { language: `fi`, value: `Luo uusi sopimus` }, { language: `sv`, value: `Skapa nytt kontrakt` }, { language: `pl`, value: `PL: Create new agreement` }, { language: `en`, value: `Create new agreement` },);
        this.set(this.addAgreementDropdownLabelLanguageItemName, { language: `fi`, value: `Yhteyshenkilö` }, { language: `sv`, value: `Kontakt person` }, { language: `pl`, value: `PL: Contact person` }, { language: `en`, value: `Contact person` },);
        this.set(this.addAgreementNewContactPersonLanguageItemName, { language: `fi`, value: `Luo uusi yhteyshenkilö` }, { language: `sv`, value: `Skapa ny kontakt person` }, { language: `pl`, value: `PL: Create new contact person` }, { language: `en`, value: `Create new contact person` },);
        this.set(this.addAgreementDescriptionLanguageItemName, { language: `fi`, value: `Kuvaus` }, { language: `sv`, value: `Beskrivning` }, { language: `pl`, value: `PL: Description` }, { language: `en`, value: `Description` },);
        this.set(this.addAgreementAddAgreementLanguageItemName, { language: `fi`, value: `Lisää sopimus` }, { language: `sv`, value: `Lägg till kontrakt` }, { language: `pl`, value: `PL: Add agreement` }, { language: `en`, value: `Add agreement` },);
        this.set(this.taskWidgetInProcessLanguageItemName, { language: `fi`, value: `` },);
        this.set(this.taskWidgetBlockedSplitTaskLanguageItemName, { language: `fi`, value: `` },);
        this.set(this.taskWidgetNoTaskAssignedLanguageItemName, { language: `fi`, value: `` },);
        this.set(this.auditQuestionInputStepOkLanguageItemName, { language: `fi`, value: `VAIHE OK` }, { language: `sv`, value: `FAS OK` }, { language: `pl`, value: `PL: STEP OK` }, { language: `en`, value: `STEP OK` },);
        this.set(this.auditQuestionInputNeedRepairsLanguageItemName, { language: `fi`, value: `TARVITSEE KORJAUSTA` }, { language: `sv`, value: `BEHÖVER REPARATIONER` }, { language: `pl`, value: `PL: NEED REPAIRS` }, { language: `en`, value: `NEED REPAIRS` },);
        this.set(this.auditQuestionInputCommentLanguageItemName, { language: `fi`, value: `KOMMENTTI` }, { language: `sv`, value: `KOMMENTAR` }, { language: `pl`, value: `PL: COMMENT` }, { language: `en`, value: `COMMENT` },);
        this.set(this.auditQuestionInputInsertCommentLanguageItemName, { language: `fi`, value: `Lisää kommentti tarvittaessa` }, { language: `sv`, value: `Lägg till kommentar vid behov` }, { language: `pl`, value: `PL: Insert comment if needed` }, { language: `en`, value: `Insert comment if needed` },);
        this.set(this.auditQuestionInputCommentRequiredLanguageItemName, { language: `fi`, value: `Kommentti on pakollinen` }, { language: `sv`, value: `Kommentar krävs` }, { language: `pl`, value: `PL: Comment is required` }, { language: `en`, value: `Comment is required` },);
        this.set(this.auditModuleNoAuditLanguageItemName, { language: `fi`, value: `ei tarkastusta` }, { language: `sv`, value: `Ingen granskning` }, { language: `pl`, value: `PL: no audit` }, { language: `en`, value: `no audit` },);
        this.set(this.auditModulePassedLanguageItemName, { language: `fi`, value: `Läpäisty` }, { language: `sv`, value: `Avklarad` }, { language: `pl`, value: `PL: Passed` }, { language: `en`, value: `Passed` },);
        this.set(this.auditModuleNotPassedLanguageItemName, { language: `fi`, value: `Ei läpäisty` }, { language: `sv`, value: `Ej avklarad` }, { language: `pl`, value: `PL: Not passed` }, { language: `en`, value: `Not passed` },);
        this.set(this.auditModuleApprovedLanguageItemName, { language: `fi`, value: `Hyväksytty` }, { language: `sv`, value: `Godkänd` }, { language: `pl`, value: `PL: Approved` }, { language: `en`, value: `Approved` },);
        this.set(this.auditModuleNotApprovedLanguageItemName, { language: `fi`, value: `Ei hyväksytty` }, { language: `sv`, value: `Ej godkänd` }, { language: `pl`, value: `PL: Not approved` }, { language: `en`, value: `Not approved` },);
        this.set(this.auditModuleStartAuditLanguageItemName, { language: `fi`, value: `ALOITA TARKASTUS` }, { language: `sv`, value: `BÖRJA GRANSKNING` }, { language: `pl`, value: `PL: START AUDIT` }, { language: `en`, value: `START AUDIT` },);
        this.set(this.auditModuleGetManualLanguageItemName, { language: `fi`, value: `Luo telinetarkastuspöytäkirja.\nPaina \"Aktivoi\" aloittaaksesi.\nTämä luo ja aktivoi valitun tarkastuspöytäkirjan.\n\nSplitattuja tehtäviä ei voi aktivoida.` }, { language: `sv`, value: `SV: Audit module.\nPress \"Activate\" button for that.\nIt will create and activate task corresponding task.\n\nTask marked as split cannot be activated.` }, { language: `pl`, value: `PL: Audit module.\nPress \"Activate\" button for that.\nIt will create and activate task corresponding task.\n\nTask marked as split cannot be activated.` }, { language: `en`, value: `Audit module.\nPress \"Activate\" button for that.\nIt will create and activate task corresponding task.\n\nTask marked as split cannot be activated.` },);
        this.set(this.auditModulePreviewLanguageItemName, { language: `fi`, value: `Esikatsele ja lähetä` }, { language: `en`, value: `Preview and send` },);
        this.set(this.auditModuleContinueLanguageItemName, { language: `fi`, value: `Jatka tarkastusta` }, { language: `en`, value: `Continue inspection` },);
        this.set(this.auditModuleSentLanguageItemName, { language: `fi`, value: `Lähetetty` }, { language: `en`, value: `Sent` },);
        this.set(this.auditModuleNotSentLanguageItemName, { language: `fi`, value: `Ei lähetetty` }, { language: `en`, value: `Not sent` },);
        this.set(this.auditModuleEmailReceiversContactPersonLanguageItemName, { language: `fi`, value: `Yhteyshenkilö` }, { language: `en`, value: `Contact person` },);
        this.set(this.auditModuleEmailReceiversReceiverLanguageItemName, { language: `fi`, value: `Vastaanottaja` }, { language: `en`, value: `Receiver` },);
        this.set(this.auditModuleEmailReceiversNoContactPersonWarningLanguageItemName, { language: `fi`, value: `Yhteyshenkilö ei ole määritelty sopimuksessa. Tarkastus raportti ei voi lähettää hyväksyttäväksi` }, { language: `en`, value: `Contact person is not specified on agreement level. Audit can not be sent for approval` },);
        this.set(this.constructionSitePanelActivateConfirmationLanguageItemName, { language: `fi`, value: `Oletko varma että haluat ottaa käyttöön työmaata?` }, { language: `sv`, value: `Är du säker du vill aktivera byggplatsen?` }, { language: `pl`, value: `PL: Are you sure that you want to activate this construction site?` }, { language: `en`, value: `Are you sure that you want to activate this construction site?` },);
        this.set(this.constructionSitePanelOrganizationContractLanguageItemName, { language: `fi`, value: `Asiakas sopimus` }, { language: `sv`, value: `SV: Organization Contract` }, { language: `pl`, value: `PL: Organization Contract` }, { language: `en`, value: `Organization Contract` },);
        this.set(this.constructionSitePanelOrganizationContractInvoicesSentLanguageItemName, { language: `fi`, value: `Asiakas sopimus (Huom! laskuja lähetetty)` }, { language: `en`, value: `Organization Contract (Invoices already sent!)` },);
        this.set(this.constructionSitePanelPaymentTermsLanguageItemName, { language: `fi`, value: `Maksuehtojen koodi` }, { language: `sv`, value: `SV: Payment terms code` }, { language: `pl`, value: `PL: Payment terms code` }, { language: `en`, value: `Payment terms code` },);
        this.set(this.constructionSitePanelDeactivateConfirmationLanguageItemName, { language: `fi`, value: `Oletko varma että haluat poistaa työmaa käytöstä?` }, { language: `sv`, value: `Är du säker du vill deaktivera byggplatsen?` }, { language: `pl`, value: `PL: Are you sure that you want to deactivate this construction site?` }, { language: `en`, value: `Are you sure that you want to deactivate this construction site?` },);
        this.set(this.subContractorsTitleLanguageItemName, { language: `fi`, value: `Aliurakoitsijat` }, { language: `sv`, value: `Underleverantörer` }, { language: `pl`, value: `PL: Subcontractors` }, { language: `en`, value: `Subcontractors` },);
        this.set(this.subContractorsAddSubcontractorLanguageItemName, { language: `fi`, value: `Lisää aliurakoitsija` }, { language: `sv`, value: `Lägg till underleverantörer` }, { language: `pl`, value: `PL: Add subcontractor` }, { language: `en`, value: `Add subcontractor` },);
        this.set(this.subContractorsAddNewSubcontractorLanguageItemName, { language: `fi`, value: `Luo uusi aliurakoitsija` }, { language: `sv`, value: `Skapa ny underleverantör` }, { language: `pl`, value: `PL: Create new subcontractor` }, { language: `en`, value: `Create new subcontractor` },);
        this.set(this.subContractorsSubcontractorLanguageItemName, { language: `fi`, value: `Aliurakoitsija` }, { language: `sv`, value: `Underleverantör` }, { language: `pl`, value: `PL: Subcontractor` }, { language: `en`, value: `Subcontractor` },);
        this.set(this.invoiceExportModalSendToPageroLanguageItemName, { language: `fi`, value: `Lähetä Pageroon` }, { language: `sv`, value: `Skicka till Pagero` }, { language: `pl`, value: `PL: Send To Pagero` }, { language: `en`, value: `Send To Pagero` },);
        this.set(this.addContactPersonModalCreateLanguageItemName, { language: `fi`, value: `Luo` }, { language: `sv`, value: `Skapa` }, { language: `pl`, value: `PL: Create` }, { language: `en`, value: `Create` },);
        this.set(this.organizationPanelExternalIdLanguageItemName, { language: `fi`, value: `Ulkoinen id` }, { language: `sv`, value: `SV: External id` }, { language: `pl`, value: `PL: External id` }, { language: `en`, value: `External id` },);
        this.set(this.addTaskModalCreateExtraModuleLanguageItemName, { language: `fi`, value: `Luo Extra Moduuli` }, { language: `sv`, value: `SV: Create Extra Module` }, { language: `pl`, value: `PL: Create Extra Module` }, { language: `en`, value: `Create Extra Module` },);
        this.set(this.addWorkReportModalDescriptionOfTaskLanguageItemName, { language: `fi`, value: `Tehtävän kuvaus` }, { language: `sv`, value: `SV: Description of the task` }, { language: `pl`, value: `PL: Description of the task` }, { language: `en`, value: `Description of the task` },);
        this.set(this.addWorkReportModalRemoveTaskWorkReportLanguageItemName, { language: `fi`, value: `Poista tehtävä työraportista` }, { language: `sv`, value: `SV: Remove task from work report` }, { language: `pl`, value: `PL: Remove task from work report` }, { language: `en`, value: `Remove task from work report` },);
        this.set(this.addWorkReportModalDateTaskCompletedLanguageItemName, { language: `fi`, value: `Päivämäärä, jolloin tehtävä suoritettiin` }, { language: `sv`, value: `SV: Date when task was completed` }, { language: `pl`, value: `PL: Date when task was completed` }, { language: `en`, value: `Date when task was completed` },);
        this.set(this.addWorkReportModalExistingExtraTasksLanguageItemName, { language: `fi`, value: `Olemassa olevat extra tehtävät` }, { language: `sv`, value: `SV: Existing extra tasks` }, { language: `pl`, value: `PL: Existing extra tasks` }, { language: `en`, value: `Existing extra tasks` },);
        this.set(this.addWorkReportModalAddCompletedExtraTaskLanguageItemName, { language: `fi`, value: `Lisää suoritettu extra tehtävä` }, { language: `sv`, value: `SV: Add completed extra task` }, { language: `pl`, value: `PL: Add completed extra task` }, { language: `en`, value: `Add completed extra task` },);
        this.set(this.sendWorkReportModalEmailExistsLanguageItemName, { language: `fi`, value: `Kyseisellä sähköpostilla tai numerolla löytyy jo käyttäjä` }, { language: `sv`, value: `SV: User with provided email or phone number already exists` }, { language: `pl`, value: `PL: User with provided email or phone number already exists` }, { language: `en`, value: `User with provided email or phone number already exists` },);
        this.set(this.taskExtraChangePanelExtraChargeTypeLanguageItemName, { language: `fi`, value: `Lisämaksutyyppi` }, { language: `sv`, value: `SV: Extra charge type` }, { language: `pl`, value: `PL: Extra charge type` }, { language: `en`, value: `Extra charge type` },);
        this.set(this.taskExtraChangeGridNoExtraChargesLanguageItemName, { language: `fi`, value: `Ei lisämaksuja` }, { language: `sv`, value: `SV: No extra charges` }, { language: `pl`, value: `PL: No extra charges` }, { language: `en`, value: `No extra charges` },);
        this.set(this.genericAbbreviationsHoursLanguageItemName, { language: `fi`, value: `t` }, { language: `en`, value: `h` },);
        this.set(this.genericAbbreviationsKilometersLanguageItemName, { language: `fi`, value: `km` }, { language: `en`, value: `km` },);
        this.set(this.genericAbbreviationsVehiclesLanguageItemName, { language: `fi`, value: `lkm` }, { language: `en`, value: `v` },);
        this.set(this.genericApprovalLanguageItemName, { language: `fi`, value: `Hyväksyntä` }, { language: `sv`, value: `SV: Approval` }, { language: `pl`, value: `PL: Approval` }, { language: `en`, value: `Approval` },);
        this.set(this.genericLoadingLanguageItemName, { language: `fi`, value: `Ladataan..` }, { language: `sv`, value: `Laddar..` }, { language: `pl`, value: `PL: Loading..` }, { language: `en`, value: `Loading..` },);
        this.set(this.tasksPanelApproveTaskLanguageItemName, { language: `fi`, value: `Hyväksy tehtävä ja luo laskurivi` }, { language: `sv`, value: `Godkänn uppgift för att lägga till fakturerings rad` }, { language: `pl`, value: `PL: Approve task to create a invoice row` }, { language: `en`, value: `Approve task to create a invoice row` },);
        this.set(this.tasksPanelCreateTaskWorkReportLanguageItemName, { language: `fi`, value: `Luo tehtävä työraporttiin` }, { language: `sv`, value: `SV: Create task to work report` }, { language: `pl`, value: `PL: Create task to work report` }, { language: `en`, value: `Create task to work report` },);
        this.set(this.tasksPanelTaskHoursLanguageItemName, { language: `fi`, value: `Tehtävän tunnit` }, { language: `sv`, value: `SV: Task hours` }, { language: `pl`, value: `PL: Task hours` }, { language: `en`, value: `Task hours` },);
        this.set(this.tasksPanelTaskExtraChargesLanguageItemName, { language: `fi`, value: `Tehtävän lisämaksut` }, { language: `sv`, value: `SV: Task extra charges` }, { language: `pl`, value: `PL: Task extra charges` }, { language: `en`, value: `Task extra charges` },);
        this.set(this.tasksPanelAddExtraChargeFlyoutLanguageItemName, { language: `fi`, value: `Lisämaksu tehtävälle on luotu` }, { language: `sv`, value: `SV: Extra charge for task was created successfully` }, { language: `pl`, value: `PL: Extra charge for task was created successfully` }, { language: `en`, value: `Extra charge for task was created successfully` },);
        this.set(this.tasksPanelAddWorkReportFlyoutLanguageItemName, { language: `fi`, value: `Työraportti on luotu` }, { language: `en`, value: `Work report was created successfully` },);
        this.set(this.tasksPanelAddExtraTaskFlyoutLanguageItemName, { language: `fi`, value: `Tehtävä on luotu` }, { language: `en`, value: `Extra task was created successfully` },);
        this.set(this.tasksPanelAddHoursFlyoutLanguageItemName, { language: `fi`, value: `Asentajan tunnit on lisätty` }, { language: `en`, value: `Mounter hours has been added successfully` },);
        this.set(this.tasksPanelFlyoutChangesSavedLanguageItemName, { language: `fi`, value: `Muutokset ovat onnistuneesti tallennettu` }, { language: `en`, value: `Changes were successfully saved` },);
        this.set(this.tasksPanelAddExtraChargeConfirmationLanguageItemName, { language: `fi`, value: `Oletko varma, että haluat poistaa lisämaksun?` }, { language: `sv`, value: `SV: Are you sure that you want to delete extra charge?` }, { language: `pl`, value: `PL: Are you sure that you want to delete extra charge?` }, { language: `en`, value: `Are you sure that you want to delete extra charge?` },);
        this.set(this.tasksPanelAddExtraChargeModalTitleLanguageItemName, { language: `fi`, value: `Tehtävän lisämaksut` }, { language: `sv`, value: `SV: Task extra charges` }, { language: `pl`, value: `PL: Task extra charges` }, { language: `en`, value: `Task extra charges` },);
        this.set(this.tasksPanelAddExtraChargeModalSubtitleLanguageItemName, { language: `fi`, value: `Lisää tehtävälle lisämaksut` }, { language: `sv`, value: `SV: Add tasks extra charges` }, { language: `pl`, value: `PL: Add tasks extra charges` }, { language: `en`, value: `Add tasks extra charges` },);
        this.set(this.tasksPanelAddExtraChargeModalTypeLanguageItemName, { language: `fi`, value: `Tyyppi` }, { language: `sv`, value: `Typ` }, { language: `pl`, value: `PL: Type` }, { language: `en`, value: `Type` },);
        this.set(this.tasksPanelAddExtraChargeModalUnitLanguageItemName, { language: `fi`, value: `Yksikkö` }, { language: `sv`, value: `SV: Unit` }, { language: `pl`, value: `PL: Unit` }, { language: `en`, value: `Unit` },);
        this.set(this.tasksPanelAddExtraChargeModalPriceLanguageItemName, { language: `fi`, value: `Hinta` }, { language: `sv`, value: `Pris` }, { language: `pl`, value: `PL: Price` }, { language: `en`, value: `Price` },);
        this.set(this.tasksPanelAddExtraChargeModalAmountLanguageItemName, { language: `fi`, value: `Määrä` }, { language: `sv`, value: `Mängd` }, { language: `pl`, value: `PL: Amount` }, { language: `en`, value: `Amount` },);
        this.set(this.tasksPanelAddExtraChargeModalSubmitLanguageItemName, { language: `fi`, value: `Lisää lisämaksu` }, { language: `sv`, value: `SV: Add extra charge` }, { language: `pl`, value: `PL: Add extra charge` }, { language: `en`, value: `Add extra charge` },);
        this.set(this.tasksPanelAddHoursModalAddHoursLanguageItemName, { language: `fi`, value: `Lisää asentajan tunnit` }, { language: `en`, value: `Add mounter hours` },);
        this.set(this.tasksPanelAddHoursModalNoHoursLanguageItemName, { language: `fi`, value: `Ei tunteja` }, { language: `en`, value: `No hours` },);
        this.set(this.tasksPanelAddHoursModalConfirmationLanguageItemName, { language: `fi`, value: `Oletko varma että haluat poista asentajan palkkatunnit?` }, { language: `en`, value: `Are you sure that you want to delete mounter's salary hours?` },);
        this.set(this.constructionSiteManagementAddAgreementLanguageItemName, { language: `fi`, value: `Lisää sopimus` }, { language: `sv`, value: `SV: Add new agreement` }, { language: `pl`, value: `PL: Add new agreement` }, { language: `en`, value: `Add new agreement` },);
        this.set(this.constructionSiteAgreementDeactivatedLanguageItemName, { language: `fi`, value: `Deaktivoitu` }, { language: `sv`, value: `SV: Deactivated` }, { language: `pl`, value: `PL: Deactivated` }, { language: `en`, value: `Deactivated` },);
        this.set(this.constructionSiteAgreementContactUserLanguageItemName, { language: `fi`, value: `Yhteyshenkilö: ` }, { language: `sv`, value: `SV: Contact: ` }, { language: `pl`, value: `PL: Contact: ` }, { language: `en`, value: `Contact: ` },);
        this.set(this.addEquipmentEquipmentListLanguageItemName, { language: `fi`, value: `Välinelista` }, { language: `sv`, value: `SV: Equipment list` }, { language: `pl`, value: `PL: Equipment list` }, { language: `en`, value: `Equipment list` },);
        this.set(this.genericUnlockForEditingLanguageItemName, { language: `fi`, value: `Poista lukitus\n (Hyväksynyt {0}, {1})` }, { language: `sv`, value: `SV: Unlock for editing\n (Approved by {0}, at {1})` }, { language: `pl`, value: `PL: Unlock for editing\n (Approved by {0}, at {1})` }, { language: `en`, value: `Unlock for editing\n (Approved by {0}, at {1})` },);
        this.set(this.addEquipmentProductsLanguageItemName, { language: `fi`, value: `Tuotteet` }, { language: `sv`, value: `SV: Products` }, { language: `pl`, value: `PL: Products` }, { language: `en`, value: `Products` },);
        this.set(this.addEquipmentProductsDescriptionLanguageItemName, { language: `fi`, value: `Valitse tuote, jonka haluat lisätä välinelistaan` }, { language: `sv`, value: `SV: Choose product to add to equipment list` }, { language: `pl`, value: `PL: Choose product to add to equipment list` }, { language: `en`, value: `Choose product to add to equipment list` },);
        this.set(this.addTaskTaskNameLanguageItemName, { language: `fi`, value: `Tehtävän nimi` }, { language: `sv`, value: `SV: Task name` }, { language: `pl`, value: `PL: Task name` }, { language: `en`, value: `Task name` },);
        this.set(this.addTaskTaskNameDescriptionLanguageItemName, { language: `fi`, value: `Määritä tehtävän nimi` }, { language: `sv`, value: `SV: Specify the task name` }, { language: `pl`, value: `PL: Specify the task name` }, { language: `en`, value: `Specify the task name` },);
        this.set(this.addTaskStartDateLanguageItemName, { language: `fi`, value: `Aloitus päivämäärä` }, { language: `sv`, value: `SV: Start date` }, { language: `pl`, value: `PL: Start date` }, { language: `en`, value: `Start date` },);
        this.set(this.addTaskStartDateDescriptionLanguageItemName, { language: `fi`, value: `Määritä päivämäärä milloin tehtävä aloitetaan` }, { language: `sv`, value: `SV: Specify a date when task should be in progress` }, { language: `pl`, value: `PL: Specify a date when task should be in progress` }, { language: `en`, value: `Specify a date when task should be in progress` },);
        this.set(this.addTaskTaskDescriptionLanguageItemName, { language: `fi`, value: `Tehtävän kuvaus` }, { language: `sv`, value: `SV: Task description` }, { language: `pl`, value: `PL: Task description` }, { language: `en`, value: `Task description` },);
        this.set(this.addTaskTaskDescriptionDescriptionLanguageItemName, { language: `fi`, value: `Määritä tehtävän kuvaus` }, { language: `sv`, value: `SV: Specify the description of the task` }, { language: `pl`, value: `PL: Specify the description of the task` }, { language: `en`, value: `Specify the description of the task` },);
        this.set(this.allowanceNoDailyLanguageItemName, { language: `fi`, value: `Ei päivärahaa` }, { language: `sv`, value: `Ingen dagpenning` }, { language: `pl`, value: `PL: No daily allowance` }, { language: `en`, value: `No daily allowance` },);
        this.set(this.allowanceOwnToolsLanguageItemName, { language: `fi`, value: `Omat työkalut tai välineet` }, { language: `sv`, value: `SV: Own tools or equipment` }, { language: `pl`, value: `PL: Own tools or equipment` }, { language: `en`, value: `Own tools or equipment` },);
        this.set(this.allowanceOwnToolsDescriptionLanguageItemName, { language: `fi`, value: `Osoittaa, käytätkö omia työkaluja tai laitteita vai ei` }, { language: `sv`, value: `SV: Indicates, whether or not you use own tools or equipment` }, { language: `pl`, value: `PL: Indicates, whether or not you use own tools or equipment` }, { language: `en`, value: `Indicates, whether or not you use own tools or equipment` },);
        this.set(this.allowanceGetManualLanguageItemName, { language: `fi`, value: `Valitse päivärahakorvauksesi Päiväraha painikkeesta sekä mahdolliset työkalukorvaukset Omat työkalut tai välineet painikkeesta.` }, { language: `sv`, value: `SV: Select Your daily allowance from dropdown menu by pressing on Daily allowance widget.\nIf own equipment was used press on Own tools or equipment widget.` }, { language: `pl`, value: `PL: Select Your daily allowance from dropdown menu by pressing on Daily allowance widget.\nIf own equipment was used press on Own tools or equipment widget.` }, { language: `en`, value: `Select Your daily allowance from dropdown menu by pressing on Daily allowance widget.\nIf own equipment was used press on Own tools or equipment widget.` },);
        this.set(this.approveCombineLanguageItemName, { language: `fi`, value: `Yhdistä` }, { language: `sv`, value: `SV: Combine` }, { language: `pl`, value: `PL: Combine` }, { language: `en`, value: `Combine` },);
        this.set(this.approveCombineDescriptionLanguageItemName, { language: `fi`, value: `Yhdistä nykyinen tehtävä toiseen käsiteltyyn tehtävään hyväksyäksesi` }, { language: `sv`, value: `SV: Combine current task with other processed task to approve` }, { language: `pl`, value: `PL: Combine current task with other processed task to approve` }, { language: `en`, value: `Combine current task with other processed task to approve` },);
        this.set(this.approveWorkReportNameLanguageItemName, { language: `fi`, value: `Työraportin nimi` }, { language: `sv`, value: `SV: Work report name` }, { language: `pl`, value: `PL: Work report name` }, { language: `en`, value: `Work report name` },);
        this.set(this.approveWorkReportNameDescriptionLanguageItemName, { language: `fi`, value: `Määritä työraportin nimi` }, { language: `sv`, value: `SV: specify work report name` }, { language: `pl`, value: `PL: specify work report name` }, { language: `en`, value: `specify work report name` },);
        this.set(this.approveGetManualLanguageItemName, { language: `fi`, value: `Aseta ajokilometrimäärä mikäli olet käyttänyt omaa ajoneuvoa työmatkoihin. Lisää matkustajien määrä Matkustaja painikkeesta.` }, { language: `sv`, value: `SV: Adjust Your travel distance and amount of passengers with Travel distance and Passengers widgets.` }, { language: `pl`, value: `PL: Adjust Your travel distance and amount of passengers with Travel distance and Passengers widgets.` }, { language: `en`, value: `Adjust Your travel distance and amount of passengers with Travel distance and Passengers widgets.` },);
        this.set(this.dashboardSwitchSiteLanguageItemName, { language: `fi`, value: `Vaihda työmaata` }, { language: `sv`, value: `SV: Switch construction site` }, { language: `pl`, value: `PL: Switch construction site` }, { language: `en`, value: `Switch construction site` },);
        this.set(this.dashboardSwitchSiteDescriptionLanguageItemName, { language: `fi`, value: `Kirjaudu seuraavalle työmaalle` }, { language: `sv`, value: `SV: Check-in to next construction site` }, { language: `pl`, value: `PL: Check-in to next construction site` }, { language: `en`, value: `Check-in to next construction site` },);
        this.set(this.dashboardCreateTaskDescriptionLanguageItemName, { language: `fi`, value: `Luo uusi tehtävä` }, { language: `sv`, value: `SV: Create a new task` }, { language: `pl`, value: `PL: Create a new task` }, { language: `en`, value: `Create a new task` },);
        this.set(this.dashboardCreateTaskForCurrentSiteDescriptionLanguageItemName, { language: `fi`, value: `Luo uusi tehtävä tälle työmaalle` }, { language: `sv`, value: `SV: Create a new task for current construction site` }, { language: `pl`, value: `PL: Create a new task for current construction site` }, { language: `en`, value: `Create a new task for current construction site` },);
        this.set(this.dashboardSelectTaskLanguageItemName, { language: `fi`, value: `Valitse tehtävä` }, { language: `sv`, value: `SV: Select a task` }, { language: `pl`, value: `PL: Select a task` }, { language: `en`, value: `Select a task` },);
        this.set(this.dashboardSwitchTaskLanguageItemName, { language: `fi`, value: `Vaihda tehtävä` }, { language: `sv`, value: `SV: Switch task` }, { language: `pl`, value: `PL: Switch task` }, { language: `en`, value: `Switch task` },);
        this.set(this.dashboardSwitchTaskDescriptionLanguageItemName, { language: `fi`, value: `Lopeta nykyinen, ja siirry seuraavaan tehtävään` }, { language: `sv`, value: `SV: Close current and switch to next task` }, { language: `pl`, value: `PL: Close current and switch to next task` }, { language: `en`, value: `Close current and switch to next task` },);
        this.set(this.rentaTasksDashboardGetManualLanguageItemName, { language: `fi`, value: `Tervetuloa Renta Task etusivulle. Aloittaaksesi työpäivän, paina Kirjaudu sisään -painiketta.\n        \nSisäänkirjautumisen jälkeen voit vaihtaa työmaata tai tehtävää työpäivän aikana.\n\nTyöpäiväsi päätyttyä, paina Kirjaudu ulos painiketta.` }, { language: `sv`, value: `SV: Welcome to Renta Tasks dashboard, press Sign-in to start Your workday.\n        \nAfter successful login You can change construction site or pickup a new task from the same page.\n\nWhen your workday is finished press Sign-out to start checkout process.` }, { language: `pl`, value: `PL: Welcome to Renta Tasks dashboard, press Sign-in to start Your workday.\n        \nAfter successful login You can change construction site or pickup a new task from the same page.\n\nWhen your workday is finished press Sign-out to start checkout process.` }, { language: `en`, value: `Welcome to Renta Tasks dashboard, press Sign-in to start Your workday.\n        \nAfter successful login You can change construction site or pickup a new task from the same page.\n\nWhen your workday is finished press Sign-out to start checkout process.` },);
        this.set(this.dashboardFlyoutSiteCreatedLanguageItemName, { language: `fi`, value: `Uusi työmä on luotu` }, { language: `en`, value: `New construction site has been created` },);
        this.set(this.distanceTravelDistanceLanguageItemName, { language: `fi`, value: `Matkan pituus, km` }, { language: `sv`, value: `SV: Travel distance, km` }, { language: `pl`, value: `PL: Travel distance, km` }, { language: `en`, value: `Travel distance, km` },);
        this.set(this.distanceTravelDistanceDescriptionLanguageItemName, { language: `fi`, value: `Varmista matkaetäisyys työmaalle` }, { language: `sv`, value: `SV: Verify travel distance to the working site` }, { language: `pl`, value: `PL: Verify travel distance to the working site` }, { language: `en`, value: `Verify travel distance to the working site` },);
        this.set(this.distanceSignOutLanguageItemName, { language: `fi`, value: `Kirjaudu ulos` }, { language: `sv`, value: `SV: Sign out` }, { language: `pl`, value: `PL: Sign out` }, { language: `en`, value: `Sign out` },);
        this.set(this.distanceGetManualLanguageItemName, { language: `fi`, value: `Aseta ajokilometrimäärä mikäli olet käyttänyt omaa ajoneuvoa työmatkoihin. Lisää matkustajien määrä Matkustaja painikkeesta.` }, { language: `sv`, value: `SV: Adjust Your travel distance and amount of passengers with Travel distance and Passengers widgets.` }, { language: `pl`, value: `PL: Adjust Your travel distance and amount of passengers with Travel distance and Passengers widgets.` }, { language: `en`, value: `Adjust Your travel distance and amount of passengers with Travel distance and Passengers widgets.` },);
        this.set(this.workDayAllowanceDistanceLanguageItemName, { language: `fi`, value: `Etäisyys` }, { language: `sv`, value: `Distans` }, { language: `pl`, value: `PL: Distance` }, { language: `en`, value: `Distance` },);
        this.set(this.enumExtraChargeTypeAssemblyLanguageItemName, { language: `fi`, value: `Asennus` }, { language: `sv`, value: `SV: Assembly` }, { language: `pl`, value: `PL: Assembly` }, { language: `en`, value: `Assembly` },);
        this.set(this.enumExtraChargeTypeCoverSalesLanguageItemName, { language: `fi`, value: `Peitemyynti` }, { language: `sv`, value: `SV: Cover sales` }, { language: `pl`, value: `PL: Cover sales` }, { language: `en`, value: `Cover sales` },);
        this.set(this.enumExtraChargeTypeDeliveryLanguageItemName, { language: `fi`, value: `Toimitus` }, { language: `sv`, value: `Leverans` }, { language: `pl`, value: `PL: Delivery` }, { language: `en`, value: `Delivery` },);
        this.set(this.enumExtraChargeTypeDismantleLanguageItemName, { language: `fi`, value: `Purku` }, { language: `sv`, value: `Demontera` }, { language: `pl`, value: `PL: Dismantle` }, { language: `en`, value: `Dismantle` },);
        this.set(this.enumExtraChargeTypeOtherEquipmentSalesLanguageItemName, { language: `fi`, value: `Muiden varusteiden myynti` }, { language: `sv`, value: `SV: Other equipment sales` }, { language: `pl`, value: `PL: Other equipment sales` }, { language: `en`, value: `Other equipment sales` },);
        this.set(this.enumExtraChargeTypeReturnLanguageItemName, { language: `fi`, value: `Palautus` }, { language: `sv`, value: `Retur` }, { language: `pl`, value: `PL: Return` }, { language: `en`, value: `Return` },);
        this.set(this.enumExtraChargeTypeScaffoldingEquipmentSalesLanguageItemName, { language: `fi`, value: `Telinevarusteiden myynti` }, { language: `sv`, value: `SV: Scaffolding equipment sales` }, { language: `pl`, value: `PL: Scaffolding equipment sales` }, { language: `en`, value: `Scaffolding equipment sales` },);
        this.set(this.enumExtraChargeUnitHourLanguageItemName, { language: `fi`, value: `Tunti` }, { language: `sv`, value: `SV: Hour` }, { language: `pl`, value: `PL: Hour` }, { language: `en`, value: `Hour` },);
        this.set(this.enumExtraChargeUnitM2LanguageItemName, { language: `fi`, value: `Neliömetri` }, { language: `sv`, value: `Kvadratmeter` }, { language: `pl`, value: `PL: Squeare meter` }, { language: `en`, value: `Squeare meter` },);
        this.set(this.enumExtraChargeUnitPcsLanguageItemName, { language: `fi`, value: `Kappale` }, { language: `sv`, value: `SV: Piece` }, { language: `pl`, value: `PL: Piece` }, { language: `en`, value: `Piece` },);
        this.set(this.subcontractorCreatedFlyoutLanguageItemName, { language: `fi`, value: `Aliurakoitsija {0} luotu onnistuneesti.` }, { language: `sv`, value: `SV: Subcontractor {0} successfully created.` }, { language: `pl`, value: `PL: Subcontractor {0} successfully created.` }, { language: `en`, value: `Subcontractor {0} successfully created.` },);
        this.set(this.subcontractorPanelSubcontractorAddedFlyoutLanguageItemName, { language: `fi`, value: `Aliurakoitsija {0} luotu onnistuneesti.` }, { language: `sv`, value: `SV: Subcontractor {0} successfully created (added to a site).` }, { language: `pl`, value: `PL: Subcontractor {0} successfully created (added to a site).` }, { language: `en`, value: `Subcontractor {0} successfully created (added to a site).` },);
        this.set(this.subcontractorPanelSubcontractorRestoredFlyoutLanguageItemName, { language: `fi`, value: `Aliurakoitsija {0} palautettu onnistuneesti.` }, { language: `sv`, value: `SV: Subcontractor {0} restored successfully (subcontractor was marked as deleted).` }, { language: `pl`, value: `PL: Subcontractor {0} restored successfully (subcontractor was marked as deleted).` }, { language: `en`, value: `Subcontractor {0} restored successfully (subcontractor was marked as deleted).` },);
        this.set(this.subcontractorPanelDeleteSubcontractorLanguageItemName, { language: `fi`, value: `Poista aliurakoitsija varastosta` }, { language: `sv`, value: `SV: Delete subcontractor from warehouse` }, { language: `pl`, value: `PL: Delete subcontractor from warehouse` }, { language: `en`, value: `Delete subcontractor from warehouse` },);
        this.set(this.subcontractorPanelRestoreSubcontractorLanguageItemName, { language: `fi`, value: `Palauta poistettu aliurakoitsija` }, { language: `sv`, value: `SV: Restore deleted subcontractor` }, { language: `pl`, value: `PL: Restore deleted subcontractor` }, { language: `en`, value: `Restore deleted subcontractor` },);
        this.set(this.validatorsLengthLanguageItemName, { language: `fi`, value: `Teksti on lian lyhyt` }, { language: `sv`, value: `SV: Text is too short` }, { language: `pl`, value: `PL: Text is too short` }, { language: `en`, value: `Text is too short` },);
        this.set(this.splitModuleTitleLanguageItemName, { language: `fi`, value: `Jakaa` }, { language: `sv`, value: `Dela` }, { language: `pl`, value: `PL: Split` }, { language: `en`, value: `Split` },);
        this.set(this.splitModuleSubTitleLanguageItemName, { language: `fi`, value: `Jaa moduuli osiin` }, { language: `sv`, value: `SV: Split module on parts` }, { language: `pl`, value: `PL: Split module on parts` }, { language: `en`, value: `Split module on parts` },);
        this.set(this.tasksMountersLanguageItemName, { language: `fi`, value: `Asentajat` }, { language: `sv`, value: `Montörer` }, { language: `pl`, value: `PL: Mounters` }, { language: `en`, value: `Mounters` },);
        this.set(this.tasksTypeLanguageItemName, { language: `fi`, value: `Tyyppi` }, { language: `sv`, value: `Typ` }, { language: `pl`, value: `PL: Type` }, { language: `en`, value: `Type` },);
        this.set(this.tasksNameLanguageItemName, { language: `fi`, value: `Nimi` }, { language: `sv`, value: `Namn` }, { language: `pl`, value: `PL: Name` }, { language: `en`, value: `Name` },);
        this.set(this.tasksStartLanguageItemName, { language: `fi`, value: `Alku` }, { language: `sv`, value: `Starta` }, { language: `pl`, value: `PL: Start` }, { language: `en`, value: `Start` },);
        this.set(this.tasksDoneLanguageItemName, { language: `fi`, value: `Valmis` }, { language: `sv`, value: `Färdig` }, { language: `pl`, value: `PL: Done` }, { language: `en`, value: `Done` },);
        this.set(this.tasksHoursLanguageItemName, { language: `fi`, value: `Tunnit` }, { language: `sv`, value: `Timmar` }, { language: `pl`, value: `PL: Hours` }, { language: `en`, value: `Hours` },);
        this.set(this.tasksExtraHoursLanguageItemName, { language: `fi`, value: `Lisätunnit` }, { language: `sv`, value: `Extra \n timmar` }, { language: `pl`, value: `PL: Extra hours` }, { language: `en`, value: `Extra hours` },);
        this.set(this.tasksDateLanguageItemName, { language: `fi`, value: `Päivämäärä` }, { language: `sv`, value: `Datum` }, { language: `pl`, value: `PL: Date` }, { language: `en`, value: `Date` },);
        this.set(this.tasksToolbarSearchLanguageItemName, { language: `fi`, value: `Etsi` }, { language: `sv`, value: `Sök` }, { language: `pl`, value: `PL: Search` }, { language: `en`, value: `Search` },);
        this.set(this.tasksToolbarDateLanguageItemName, { language: `fi`, value: `Päivämäärä:` }, { language: `sv`, value: `Datum:` }, { language: `pl`, value: `PL: Date:` }, { language: `en`, value: `Date:` },);
        this.set(this.tasksToolbarClearFiltersLanguageItemName, { language: `fi`, value: `Tyhjennä suodattimet` }, { language: `sv`, value: `Töm filters` }, { language: `pl`, value: `PL: Clear filters` }, { language: `en`, value: `Clear filters` },);
        this.set(this.componentSignatureWidgetClearLanguageItemName, { language: `fi`, value: `Tyhjennä` }, { language: `sv`, value: `Töm` }, { language: `pl`, value: `PL: Clear` }, { language: `en`, value: `Clear` },);
        this.set(this.componentSignatureWidgetDoneLanguageItemName, { language: `fi`, value: `Valmis` }, { language: `sv`, value: `Färdig` }, { language: `pl`, value: `PL: Done` }, { language: `en`, value: `Done` },);
        this.set(this.componentModalSaveChangesLanguageItemName, { language: `fi`, value: `Tallenna muutokset` }, { language: `sv`, value: `Spara ändringar` }, { language: `pl`, value: `PL: Save changes` }, { language: `en`, value: `Save changes` },);
        this.set(this.componentModalCloseLanguageItemName, { language: `fi`, value: `Sulje` }, { language: `sv`, value: `Stäng` }, { language: `pl`, value: `PL: Close` }, { language: `en`, value: `Close` },);
        this.set(this.componentPageContainerPageHelpLanguageItemName, { language: `fi`, value: `Sivun ohje` }, { language: `sv`, value: `Sidhjälp` }, { language: `pl`, value: `PL: Page help` }, { language: `en`, value: `Page help` },);
        this.set(this.subcontractorWorkDayPanelSubcontractorsLanguageItemName, { language: `fi`, value: `Aliurakoitsijat` }, { language: `sv`, value: `Underleverantörer` }, { language: `pl`, value: `PL: Subcontractors` }, { language: `en`, value: `Subcontractors` },);
        this.set(this.subcontractorWorkDayPanelManagersLanguageItemName, { language: `fi`, value: `Työnjohtajat` }, { language: `sv`, value: `Chefer` }, { language: `pl`, value: `PL: Managers` }, { language: `en`, value: `Managers` },);
        this.set(this.subcontractorWorkDayPanelMountersLanguageItemName, { language: `fi`, value: `Asentajat` }, { language: `sv`, value: `Montörer` }, { language: `pl`, value: `PL: Mounters` }, { language: `en`, value: `Mounters` },);
        this.set(this.imageModalPreviewNotSupportedLanguageItemName, { language: `fi`, value: `Tiedostotyypin esikatselu ei ole tuettu. Vaihtoehtoisesti voit ladata tiedoston` }, { language: `sv`, value: `SV: Preview is not supported for this type of file, but you can download it instead` }, { language: `pl`, value: `PL: Preview is not supported for this type of file, but you can download it instead` }, { language: `en`, value: `Preview is not supported for this type of file, but you can download it instead` },);
        this.set(this.imageModalDownloadLanguageItemName, { language: `fi`, value: `Lataa` }, { language: `en`, value: `Download` },);
        this.set(this.selectTaskDropdownTaskLabelLanguageItemName, { language: `fi`, value: `Tehtävän` }, { language: `sv`, value: `Uppgift` }, { language: `pl`, value: `PL: Task` }, { language: `en`, value: `Task` },);
        this.set(this.selectTaskDropdownTaskDescriptionLanguageItemName, { language: `fi`, value: `Paina valitaksesi tehtävä` }, { language: `sv`, value: `SV: Press to select task` }, { language: `pl`, value: `PL: Press to select task` }, { language: `en`, value: `Press to select task` },);
        this.set(this.selectTaskGetManualLanguageItemName, { language: `fi`, value: `Valitse tehtävä jota käyt suorittamaan painamalla Tehtävä painiketta` }, { language: `sv`, value: `SV: Select a task You are going to work on from dropdown menu by pressing on Task widget` }, { language: `pl`, value: `PL: Select a task You are going to work on from dropdown menu by pressing on Task widget` }, { language: `en`, value: `Select a task You are going to work on from dropdown menu by pressing on Task widget` },);
        this.set(this.selectTaskFetchTasksErrorLanguageItemName, { language: `fi`, value: `Työmaalla ei ole yhtään aktiivista tehtävää, voit kuitenkin kirjautua työmaalle ilman tehtävä valintaa.\nPyyhkäise oikealle kirjautuaksesi työmaalle.` }, { language: `sv`, value: `SV: No tasks available for selected site.\nYou can sign-in without task selection.\nSwipe to right to sign-in.` }, { language: `pl`, value: `PL: No tasks available for selected site.\nYou can sign-in without task selection.\nSwipe to right to sign-in.` }, { language: `en`, value: `No tasks available for selected site.\nYou can sign-in without task selection.\nSwipe to right to sign-in.` },);
        this.set(this.selectOrganizationDropdownOrganizationLabelLanguageItemName, { language: `fi`, value: `Asiakas` }, { language: `sv`, value: `Organisation` }, { language: `pl`, value: `PL: Organization` }, { language: `en`, value: `Organization` },);
        this.set(this.selectOrganizationDropdownOrganizationDescriptionLanguageItemName, { language: `fi`, value: `Paina valitaksesi asiakas` }, { language: `sv`, value: `SV: Press to select organization` }, { language: `pl`, value: `PL: Press to select organization` }, { language: `en`, value: `Press to select organization` },);
        this.set(this.selectOrganizationGetManualLanguageItemName, { language: `fi`, value: `Valitse asiakas, missä aloitat työt painamalla Asiakas painiketta` }, { language: `sv`, value: `SV: Select a organization You are going to work on from dropdown menu by pressing on Organization widget` }, { language: `pl`, value: `PL: Select a organization You are going to work on from dropdown menu by pressing on Organization widget` }, { language: `en`, value: `Select a organization You are going to work on from dropdown menu by pressing on Organization widget` },);
        this.set(this.componentNavigationWidgetPreviousLanguageItemName, { language: `fi`, value: `Edellinen` }, { language: `sv`, value: `Föregående` }, { language: `pl`, value: `PL: Previous` }, { language: `en`, value: `Previous` },);
        this.set(this.componentNavigationWidgetReturnToPreviousLanguageItemName, { language: `fi`, value: `Palaa edelliseen vaiheeseen` }, { language: `sv`, value: `Återgå till föregående steg` }, { language: `pl`, value: `PL: Return to previous step` }, { language: `en`, value: `Return to previous step` },);
        this.set(this.componentNavigationWidgetNextLanguageItemName, { language: `fi`, value: `Seuraava` }, { language: `sv`, value: `Nästa` }, { language: `pl`, value: `PL: Next` }, { language: `en`, value: `Next` },);
        this.set(this.componentNavigationWidgetGoToNextLanguageItemName, { language: `fi`, value: `Siirry seuraavaan vaiheeseen` }, { language: `sv`, value: `Gå till nästa steg` }, { language: `pl`, value: `PL: Go to next step` }, { language: `en`, value: `Go to next step` },);
        this.set(this.taskAdditionalEquipmentsLanguageItemName, { language: `fi`, value: `Lisätarvikkeet` }, { language: `sv`, value: `SV: Additional equipments` }, { language: `pl`, value: `PL: Additional equipments` }, { language: `en`, value: `Additional equipments` },);
        this.set(this.taskAdditionalEquipmentsDescriptionLanguageItemName, { language: `fi`, value: `Lisää tarvikkeita tehtävälle` }, { language: `sv`, value: `SV: Need to add equipments to the task` }, { language: `pl`, value: `PL: Need to add equipments to the task` }, { language: `en`, value: `Need to add equipments to the task` },);
        this.set(this.taskHoursLanguageItemName, { language: `fi`, value: `Tunnit` }, { language: `sv`, value: `Timmar` }, { language: `pl`, value: `PL: Hours` }, { language: `en`, value: `Hours` },);
        this.set(this.taskHoursDescriptionLanguageItemName, { language: `fi`, value: `Tehtävällä käytetty työaika` }, { language: `sv`, value: `SV: Amount of hours spent for the task` }, { language: `pl`, value: `PL: Amount of hours spent for the task` }, { language: `en`, value: `Amount of hours spent for the task` },);
        this.set(this.taskInProgressLanguageItemName, { language: `fi`, value: `Meneillään` }, { language: `sv`, value: `SV: In progress` }, { language: `pl`, value: `PL: In progress` }, { language: `en`, value: `In progress` },);
        this.set(this.taskDoneLanguageItemName, { language: `fi`, value: `Valmis` }, { language: `sv`, value: `Färdig` }, { language: `pl`, value: `PL: Done` }, { language: `en`, value: `Done` },);
        this.set(this.taskTaskStatusLanguageItemName, { language: `fi`, value: `Tehtävän tila` }, { language: `sv`, value: `SV: Task status` }, { language: `pl`, value: `PL: Task status` }, { language: `en`, value: `Task status` },);
        this.set(this.taskTaskStatusDescriptionLanguageItemName, { language: `fi`, value: `Näyttää onko tehtävä valmistunut vai kesken` }, { language: `sv`, value: `SV: Indicates whether task is finished or not` }, { language: `pl`, value: `PL: Indicates whether task is finished or not` }, { language: `en`, value: `Indicates whether task is finished or not` },);
        this.set(this.taskApproveLanguageItemName, { language: `fi`, value: `Hyväksyä` }, { language: `sv`, value: `SV: Approve` }, { language: `pl`, value: `PL: Approve` }, { language: `en`, value: `Approve` },);
        this.set(this.taskApproveDescriptionLanguageItemName, { language: `fi`, value: `Hyväksy tehtävä asiakkaalla` }, { language: `sv`, value: `SV: Approve the task by customer` }, { language: `pl`, value: `PL: Approve the task by customer` }, { language: `en`, value: `Approve the task by customer` },);
        this.set(this.taskConfirmLanguageItemName, { language: `fi`, value: `Vahvista` }, { language: `sv`, value: `Bekräfta` }, { language: `pl`, value: `PL: Confirm` }, { language: `en`, value: `Confirm` },);
        this.set(this.taskGetManualLanguageItemName, { language: `fi`, value: `Kirjaudu jokaiselle tehtävälle työpäivän aikana, mitä olet suorittanut ja aseta tehtävien tilat uloskirjausten yhteydessä näiden mukaisesti. Lisätyötehtävissä määritä suoritettu tuntimäärä.\n\nPaina Kirjaudu ulos painiketta päättääksesi työpäiväsi.` }, { language: `sv`, value: `SV: Checkout each task You have been working on today by selecting amount of hours spent on it (for extra tasks only) \nand adjust current status of the task by using widgets.\n\nPress sign-out button to finish Your workday.` }, { language: `pl`, value: `PL: Checkout each task You have been working on today by selecting amount of hours spent on it (for extra tasks only) \nand adjust current status of the task by using widgets.\n\nPress sign-out button to finish Your workday.` }, { language: `en`, value: `Checkout each task You have been working on today by selecting amount of hours spent on it (for extra tasks only) \nand adjust current status of the task by using widgets.\n\nPress sign-out button to finish Your workday.` },);
        this.set(this.selectConstructionSiteGetManualLanguageItemName, { language: `fi`, value: `Valitse työmaa painamalla Työmaa painiketta, tai skannaa työmaalla oleva QR koodi painamalla QR koodi painiketta. Oletuksena valittuna työmaa, joka on sinua lähimpänä.` }, { language: `sv`, value: `SV: Select a construction site from dropdown menu by clicking on Construction site widget, or use QR code scanner widget. By default the closest construction site is chosen accordion to Your current location.` }, { language: `pl`, value: `PL: Select a construction site from dropdown menu by clicking on Construction site widget, or use QR code scanner widget. By default the closest construction site is chosen accordion to Your current location.` }, { language: `en`, value: `Select construction site from dropdown menu by clicking on Construction site widget, or use QR code scanner widget. By default the closest construction site is chosen accordion to Your current location.` },);
        this.set(this.selectConstructionSiteConstructionSiteLanguageItemName, { language: `fi`, value: `Työmaa` }, { language: `sv`, value: `SV: Construction site` }, { language: `pl`, value: `PL: Construction site` }, { language: `en`, value: `Construction site` },);
        this.set(this.selectConstructionSiteConstructionSiteDescriptionLanguageItemName, { language: `fi`, value: `Paina valitaksesi työmaat` }, { language: `sv`, value: `SV: Press to select construction site` }, { language: `pl`, value: `PL: Press to select construction site` }, { language: `en`, value: `Press to select construction site` },);
        this.set(this.signatureApprovalTypeLanguageItemName, { language: `fi`, value: `Hyväksyntä tyyppi` }, { language: `sv`, value: `SV: Approval type` }, { language: `pl`, value: `PL: Approval type` }, { language: `en`, value: `Approval type` },);
        this.set(this.signatureApprovalTypeDescriptionLanguageItemName, { language: `fi`, value: `Valitse hyväksyntä tyyppi` }, { language: `sv`, value: `SV: Choose approval type` }, { language: `pl`, value: `PL: Choose approval type` }, { language: `en`, value: `Choose approval type` },);
        this.set(this.signatureSignatureLanguageItemName, { language: `fi`, value: `Allekirjoitus` }, { language: `sv`, value: `SV: Signature` }, { language: `pl`, value: `PL: Signature` }, { language: `en`, value: `Signature` },);
        this.set(this.signatureSignatureDescriptionLanguageItemName, { language: `fi`, value: `Pyydä asiakkaalta allekirjoitus saadaksesi hyväksynnän` }, { language: `sv`, value: `SV: Ask customer to draw his signature to approve` }, { language: `pl`, value: `PL: Ask customer to draw his signature to approve` }, { language: `en`, value: `Ask customer to draw his signature to approve` },);
        this.set(this.signatureGetManualLanguageItemName, { language: `fi`, value: `Aseta ajokilometrimäärä mikäli olet käyttänyt omaa ajoneuvoa työmatkoihin. Lisää matkustajien määrä Matkustaja painikkeesta.` }, { language: `sv`, value: `SV: Adjust Your travel distance and amount of passengers with Travel distance and Passengers widgets.` }, { language: `pl`, value: `PL: Adjust Your travel distance and amount of passengers with Travel distance and Passengers widgets.` }, { language: `en`, value: `Adjust Your travel distance and amount of passengers with Travel distance and Passengers widgets.` },);
        this.set(this.qrWidgetScanErrorLanguageItemName, { language: `fi`, value: `QR koodi skanneri ei käytössä. Mahdollisesti kameran käyttöoikeudet puuttuvat laitteeltasi.` }, { language: `sv`, value: `QR-kodskanner inte tillgänglig, förmodligen inga behörigheter för kameran på din mobila enhet.` }, { language: `pl`, value: `PL: QR code scanner not available, probably no permissions to camera on you mobile device.` }, { language: `en`, value: `QR code scanner is not available, probably no permissions to camera on your mobile device.` },);
        this.set(this.adminGridNoInvitationsTextLanguageItemName, { language: `fi`, value: `Yhtään kutsua ei ole lähetetty.` }, { language: `sv`, value: `SV: No invitations has been sent` }, { language: `pl`, value: `PL: No invitations has been sent` }, { language: `en`, value: `No invitations has been sent` },);
        this.set(this.adminButtonResendInvitationLanguageItemName, { language: `fi`, value: `Lähetä kutsu uudelleen` }, { language: `sv`, value: `SV: Resend invitation` }, { language: `pl`, value: `PL: Resend invitation` }, { language: `en`, value: `Resend invitation` },);
        this.set(this.adminButtonResetPasswordLanguageItemName, { language: `fi`, value: `Aseta salasana uudelleen` }, { language: `sv`, value: `SV: Reset password` }, { language: `pl`, value: `PL: Reset password` }, { language: `en`, value: `Reset password` },);
        this.set(this.adminLabelAuthenticationTypeLanguageItemName, { language: `fi`, value: `Autentikointitapa` }, { language: `sv`, value: `SV: Authentication type` }, { language: `pl`, value: `PL: Authentication type` }, { language: `en`, value: `Authentication type` },);
        this.set(this.enumAuthTypeEmailLanguageItemName, { language: `fi`, value: `Sähköposti` }, { language: `sv`, value: `SV: Email` }, { language: `pl`, value: `PL: Email` }, { language: `en`, value: `Email` },);
        this.set(this.enumAuthTypePhoneLanguageItemName, { language: `fi`, value: `SMS` }, { language: `sv`, value: `SV: SMS` }, { language: `pl`, value: `PL: SMS` }, { language: `en`, value: `SMS` },);
        this.set(this.adminTabInvitationsLanguageItemName, { language: `fi`, value: `Kutsut` }, { language: `sv`, value: `SV: Invitations` }, { language: `pl`, value: `PL: Invitations` }, { language: `en`, value: `Invitations` },);
        this.set(this.adminConfirmationButtonResetPasswordLanguageItemName, { language: `fi`, value: `Oletko varma, että haluat uusia salasanan käyttäjätilille "{0}"?` }, { language: `sv`, value: `SV: Are you sure you want to reset password for user "{0}"?` }, { language: `pl`, value: `PL: Are you sure you want to reset password for user "{0}"?` }, { language: `en`, value: `Are you sure you want to reset password for user "{0}"?` },);
        this.set(this.adminConfirmationButtonResendInvitationLanguageItemName, { language: `fi`, value: `Oletko varma, että haluat luoda käyttäjän "{0}"?` }, { language: `sv`, value: `SV: Are you sure you want to invite user "{0}"?` }, { language: `pl`, value: `PL: Are you sure you want to invite user "{0}"?` }, { language: `en`, value: `Are you sure you want to invite user "{0}"?` },);
        this.set(this.adminAlertUserPasswordInfoLanguageItemName, { language: `fi`, value: `Käyttäjätilillä "{0}" ei ole salasanaa.` }, { language: `sv`, value: `SV: User account "{0}" does not have a password.` }, { language: `pl`, value: `PL: User account "{0}" does not have a password.` }, { language: `en`, value: `User account "{0}" does not have a password.` },);
        this.set(this.adminGridCreatedByLanguageItemName, { language: `fi`, value: `Luonut` }, { language: `sv`, value: `SV: Created by` }, { language: `pl`, value: `Created by` }, { language: `en`, value: `Created by` },);
        this.set(this.adminGridTypeLanguageItemName, { language: `fi`, value: `Tyyppi` }, { language: `sv`, value: `SV: Type` }, { language: `pl`, value: `Type` }, { language: `en`, value: `Type` },);
        this.set(this.adminGridCreatedAtLanguageItemName, { language: `fi`, value: `Luotu` }, { language: `sv`, value: `SV: Created at` }, { language: `pl`, value: `Created at` }, { language: `en`, value: `Created at` },);
        this.set(this.adminGridExpiresAtLanguageItemName, { language: `fi`, value: `Umpeutuu` }, { language: `sv`, value: `SV: Expires at` }, { language: `pl`, value: `Expires at` }, { language: `en`, value: `Expires at` },);
        this.set(this.adminGridProcessedAtLanguageItemName, { language: `fi`, value: `Käsitelty` }, { language: `sv`, value: `SV: Processed At` }, { language: `pl`, value: `Processed At` }, { language: `en`, value: `Processed At` },);
        this.set(this.adminGridReusableLanguageItemName, { language: `fi`, value: `Uudelleenkäytettävä` }, { language: `sv`, value: `SV: Reusable` }, { language: `pl`, value: `Reusable` }, { language: `en`, value: `Reusable` },);
        this.set(this.adminGridAuthTypeLanguageItemName, { language: `fi`, value: `Autentikointitapa` }, { language: `sv`, value: `SV: Auth type` }, { language: `pl`, value: `Auth type` }, { language: `en`, value: `Auth type` },);
        this.set(this.organizationPanelExternalAddressLanguageItemName, { language: `fi`, value: `Osoite` }, { language: `sv`, value: `SV: External address` }, { language: `pl`, value: `PL: External address` }, { language: `en`, value: `External address` },);
        this.set(this.organizationPanelNameLanguageItemName, { language: `fi`, value: `Nimi` }, { language: `en`, value: `Name` },);
        this.set(this.organizationPanelTransactionIdentifierLanguageItemName, { language: `fi`, value: `Verkkolaskuosoite` }, { language: `en`, value: `E-invoice address` },);
        this.set(this.organizationPanelIntermediatorLanguageItemName, { language: `fi`, value: `Operaattoritunnus` }, { language: `en`, value: `Intermediator` },);
        this.set(this.organizationPanelVirtualAddressLanguageItemName, { language: `fi`, value: `Virtuaaliosoite (Postilokero)` }, { language: `en`, value: `Virtual address (Postal box)` },);
        this.set(this.adminAlertMessageAccountSavedLanguageItemName, { language: `fi`, value: `Käyttäjätili "{0}" tallennettu.` }, { language: `sv`, value: `SV: User account "{0}" saved successfully.` }, { language: `pl`, value: `PL: User account "{0}" saved successfully.` }, { language: `en`, value: `User account "{0}" saved successfully.` },);
        this.set(this.adminAlertErrorAccountExistLanguageItemName, { language: `fi`, value: `Käyttäjätili "{0}" on jo olemassa.` }, { language: `sv`, value: `SV: User account "{0}" already exist.` }, { language: `pl`, value: `PL: User account "{0}" already exist.` }, { language: `en`, value: `User account "{0}" already exist.` },);
        this.set(this.adminAlertErrorWorkCardIdExistsLanguageItemName, { language: `fi`, value: `Valttikortti-id "{0}" on jo lisätty toiselle käyttäjälle.` }, { language: `en`, value: `Work card id "{0}" is already registered for another user account.` },);
        this.set(this.adminAlertErrorPhoneNumberInvalidLanguageItemName, { language: `fi`, value: `Puhelinnumero on virheellinen.` }, { language: `sv`, value: `SV: Phone number is invalid.` }, { language: `pl`, value: `PL: Phone number is invalid.` }, { language: `en`, value: `Phone number is invalid.` },);
        this.set(this.forgotPasswordUsernameInputLanguageItemName, { language: `fi`, value: `Sähköposti tai puhelinnumero` }, { language: `sv`, value: `SV: Email or phone number` }, { language: `pl`, value: `PL: Email or phone number` }, { language: `en`, value: `Email or phone number` },);
        this.set(this.enumInvitationTypeInvitationLanguageItemName, { language: `fi`, value: `Kutsu` }, { language: `sv`, value: `SV: Invitation` }, { language: `pl`, value: `PL: Invitation` }, { language: `en`, value: `Invitation` },);
        this.set(this.enumInvitationTypeResetPasswordLanguageItemName, { language: `fi`, value: `Aseta uusi salasana` }, { language: `sv`, value: `SV: Reset password` }, { language: `pl`, value: `PL: Reset password` }, { language: `en`, value: `Reset password` },);
        this.set(this.enumInvitationTypeForgotPasswordLanguageItemName, { language: `fi`, value: `Unohditko salasanan` }, { language: `sv`, value: `SV: Forgot password` }, { language: `pl`, value: `PL: Forgot password` }, { language: `en`, value: `Forgot password` },);
        this.set(this.adminConfirmationButtonRollbackLanguageItemName, { language: `fi`, value: `Oletko varma, että haluat tyhjätä tehdyt muutokset?` }, { language: `sv`, value: `SV: Are you sure that you want to rollback unsaved changes?` }, { language: `pl`, value: `PL: Are you sure that you want to rollback unsaved changes?` }, { language: `en`, value: `Are you sure that you want to rollback unsaved changes?` },);
        this.set(this.workDayPanelNoReportedHoursLanguageItemName, { language: `fi`, value: `Ei raportoituja tunteja` }, { language: `en`, value: `No reported hours` },);
        this.set(this.workDayPanelSiteOrWarehouseColumnTitleLanguageItemName, { language: `fi`, value: `"Työnjohtaja: {0}\nOsoite: {1}  "` }, { language: `en`, value: `"Manager: {0}\nAddress: {1}  "` },);
        this.set(this.knownSettingsMileagePriceLanguageItemName, { language: `fi`, value: `Vakio kilometrikorvaus, €/km` }, { language: `en`, value: `Default kilometer allowance, €/m` },);
        this.set(this.knownSettingsHourPriceLanguageItemName, { language: `fi`, value: `Vakio tuntihinta, €/h` }, { language: `en`, value: `Default hourly price, €/h` },);
        this.set(this.locationPickerModalTitleLanguageItemName, { language: `fi`, value: `Sijaintivalitsin` }, { language: `sv`, value: `Platsväljare` }, { language: `pl`, value: `PL: Location picker` }, { language: `en`, value: `Location picker` },);
        this.set(this.locationPickerModalSubtitleLanguageItemName, { language: `fi`, value: `Valitse sijainti kartalla` }, { language: `sv`, value: `Välj plats på kartan` }, { language: `pl`, value: `PL: Choose location on map` }, { language: `en`, value: `Choose location on map` },);
        this.set(this.locationPickerModalSetLocationLanguageItemName, { language: `fi`, value: `Aseta sijainti` }, { language: `sv`, value: `Ställ in plats` }, { language: `pl`, value: `PL: Set location` }, { language: `en`, value: `Set location` },);
        this.set(this.tasksPageTaskStatusAnyLanguageItemName, { language: `fi`, value: `Kaikki` }, { language: `en`, value: `All` },);
        this.set(this.tasksPageTaskStatusAnySubtextLanguageItemName, { language: `fi`, value: `Kaikki tehtävät` }, { language: `en`, value: `All tasks` },);
        this.set(this.tasksPageTaskStatusFurtherLanguageItemName, { language: `fi`, value: `Tulevat` }, { language: `en`, value: `Further` },);
        this.set(this.tasksPageTaskStatusFurtherSubtextLanguageItemName, { language: `fi`, value: `Tulevat tehtävät` }, { language: `en`, value: `Further tasks` },);
        this.set(this.tasksPageTaskStatusOngoingLanguageItemName, { language: `fi`, value: `Meneillä olevat` }, { language: `en`, value: `Ongoing` },);
        this.set(this.tasksPageTaskStatusOngoingSubtextLanguageItemName, { language: `fi`, value: `Meneillä olevat tehtävät` }, { language: `en`, value: `Ongoing tasks` },);
        this.set(this.tasksPageTaskStatusLanguageItemName, { language: `fi`, value: `Tehtävän tila` }, { language: `en`, value: `Task status` },);
        this.set(this.tasksPageNotAssignedLanguageItemName, { language: `fi`, value: `Näytä määrittämättömät` }, { language: `en`, value: `Show unassigned` },);
        this.set(this.confirmationDialogCommentLanguageItemName, { language: `fi`, value: `Ole hyvä ja kommentoi` }, { language: `sv`, value: `Var vänlig och lämna en kommentar` }, { language: `pl`, value: `PL: Please leave a comment` }, { language: `en`, value: `Please leave a comment` },);
        this.set(this.componentConfirmationDialogAreYouSureLanguageItemName, { language: `fi`, value: `Oletko varma?` }, { language: `sv`, value: `Är du säker?` }, { language: `pl`, value: `PL: Are you sure?` }, { language: `en`, value: `Are you sure?` },);
        this.set(this.rentaTasksControllerSignInExpirationAlertLanguageItemName, { language: `fi`, value: `Järjestelmä on kirjannut sinut automaattisesti ulos.\nKirjaudu uudestaan työmaalle jatkaaksesi työskentelyä.` }, { language: `sv`, value: `SV: The working session is expired!\nPlease sign-in to the construction site again to continue work.` }, { language: `pl`, value: `PL: The working session is expired!\nPlease sign-in to the construction site again to continue work.` }, { language: `en`, value: `The working session is expired!\nPlease sign-in to the construction site again to continue work.` },);
        this.set(this.widgetPwaInstallLanguageItemName, { language: `fi`, value: `Asenna` }, { language: `sv`, value: `SV: Install` }, { language: `pl`, value: `PL: Install` }, { language: `en`, value: `Install` },);
        this.set(this.widgetPwaDescriptionLanguageItemName, { language: `fi`, value: `Lisää sovellus aloitusnäytölle` }, { language: `sv`, value: `SV: Add application to the home screen` }, { language: `pl`, value: `PL: Add application to the home screen` }, { language: `en`, value: `Add application to the home screen` },);
        this.set(this.adminOrganizationContractsLabelLanguageItemName, { language: `fi`, value: `Asiakkuudet` }, { language: `en`, value: `Organization Contracts` },);
        this.set(this.tasksPanelAddExtraChargeModalDescriptionLanguageItemName, { language: `fi`, value: `Kommentti` }, { language: `sv`, value: `SV: Comment` }, { language: `pl`, value: `PL: Comment` }, { language: `en`, value: `Comment` },);
        this.set(this.addWorkReportModalDeleteConfirmLanguageItemName, { language: `fi`, value: `Haluatko varmasti poistaa työraportin?` }, { language: `sv`, value: `SV: Do you really want to delete this work report?` }, { language: `pl`, value: `PL: Do you really want to delete this work report?` }, { language: `en`, value: `Do you really want to delete this work report?` },);
        this.set(this.constructionSitesConfirmationActivateSiteLanguageItemName, { language: `fi`, value: `Oletko varma, että haluat avata työmaan \n "{0}"?` }, { language: `sv`, value: `SV: Are you sure, you want to activate construction site \n "{0}"?` }, { language: `pl`, value: `PL: Are you sure, you want to activate construction site \n "{0}"?` }, { language: `en`, value: `Are you sure, you want to activate construction site \n "{0}"?` },);
        this.set(this.constructionSitesConfirmationDeactivateSiteLanguageItemName, { language: `fi`, value: `Oletko varma, että haluat sulkea työmaan? \n "{0}"?` }, { language: `sv`, value: `SV: Are you sure, you want to deactivate construction site \n "{0}"?` }, { language: `pl`, value: `PL: Are you sure, you want to deactivate construction site \n "{0}"?` }, { language: `en`, value: `Are you sure, you want to deactivate construction site \n "{0}"?` },);
        this.set(this.addConstructionSiteInvoiceReferenceLanguageItemName, { language: `fi`, value: `Laskuviite` }, { language: `sv`, value: `SV: Invoice reference` }, { language: `pl`, value: `PL: Invoice reference` }, { language: `en`, value: `Invoice reference` },);
        this.set(this.addConstructionSiteReferenceLanguageItemName, { language: `fi`, value: `TKVuokrat Laskuviite` }, { language: `pl`, value: `PL: ERP Reference` }, { language: `en`, value: `ERP Reference` },);
        this.set(this.addConstructionSiteHourPriceLanguageItemName, { language: `fi`, value: `Oletus tuntihinta` }, { language: `sv`, value: `SV: Default hour price` }, { language: `pl`, value: `PL: Default hour price` }, { language: `en`, value: `Default hour price` },);
        this.set(this.addConstructionSiteMileagePriceLanguageItemName, { language: `fi`, value: `Oletus kilometrikorvaus` }, { language: `sv`, value: `SV: Default mileage price` }, { language: `pl`, value: `PL: Default mileage price` }, { language: `en`, value: `Default mileage price` },);
        this.set(this.workOrdersShowDetailsTitleLanguageItemName, { language: `fi`, value: `Näytä tuotteet` }, { language: `en`, value: `Show equipment` },);
        this.set(this.workOrderEquipmentNameLanguageItemName, { language: `fi`, value: `Tuote` }, { language: `en`, value: `Product` },);
        this.set(this.workOrderEquipmentDescriptionLanguageItemName, { language: `fi`, value: `Kuvaus` }, { language: `en`, value: `Description` },);
        this.set(this.workOrderEquipmentAmountLanguageItemName, { language: `fi`, value: `Määrä` }, { language: `en`, value: `Amount` },);
        this.set(this.workOrderEquipmentAddProductLanguageItemName, { language: `fi`, value: `Lisää tuote` }, { language: `en`, value: `Add product` },);
        this.set(this.workOrdersCustomerGridHeaderLanguageItemName, { language: `fi`, value: `Asiakas` }, { language: `en`, value: `Customer` },);
        this.set(this.workOrdersCustomerApproverLanguageItemName, { language: `fi`, value: `Hyväksyjä` }, { language: `sv`, value: `SV: Customer Approver` }, { language: `pl`, value: `PL: Customer Approver` }, { language: `en`, value: `Customer Approver` },);
        this.set(this.workOrdersCustomerOrdererLanguageItemName, { language: `fi`, value: `Tilaaja` }, { language: `en`, value: `Orderer` },);
        this.set(this.workOrdersManagerLanguageItemName, { language: `fi`, value: `Työnjohtaja` }, { language: `en`, value: `Manager` },);
        this.set(this.workOrdersInvoiceReferenceLanguageItemName, { language: `fi`, value: `Laskuviite` }, { language: `sv`, value: `SV: Invoice reference` }, { language: `en`, value: `Invoice reference` },);
        this.set(this.componentHoursWidgetHoursSpentLanguageItemName, { language: `fi`, value: `Tehtävään käytetyt tunnit` }, { language: `sv`, value: `SV: Hours spent for task` }, { language: `pl`, value: `PL: Hours spent for task` }, { language: `en`, value: `Hours spent for task` },);
        this.set(this.componentHoursWidgetAddOvertimeLanguageItemName, { language: `fi`, value: `Lisää ylityö` }, { language: `sv`, value: `SV: Add overtime` }, { language: `pl`, value: `PL: Add overtime` }, { language: `en`, value: `Add overtime` },);
        this.set(this.componentHoursWidgetNormalHoursLanguageItemName, { language: `fi`, value: `Normaali` }, { language: `sv`, value: `SV: Normal` }, { language: `pl`, value: `PL: Normal` }, { language: `en`, value: `Normal` },);
        this.set(this.workOrdersEquipmentsTabTitleLanguageItemName, { language: `fi`, value: `Tuotteet` }, { language: `en`, value: `Products` },);
        this.set(this.workOrdersHoursTabTitleLanguageItemName, { language: `fi`, value: `Tunnit` }, { language: `en`, value: `Hours` },);
        this.set(this.workOrderDetailsAddHoursLanguageItemName, { language: `fi`, value: `Lisää tunteja` }, { language: `en`, value: `Add hours` },);
        this.set(this.workOrderDetailsHoursGridDayLanguageItemName, { language: `fi`, value: `Päivä` }, { language: `en`, value: `Day` },);
        this.set(this.workOrderDetailsHoursGridUserLanguageItemName, { language: `fi`, value: `Käyttäjä` }, { language: `en`, value: `User` },);
        this.set(this.workOrderDetailsHoursGridHoursHeaderLanguageItemName, { language: `fi`, value: `Tunnit` }, { language: `en`, value: `Hours` },);
        this.set(this.workOrderDetailsHoursGridNormalHoursLanguageItemName, { language: `fi`, value: `Normaalit` }, { language: `en`, value: `Normal` },);
        this.set(this.workOrderDetailsHoursGridOverTime50LanguageItemName, { language: `fi`, value: `Ylityö 50%` }, { language: `en`, value: `Overtime 50%` },);
        this.set(this.workOrderDetailsHoursGridOverTime100LanguageItemName, { language: `fi`, value: `Ylityö 100%` }, { language: `en`, value: `Overtime 100%` },);
        this.set(this.workOrderEquipmentPriceLanguageItemName, { language: `fi`, value: `Hinta` }, { language: `en`, value: `Price` },);
        this.set(this.workOrderDetailsHoursGridPriceLanguageItemName, { language: `fi`, value: `Hinta` }, { language: `en`, value: `Price` },);
        this.set(this.summaryWidgetTitleLanguageItemName, { language: `fi`, value: `Työraportin yhteenveto` }, { language: `sv`, value: `SV: Work report summary` }, { language: `pl`, value: `PL: Work report summary` }, { language: `en`, value: `Work report summary` },);
        this.set(this.summaryWidgetOrdererLanguageItemName, { language: `fi`, value: `Tilaaja:` }, { language: `sv`, value: `SV: Orderer:` }, { language: `pl`, value: `PL: Orderer:` }, { language: `en`, value: `Orderer:` },);
        this.set(this.summaryWidgetApproverLanguageItemName, { language: `fi`, value: `Työtilauksen kuittaaja:` }, { language: `sv`, value: `SV: Approver:` }, { language: `pl`, value: `PL: Approver:` }, { language: `en`, value: `Approver:` },);
        this.set(this.summaryWidgetButtonCreateApproverLanguageItemName, { language: `fi`, value: `Lisää uusi työtilauksen kuittaaja` }, { language: `sv`, value: `SV: Create new approver` }, { language: `pl`, value: `PL: Create new approver` }, { language: `en`, value: `Create new approver` },);
        this.set(this.summaryWidgetWorkOrderNameLanguageItemName, { language: `fi`, value: `Työraportin nimi:` }, { language: `sv`, value: `SV: Work report name:` }, { language: `pl`, value: `PL: Work report name:` }, { language: `en`, value: `Work report name:` },);
        this.set(this.summaryWidgetWorkOrderDescriptionLanguageItemName, { language: `fi`, value: `Kuvaus:` }, { language: `sv`, value: `SV: Description:` }, { language: `pl`, value: `PL: Description:` }, { language: `en`, value: `Description:` },);
        this.set(this.genericNoDataLanguageItemName, { language: `fi`, value: `Ei tietoja` }, { language: `sv`, value: `SV: No data` }, { language: `pl`, value: `PL: No data` }, { language: `en`, value: `No data` },);
        this.set(this.createContractPersonModalSubtitleLanguageItemName, { language: `fi`, value: `Lisää uusi työtilauksen kuittaaja` }, { language: `sv`, value: `SV: Create new approver` }, { language: `pl`, value: `PL: Create new approver` }, { language: `en`, value: `Create new approver` },);
        this.set(this.workOrdersApprovalTypeLanguageItemName, { language: `fi`, value: `Hyväksyntä` }, { language: `en`, value: `Approval` },);
        this.set(this.workOrdersSentAtLanguageItemName, { language: `fi`, value: `Aika jolloin työraportti on lähetetty hyväksyttäväksi tai hyväksytty asiakkaan toimesta.` }, { language: `en`, value: `The time when the work order has been approved by the customer or sent to the customer for approval` },);
        this.set(this.workOrdersApproveActionLanguageItemName, { language: `fi`, value: `Hyväksy työtehtävä` }, { language: `en`, value: `Approve` },);
        this.set(this.workOrdersDeclineActionLanguageItemName, { language: `fi`, value: `Hylkää työtehtävä` }, { language: `en`, value: `Decline` },);
        this.set(this.workOrdersPageTitleLanguageItemName, { language: `fi`, value: `Työtilaukset` }, { language: `sv`, value: `SV: Work orders` }, { language: `pl`, value: `PL: Work orders` }, { language: `en`, value: `Work orders` },);
        this.set(this.workOrdersActiveListTitleLanguageItemName, { language: `fi`, value: `Aktiivisia työtilauksia: {0}.` }, { language: `sv`, value: `SV: Active work orders: {0}.` }, { language: `pl`, value: `PL: Active work orders: {0}.` }, { language: `en`, value: `Active work orders: {0}.` },);
        this.set(this.workOrdersActiveListNoOrdersLanguageItemName, { language: `fi`, value: `Ei aktiivisia työtilauksia` }, { language: `sv`, value: `SV: No active work orders.` }, { language: `pl`, value: `PL: No active work orders.` }, { language: `en`, value: `No active work orders.` },);
        this.set(this.workOrdersCompletedListTitleLanguageItemName, { language: `fi`, value: `Valmistuneet työtilaukset: {0}.` }, { language: `sv`, value: `SV Completed work orders: {0}.` }, { language: `pl`, value: `PL: Completed work orders: {0}.` }, { language: `en`, value: `Completed work orders: {0}.` },);
        this.set(this.workOrdersCompletedListNoOrdersLanguageItemName, { language: `fi`, value: `Ei valmistuneita työtilauksia.` }, { language: `sv`, value: `SV: No completed work orders.` }, { language: `pl`, value: `PL: No completed work orders.` }, { language: `en`, value: `No completed work orders.` },);
        this.set(this.workOrdersFiltersNameLanguageItemName, { language: `fi`, value: `Työtilauksen nimi` }, { language: `sv`, value: `SV: Work order name` }, { language: `pl`, value: `PL: Work order name` }, { language: `en`, value: `Work order name` },);
        this.set(this.workOrdersFiltersStatusesLanguageItemName, { language: `fi`, value: `Työtilauksen tilat` }, { language: `sv`, value: `SV: Work order statuses` }, { language: `pl`, value: `PL: Work order statuses` }, { language: `en`, value: `Work order statuses` },);
        this.set(this.workOrdersFiltersCustomerLanguageItemName, { language: `fi`, value: `Asiakas` }, { language: `sv`, value: `SV: Customer` }, { language: `pl`, value: `PL: Customer` }, { language: `en`, value: `Customer` },);
        this.set(this.workOrdersFiltersConstructionSiteLanguageItemName, { language: `fi`, value: `Työmaa` }, { language: `sv`, value: `SV: Construction site` }, { language: `pl`, value: `PL: Construction site` }, { language: `en`, value: `Construction site` },);
        this.set(this.workOrdersFiltersFromLanguageItemName, { language: `fi`, value: `Alkaen` }, { language: `sv`, value: `SV: From` }, { language: `pl`, value: `PL: From` }, { language: `en`, value: `From` },);
        this.set(this.workOrdersFiltersToLanguageItemName, { language: `fi`, value: `Päättyen` }, { language: `sv`, value: `SV: To` }, { language: `pl`, value: `PL: To` }, { language: `en`, value: `To` },);
        this.set(this.workOrdersFiltersDateLanguageItemName, { language: `fi`, value: `Päivämäärä` }, { language: `sv`, value: `SV: Date` }, { language: `pl`, value: `PL: Date` }, { language: `en`, value: `Date` },);
        this.set(this.workOrdersFiltersButtonApplyLanguageItemName, { language: `fi`, value: `Käytä` }, { language: `sv`, value: `SV: Apply` }, { language: `pl`, value: `PL: Apply` }, { language: `en`, value: `Apply` },);
        this.set(this.workOrdersFiltersButtonClearLanguageItemName, { language: `fi`, value: `Tyhjennä` }, { language: `sv`, value: `SV: Clear` }, { language: `pl`, value: `PL: Clear` }, { language: `en`, value: `Clear` },);
        this.set(this.enumWorkOrderStatusCreatedLanguageItemName, { language: `fi`, value: `Luotu` }, { language: `sv`, value: `SV: Created` }, { language: `pl`, value: `PL: Created` }, { language: `en`, value: `Created` },);
        this.set(this.enumWorkOrderStatusInProgressLanguageItemName, { language: `fi`, value: `Käynnissä` }, { language: `sv`, value: `SV: In progress` }, { language: `pl`, value: `PL: In progress` }, { language: `en`, value: `In progress` },);
        this.set(this.enumWorkOrderStatusCompletedLanguageItemName, { language: `fi`, value: `Valmistunut` }, { language: `sv`, value: `SV: Completed` }, { language: `pl`, value: `PL: Completed` }, { language: `en`, value: `Completed` },);
        this.set(this.enumWorkOrderStatusApprovedByManagerLanguageItemName, { language: `fi`, value: `Työnjohtajan hyväksymä` }, { language: `sv`, value: `SV: Approved by manager` }, { language: `pl`, value: `PL: Approved by manager` }, { language: `en`, value: `Approved by manager` },);
        this.set(this.enumWorkOrderStatusDeclinedByManagerLanguageItemName, { language: `fi`, value: `Työnjohtajan hylkäämä` }, { language: `sv`, value: `SV: Declined by manager` }, { language: `pl`, value: `PL: Declined by manager` }, { language: `en`, value: `Declined by manager` },);
        this.set(this.enumWorkOrderStatusSentToCustomerLanguageItemName, { language: `fi`, value: `Lähetetty asiakkaalle` }, { language: `sv`, value: `SV: Sent to customer` }, { language: `pl`, value: `PL: Sent to customer` }, { language: `en`, value: `Sent to customer` },);
        this.set(this.enumWorkOrderStatusApprovedByCustomerLanguageItemName, { language: `fi`, value: `Asiakkaan hyväksymä` }, { language: `sv`, value: `SV: Approved by customer` }, { language: `pl`, value: `PL: Approved by customer` }, { language: `en`, value: `Approved by customer` },);
        this.set(this.enumWorkOrderStatusDeclinedByCustomerLanguageItemName, { language: `fi`, value: `Asiakkaan hylkäämä` }, { language: `sv`, value: `SV: Declined by customer` }, { language: `pl`, value: `PL: Declined by customer` }, { language: `en`, value: `Declined by customer` },);
        this.set(this.enumWorkOrderStatusInvoicedLanguageItemName, { language: `fi`, value: `Laskutettu` }, { language: `sv`, value: `SV: Invoiced` }, { language: `pl`, value: `PL: Invoiced` }, { language: `en`, value: `Invoiced` },);
        this.set(this.enumWorkOrderStatusDeletedLanguageItemName, { language: `fi`, value: `Poistettu` }, { language: `sv`, value: `SV: Deleted` }, { language: `pl`, value: `PL: Deleted` }, { language: `en`, value: `Deleted` },);
        this.set(this.enumWorkOrderStatusUnknownLanguageItemName, { language: `fi`, value: `Tuntematon` }, { language: `sv`, value: `SV: Unknown` }, { language: `pl`, value: `PL: Unknown` }, { language: `en`, value: `Unknown` },);
        this.set(this.enumTaskStatusFilterUnscheduledLanguageItemName, { language: `fi`, value: `Ei määritetty` }, { language: `en`, value: `Unscheduled` },);
        this.set(this.enumTaskStatusFilterInProgressLanguageItemName, { language: `fi`, value: `Käynnissä` }, { language: `en`, value: `In process` },);
        this.set(this.enumTaskStatusFilterUpcomingLanguageItemName, { language: `fi`, value: `Tulossa` }, { language: `en`, value: `Upcoming` },);
        this.set(this.enumTaskStatusFilterCompletedLanguageItemName, { language: `fi`, value: `Valmis` }, { language: `en`, value: `Completed` },);
        this.set(this.enumTaskStatusFilterSentToCustomerLanguageItemName, { language: `fi`, value: `Lähetetty asiakkaalle` }, { language: `en`, value: `Sent to customer` },);
        this.set(this.enumTaskStatusFilterApprovedByCustomerLanguageItemName, { language: `fi`, value: `Asiakas hyväksynyt` }, { language: `en`, value: `Approver by customer` },);
        this.set(this.enumTaskStatusFilterDeclinedByCustomerLanguageItemName, { language: `fi`, value: `Asiakas hylännyt` }, { language: `en`, value: `Declined by customer` },);
        this.set(this.enumTaskStatusFilterReadyForInvoicingLanguageItemName, { language: `fi`, value: `Valmis laskutettavaksi` }, { language: `en`, value: `Ready for invocing` },);
        this.set(this.workOrdersFiltersModalTitleActiveLanguageItemName, { language: `fi`, value: `Aktiivisten tyätilausten filtterit` }, { language: `sv`, value: `SV: Active work orders filters` }, { language: `pl`, value: `PL: Active work orders filters` }, { language: `en`, value: `Active work orders filters` },);
        this.set(this.workOrdersFiltersModalTitleCompletedLanguageItemName, { language: `fi`, value: `Valmistuneiden työtilausten filtterit` }, { language: `sv`, value: `SV: Completed work orders filters` }, { language: `pl`, value: `PL: Completed work orders filters` }, { language: `en`, value: `Completed work orders filters` },);
        this.set(this.workOrdersModalActionsActivateLanguageItemName, { language: `fi`, value: `Aktivoi` }, { language: `sv`, value: `SV: Activate` }, { language: `pl`, value: `PL: Activate` }, { language: `en`, value: `Activate` },);
        this.set(this.workOrdersModalActionsCompleteLanguageItemName, { language: `fi`, value: `Valmista` }, { language: `sv`, value: `SV: Complete` }, { language: `pl`, value: `PL: Complete` }, { language: `en`, value: `Complete` },);
        this.set(this.workOrdersModalActionsEditLanguageItemName, { language: `fi`, value: `Muokkaa` }, { language: `sv`, value: `SV: Edit` }, { language: `pl`, value: `PL: Edit` }, { language: `en`, value: `Edit` },);
        this.set(this.workOrdersModalActionsApproveLanguageItemName, { language: `fi`, value: `Hyväksy` }, { language: `sv`, value: `SV: Approve` }, { language: `pl`, value: `PL: Approve` }, { language: `en`, value: `Approve` },);
        this.set(this.workOrdersActionsModalTitleLanguageItemName, { language: `fi`, value: `Työtilauksen toiminnot` }, { language: `sv`, value: `SV: Work order actions` }, { language: `pl`, value: `PL: Work order actions` }, { language: `en`, value: `Work order actions` },);
        this.set(this.workOrdersAlertMessageWorkOrderActivatedLanguageItemName, { language: `fi`, value: `Työtilaus "{0}" on aktivoitu` }, { language: `sv`, value: `SV: Work order "{0}" has been activated` }, { language: `pl`, value: `PL: Work order "{0}" has been activated` }, { language: `en`, value: `Work order "{0}" has been activated` },);
        this.set(this.workOrdersAlertMessageWorkOrderCompletedLanguageItemName, { language: `fi`, value: `Työtilaus "{0}" on valmistunut` }, { language: `sv`, value: `SV: Work order "{0}" has been completed` }, { language: `pl`, value: `PL: Work order "{0}" has been completed` }, { language: `en`, value: `Work order "{0}" has been completed` },);
        this.set(this.workOrdersDefaultPricesGroupLanguageItemName, { language: `fi`, value: `Oletushinnat` }, { language: `sv`, value: `SV: Default prices` }, { language: `pl`, value: `PL: Default prices` }, { language: `en`, value: `Default prices` },);
        this.set(this.workOrdersHourPriceLanguageItemName, { language: `fi`, value: `€/h` }, { language: `sv`, value: `SV: €/h` }, { language: `pl`, value: `PL: €/h` }, { language: `en`, value: `€/h` },);
        this.set(this.workOrdersMileagePriceLanguageItemName, { language: `fi`, value: `€/km` }, { language: `sv`, value: `SV: €/km` }, { language: `pl`, value: `PL: €/km` }, { language: `en`, value: `€/km` },);
        this.set(this.rentaTasksControllerNewWorkOrderNameLanguageItemName, { language: `fi`, value: `Uusi työtilaus` }, { language: `en`, value: `New work order` },);
        this.set(this.rentaTasksControllerAlertsCreatedLanguageItemName, { language: `fi`, value: `Työtilaus "{0}" luotu.` }, { language: `en`, value: `Work order "{0}" created successfully.` },);
        this.set(this.rentaTasksControllerAlertsSignOutFromSiteLanguageItemName, { language: `fi`, value: `Olet kirjautunut ulos työmaalta.` }, { language: `en`, value: `You have been sign-out from the construction site.` },);
        this.set(this.rentaTasksControllerAlertsApprovedLanguageItemName, { language: `fi`, value: `Työtilaus {0} hyväksytty.` }, { language: `en`, value: `Work order "{0}" approved successfully.` },);
        this.set(this.rentaTasksControllerAlertsSentToCustomerLanguageItemName, { language: `fi`, value: `Työraportti {0} lähetetty asiakkaalle.` }, { language: `en`, value: `Work report "{0}" has been sent to a customer.` },);
        this.set(this.rentaTasksControllerStepsTitleHoursAndDistanceLanguageItemName, { language: `fi`, value: `Tunnit ja matkat` }, { language: `en`, value: `Hours & distances` },);
        this.set(this.rentaTasksControllerStepsTitleApprovingLanguageItemName, { language: `fi`, value: `Hyväksyntä` }, { language: `en`, value: `Approving` },);
        this.set(this.rentaTasksControllerStepsTitleSummaryLanguageItemName, { language: `fi`, value: `Yhteenveto` }, { language: `en`, value: `Summary` },);
        this.set(this.dailyHoursModalSubtitleLanguageItemName, { language: `fi`, value: `Työtilauksen työtunnit` }, { language: `en`, value: `Work order working hours` },);
        this.set(this.dailyHoursModalLabelsMounterLanguageItemName, { language: `fi`, value: `Asentaja` }, { language: `en`, value: `Mounter` },);
        this.set(this.dailyHoursModalLabelsDateLanguageItemName, { language: `fi`, value: `Päivämäärä` }, { language: `en`, value: `Date` },);
        this.set(this.dailyHoursModalLabelsNormalHoursLanguageItemName, { language: `fi`, value: `Tunnit` }, { language: `en`, value: `Normal hours` },);
        this.set(this.dailyHoursModalLabelsOvertime50HoursLanguageItemName, { language: `fi`, value: `Ylityö 50%` }, { language: `en`, value: `Overtime 50%` },);
        this.set(this.dailyHoursModalLabelsOvertime100HoursLanguageItemName, { language: `fi`, value: `Ylityö 100%` }, { language: `en`, value: `Overtime 100%` },);
        this.set(this.dailyHoursWidgetLabelLanguageItemName, { language: `fi`, value: `Kaikki tunnit` }, { language: `en`, value: `All hours` },);
        this.set(this.dailyHoursWidgetDescriptionLanguageItemName, { language: `fi`, value: `Kaikki työtilaukselle kirjatut tunnit` }, { language: `en`, value: `Total work order working hours` },);
        this.set(this.dailyHoursWidgetButtonsAddHoursLanguageItemName, { language: `fi`, value: `Lisää käyttäjän tunteja` }, { language: `en`, value: `Add user hours` },);
        this.set(this.dailyHoursWidgetLabelsNormalLanguageItemName, { language: `fi`, value: `Tunnit` }, { language: `en`, value: `Normal` },);
        this.set(this.distanceModalSubtitleLanguageItemName, { language: `fi`, value: `Työtilauksen matkakorvaukset` }, { language: `en`, value: `Work order kilometer` },);
        this.set(this.distanceModalLabelsDateLanguageItemName, { language: `fi`, value: `Päivämäärä` }, { language: `en`, value: `Date` },);
        this.set(this.distanceModalLabelsVehiclesLanguageItemName, { language: `fi`, value: `Ajoneuvojen lukumäärä` }, { language: `en`, value: `Vehicles amount` },);
        this.set(this.distanceModalLabelsValueLanguageItemName, { language: `fi`, value: `Kokonaismatka, km` }, { language: `en`, value: `Total distance, km` },);
        this.set(this.distanceWidgetLabelLanguageItemName, { language: `fi`, value: `Matkakorvaukset` }, { language: `en`, value: `Distance` },);
        this.set(this.distanceWidgetDescriptionLanguageItemName, { language: `fi`, value: `Työtilauksen kokonais matkakorvausten määrä` }, { language: `en`, value: `Total work order distance amount` },);
        this.set(this.distanceWidgetButtonsAddKilometersLanguageItemName, { language: `fi`, value: `Lisää matkakorvauksia` }, { language: `en`, value: `Add kilometers` },);
        this.set(this.workOrderLabelsMyHoursLanguageItemName, { language: `fi`, value: `Minun tunnit` }, { language: `en`, value: `My hours` },);
        this.set(this.summaryWidgetLabelsDistanceLanguageItemName, { language: `fi`, value: `Matkakorvaukset: <mark>{0} km</mark>` }, { language: `en`, value: `Distance: <mark>{0} km</mark>` },);
        this.set(this.summaryWidgetLabelsHoursLanguageItemName, { language: `fi`, value: `Työtunnit: <mark>{0:0.0} t ({1:0.0}/{2:0.0}/{3:0.0})</mark>` }, { language: `en`, value: `Working hours: <mark>{0:0.0} h ({1:0.0}/{2:0.0}/{3:0.0})</mark>` },);
        this.set(this.summaryManualLanguageItemName, { language: `fi`, value: `Tämä on työraportin yhteenveto. Tarkasta yhteenveto huolellisesti ennen hyväksyntää.` }, { language: `en`, value: `This is the work report summary. Review the summary carefully before approval.` },);
        this.set(this.workHoursWidgetSummaryLanguageItemName, { language: `fi`, value: `Tunnit: {0:0.0}` }, { language: `en`, value: `Working hours: {0:0.0}` },);
        this.set(this.assignMountersManualLanguageItemName, { language: `fi`, value: `Määritä työtilaukselle asentaja(t), pyyhkäise oikealle tai paina nuolinäppäintä vahivistaksesi valinnat. Voit jättää asentajat määrittämättä työtilaukselle, jolloin tämä on kaikkien tehtävissä.` }, { language: `en`, value: `Assign mounters to the work order, swipe right, or press next when you finished. You can also leave it open for everyone by not specifying any mounter.` },);
        this.set(this.checkInsPanelNoDataTextLanguageItemName, { language: `fi`, value: `Ei kirjautumisia työtilauksella` }, { language: `en`, value: `No sign-ins or check-ins are registered` },);
        this.set(this.addMounterModalLabelsOvertime50HoursLanguageItemName, { language: `fi`, value: `Ylityö 50%` }, { language: `en`, value: `Overtime 50%` },);
        this.set(this.addMounterModalLabelsOvertime100HoursLanguageItemName, { language: `fi`, value: `Ylityö 100%` }, { language: `en`, value: `Overtime 100%` },);
        this.set(this.workOrdersValidationErrorApproverCreationRejectedLanguageItemName, { language: `fi`, value: `Ei voitu luoda hyväksyjää "{0}", ota yhteyttä pääkäyttäjään.` }, { language: `sv`, value: `SV: Cannot create approver "{0}". Please contact administrator.` }, { language: `pl`, value: `PL: Cannot create approver "{0}". Please contact administrator.` }, { language: `en`, value: `Cannot create approver "{0}". Please contact administrator.` },);
        this.set(this.workOrdersApprovedAlertLanguageItemName, { language: `fi`, value: `Työtilaus merkitty hyväksytyksi` }, { language: `sv`, value: `SV: Work order marked as approved` }, { language: `pl`, value: `PL: Work order marked as approved` }, { language: `en`, value: `Work order marked as approved` },);
        this.set(this.sendWorkOrderModalButtonSendOrApproveLanguageItemName, { language: `fi`, value: `Lähetä tai hyväksy` }, { language: `sv`, value: `SV: Send or Approve` }, { language: `pl`, value: `PL: Send or Approve` }, { language: `en`, value: `Send or Approve` },);
        this.set(this.approveWorkReportTitleLanguageItemName, { language: `fi`, value: `Merkitse hyväksytyksi` }, { language: `sv`, value: `SV: Mark as approved` }, { language: `pl`, value: `PL: Mark as approved` }, { language: `en`, value: `Mark as approved` },);
        this.set(this.workOrdersOwnerSelectConstructionSiteLanguageItemName, { language: `fi`, value: `Valitse työmaa` }, { language: `sv`, value: `SV: Select a construction site` }, { language: `pl`, value: `PL: Select a construction site` }, { language: `en`, value: `Select a construction site` },);
        this.set(this.workOrdersActionsLockLanguageItemName, { language: `fi`, value: `Lukitse laskutettavakasi` }, { language: `sv`, value: `SV: Lock for invoicing` }, { language: `pl`, value: `PL: Lock for invoicing` }, { language: `en`, value: `Lock for invoicing` },);
        this.set(this.workOrdersActionsInvoiceLanguageItemName, { language: `fi`, value: `Laskuta` }, { language: `sv`, value: `SV: Invoice` }, { language: `pl`, value: `PL: Invoice` }, { language: `en`, value: `Invoice` },);
        this.set(this.workOrdersActionsSendLanguageItemName, { language: `fi`, value: `Lähetä asiakkaalle` }, { language: `sv`, value: `SV: Send to customer` }, { language: `pl`, value: `PL: Send to customer` }, { language: `en`, value: `Send to customer` },);
        this.set(this.constructionSiteManagementTabsWorkOrdersLanguageItemName, { language: `fi`, value: `Työtilaukset` }, { language: `sv`, value: `SV: Work orders` }, { language: `pl`, value: `PL: Work orders` }, { language: `en`, value: `Work orders` },);
        this.set(this.constructionSiteManagementTabsContractLanguageItemName, { language: `fi`, value: `Maksuerätaulukko` }, { language: `sv`, value: `SV: Customer contract` }, { language: `pl`, value: `PL: Customer contract` }, { language: `en`, value: `Customer contract` },);
        this.set(this.constructionSitePanelExternalAddressLanguageItemName, { language: `fi`, value: `Ulkoinen osoite` }, { language: `sv`, value: `SV: External address` }, { language: `pl`, value: `PL: External address` }, { language: `en`, value: `External address` },);
        this.set(this.constructionSitePanelExternalNameLanguageItemName, { language: `fi`, value: `ERP Nimi` }, { language: `en`, value: `ERP name` },);
        this.set(this.dashboardGetManualLanguageItemName, { language: `fi`, value: `Tämä on Renta Taskin etusivu. Etusivulta löydät pikanäppäimet kaikille tarvitsemillesi toiminnoille rooliisi perustuen. Mikäli sinulla on kysymyksiä sovelluksen käytöstä, ota yhteyttä pääkäyttäjään.` }, { language: `sv`, value: `SV: This is Dashboard page with widgets based on Your access role.` }, { language: `pl`, value: `PL: This is Dashboard page with widgets based on Your access role.` }, { language: `en`, value: `This is Dashboard page with widgets based on Your access role.` },);
        this.set(this.constructionSiteManagementGetManualLanguageItemName, { language: `fi`, value: `Tämä on työmaasivu. Työmaasivulla voit hallinnoida kaikkea työmaahan liittyviä asioita, kuten luoda tehtäviä sekä tarkastaa suoritettuja tehtäviä.` }, { language: `sv`, value: `SV: This is a page for RentaTask managers, where they can create new or operate existing construction sites, modules and tasks.` }, { language: `pl`, value: `PL: This is a page for RentaTask managers, where they can create new or operate existing construction sites, modules and tasks.` }, { language: `en`, value: `This is a page for RentaTask managers, where they can create new or operate existing construction sites, modules and tasks.` },);
        this.set(this.roleNameManagerLanguageItemName, { language: `fi`, value: `Työnjohtaja` }, { language: `sv`, value: `SV: Manager` }, { language: `pl`, value: `PL: Manager` }, { language: `en`, value: `Manager` },);
        this.set(this.roleNameBusinessManagerLanguageItemName, { language: `fi`, value: `Ylempi työnjohtaja` }, { language: `sv`, value: `SV: Business Manager` }, { language: `pl`, value: `PL: Business Manager` }, { language: `en`, value: `Business Manager` },);
        this.set(this.workOrdersPanelNewWorkOrderLanguageItemName, { language: `fi`, value: `Uusi työtilaus` }, { language: `sv`, value: `SV: New Work Order` }, { language: `pl`, value: `PL: New Work Order` }, { language: `en`, value: `New Work Order` },);
        this.set(this.rentaTasksWorkOrdersGetManualLanguageItemName, { language: `fi`, value: `Tämä sivu näyttää kaikki työtilaukset. Voit suodattaa työtilauksia valintasi mukaan sekä käsitellä työtilauksia.` }, { language: `sv`, value: `SV: This page shows lists of active and completed work orders. You can filter them, activate, edit, complete and approve.` }, { language: `pl`, value: `PL: This page shows lists of active and completed work orders. You can filter them, activate, edit, complete and approve.` }, { language: `en`, value: `This page shows lists of active and completed work orders. You can filter them, activate, edit, complete and approve.` },);
        this.set(this.workOrderActionsConfirmCompletedActivationLanguageItemName, { language: `fi`, value: `Oletko varma, että haluat uudelleen aktivoida hyväksytyn työtilauksen?\nAktivoinnin jälkeen vaaditaan uusi hyväksyntä.` }, { language: `sv`, value: `SV: Are you sure you want to activate a completed and approved by customer work order? After activation, the re-confirmation will be needed.` }, { language: `pl`, value: `PL: Are you sure you want to activate a completed and approved by customer work order? After activation, the re-confirmation will be needed.` }, { language: `en`, value: `Are you sure you want to activate a completed and approved by customer work order? After activation, the re-confirmation will be needed.` },);
        this.set(this.workOrderActionsConfirmActivationLanguageItemName, { language: `fi`, value: `Oletko varma, että haluat aktivoida työtilauksen <mark>{0}</mark>?` }, { language: `sv`, value: `SV: Are you sure you want to activate the work order <mark>{0}</mark>?` }, { language: `pl`, value: `PL: Are you sure you want to activate the work order <mark>{0}</mark>?` }, { language: `en`, value: `Are you sure you want to activate the work order <mark>{0}</mark>?` },);
        this.set(this.workOrderActionsConfirmCompletionLanguageItemName, { language: `fi`, value: `Oletko varma, että haluat merkitä työtilauksen <mark>{0}</mark> valmiiksi?` }, { language: `sv`, value: `SV: Are you sure you want to complete the work order <mark>{0}</mark>?` }, { language: `pl`, value: `PL: Are you sure you want to complete the work order <mark>{0}</mark>?` }, { language: `en`, value: `Are you sure you want to complete the work order <mark>{0}</mark>?` },);
        this.set(this.workOrderActionsUnlockLanguageItemName, { language: `fi`, value: `Avaa työtilauksen lukitus muokataksesi työtilausta.` }, { language: `sv`, value: `SV: Unlock the work order to enable editing` }, { language: `pl`, value: `PL: Unlock the work order to enable editing` }, { language: `en`, value: `Unlock the work order to enable editing` },);
        this.set(this.workOrderActionsConfirmInvoiceLanguageItemName, { language: `fi`, value: `Oletko varma, että haluat merkitä työtilauksen laskutetuksi?\nTyötilausta ei voida tämän jälkeen enää palauttaa aikaisempaan tilaan.` }, { language: `sv`, value: `SV: Are you sure you want to mark the work order as invoiced? \nThis is a reversible operation and cannot be reversed.` }, { language: `pl`, value: `PL: Are you sure you want to mark the work order as invoiced? \nThis is a reversible operation and cannot be reversed.` }, { language: `en`, value: `Are you sure you want to mark the work order as invoiced? \nThis is a reversible operation and cannot be reversed.` },);
        this.set(this.sendWorkOrderModalButtonAssignLanguageItemName, { language: `fi`, value: `Lisää` }, { language: `sv`, value: `SV: Assign` }, { language: `pl`, value: `PL: Assign` }, { language: `en`, value: `Assign` },);
        this.set(this.sendWorkOrderModalButtonTooltipAssignLanguageItemName, { language: `fi`, value: `Lisää yhteyshenkilö työtilaukselle` }, { language: `sv`, value: `SV: Assign contact person for work order` }, { language: `pl`, value: `PL: Assign contact person for work order` }, { language: `en`, value: `Assign contact person for work order` },);
        this.set(this.sendWorkOrderModalApproverTitleLanguageItemName, { language: `fi`, value: `Asiakkaan hyväksyjä` }, { language: `sv`, value: `SV: Customer approver` }, { language: `pl`, value: `PL: Customer approver` }, { language: `en`, value: `Customer approver` },);
        this.set(this.sendWorkOrderModalApproverSubtitleLanguageItemName, { language: `fi`, value: `Lisää, luo tai muokkaa hyväksyjää` }, { language: `sv`, value: `SV: Assign, create or modify the customer approver` }, { language: `pl`, value: `PL: Assign, create or modify the customer approver` }, { language: `en`, value: `Assign, create or modify the customer approver` },);
        this.set(this.sendWorkOrderModalOrdererTitleLanguageItemName, { language: `fi`, value: `Asiakkaan tilaaja` }, { language: `sv`, value: `SV: Customer orderer` }, { language: `pl`, value: `PL: Customer orderer` }, { language: `en`, value: `Customer orderer` },);
        this.set(this.sendWorkOrderModalOrdererSubtitleLanguageItemName, { language: `fi`, value: `Lisää, luo tai muokkaa tilaajaa` }, { language: `sv`, value: `SV: Assign, create or modify the customer orderer` }, { language: `pl`, value: `PL: Assign, create or modify the customer orderer` }, { language: `en`, value: `Assign, create or modify the customer orderer` },);
        this.set(this.workOrdersCustomerApproverActionTooltipLanguageItemName, { language: `fi`, value: `Valitse, täydennä tai luo työtilauksen hyväksyjä` }, { language: `sv`, value: `SV: Choose, fill, or create work order approver` }, { language: `pl`, value: `PL: Choose, fill, or create work order approver` }, { language: `en`, value: `Choose, fill, or create work order approver` },);
        this.set(this.workOrdersCustomerOrdererActionTooltipLanguageItemName, { language: `fi`, value: `Valitse, täydennä tai luo työtilauksen tilaaja` }, { language: `sv`, value: `SV: Choose, fill, or create work order orderer` }, { language: `pl`, value: `PL: Choose, fill, or create work order orderer` }, { language: `en`, value: `Choose, fill, or create work order orderer` },);
        this.set(this.workOrdersGridNoDataTextLanguageItemName, { language: `fi`, value: `Rajauksella ei löydy työtilauksia` }, { language: `sv`, value: `SV: No work reports found according to filters` }, { language: `pl`, value: `PL: No work reports found according to filters` }, { language: `en`, value: `No work reports found according to filters` },);
        this.set(this.workDayPanelGridAggregatesNoDataTextLanguageItemName, { language: `fi`, value: `Ei raportoituja tunteja` }, { language: `sv`, value: `SV: No reported hours` }, { language: `pl`, value: `PL: No reported hours` }, { language: `en`, value: `No reported hours` },);
        this.set(this.workOrderDetailsPanelGridProductUnitLanguageItemName, { language: `fi`, value: `Yksikkö` }, { language: `sv`, value: `SV: Unit` }, { language: `pl`, value: `PL: Unit` }, { language: `en`, value: `Unit` },);
        this.set(this.workOrderDetailsPanelGridEquipmentNoDataTextLanguageItemName, { language: `fi`, value: `Ei tarvikkeita` }, { language: `sv`, value: `SV: No equipment` }, { language: `pl`, value: `PL: No equipment` }, { language: `en`, value: `No equipment` },);
        this.set(this.workOrderDetailsPanelGridHoursNoDataTextLanguageItemName, { language: `fi`, value: `Ei raportoituja tunteja` }, { language: `sv`, value: `SV: No reported hours` }, { language: `pl`, value: `PL: No reported hours` }, { language: `en`, value: `No reported hours` },);
        this.set(this.workOrderDetailsPanelGridHoursHoursPriceInfoTitleLanguageItemName, { language: `fi`, value: `Vakio tuntihinta` }, { language: `en`, value: `Default hours price` },);
        this.set(this.workOrderDetailsPanelGridEquipmentPriceInfoTitleLanguageItemName, { language: `fi`, value: `Vakio tuotehinta` }, { language: `en`, value: `Default product price` },);
        this.set(this.workOrderDetailsPanelGridEquipmentConfirmDeleteLanguageItemName, { language: `fi`, value: `Oletko varma, että haluat poistaa tuotteen "{0}"?` }, { language: `en`, value: `Are you sure you want to delete the equipment \"{0}\"?` },);
        this.set(this.workOrderDetailsPanelGridDistancesDayLanguageItemName, { language: `fi`, value: `Päivä` }, { language: `en`, value: `Day` },);
        this.set(this.workOrderDetailsPanelGridDistancesVehiclesLanguageItemName, { language: `fi`, value: `Ajoneuvojen lkm` }, { language: `en`, value: `Vehicles` },);
        this.set(this.workOrderDetailsPanelGridDistancesDistanceLanguageItemName, { language: `fi`, value: `Etäisyys, km` }, { language: `en`, value: `Distance, km` },);
        this.set(this.workOrderDetailsPanelGridDistancesPriceLanguageItemName, { language: `fi`, value: `Hinta, €/km` }, { language: `en`, value: `Price, €/km` },);
        this.set(this.workOrderDetailsPanelGridDistancesCostLanguageItemName, { language: `fi`, value: `Kustannus, €` }, { language: `en`, value: `Cost, €` },);
        this.set(this.workOrderDetailsPanelGridDistancesConfirmDeleteLanguageItemName, { language: `fi`, value: `Oletko varma, että haluat poistaa {0} km päivältä {1:dd.MM.yyyy}?` }, { language: `en`, value: `Are you sure you want to delete {0} km from date {1:dd.MM.yyyy}?` },);
        this.set(this.workOrderDetailsPanelGridDistancesNoDataTextLanguageItemName, { language: `fi`, value: `Ei raportoituja kilometrejä` }, { language: `en`, value: `No distances reported` },);
        this.set(this.workOrderDetailsAddDistanceLanguageItemName, { language: `fi`, value: `Lisää kilometrikorvaus` }, { language: `en`, value: `Add distance` },);
        this.set(this.workOrderDetailsDistancesTabTitleLanguageItemName, { language: `fi`, value: `Matkakulut` }, { language: `en`, value: `Mileages` },);
        this.set(this.contactSupportPageMessageSentLanguageItemName, { language: `fi`, value: `Pyyntösi on lähetetty tuelle.` }, { language: `sv`, value: `Er förfrågan har skickats till supporten.` }, { language: `en`, value: `Your request was sent to support team.` },);
        this.set(this.contactSupportPageMessageWithIdSentLanguageItemName, { language: `fi`, value: `Pyyntösi tunnuksella "{0}" on lähetetty tuelle.` }, { language: `sv`, value: `Er förfrågan med id "{0}" har skickats till supporten.` }, { language: `en`, value: `Your request with id "{0}" was sent to support team.` },);
        this.set(this.rentaTasksWorkOrderSignInConfirmLanguageItemName, { language: `fi`, value: `Työtilaus ei ole vielä aktiivinen, oletko varma, että haluat aktivoida ja kirjautua työtilaukselle?` }, { language: `sv`, value: `SV: The work order is not active yet.\nAre you sure you want to activate and sign in?` }, { language: `pl`, value: `PL: The work order is not active yet.\nAre you sure you want to activate and sign in?` }, { language: `en`, value: `The work order is not active yet.\nAre you sure you want to activate and sign in?` },);
        this.set(this.rentaTasksWorkOrderSignInAlertLanguageItemName, { language: `fi`, value: `Kirjautuminen työtilaukselle onnistui` }, { language: `sv`, value: `SV: You have successfully signed in to the work order.` }, { language: `pl`, value: `PL: You have successfully signed in to the work order.` }, { language: `en`, value: `You have successfully signed in to the work order.` },);
        this.set(this.rentaTasksWorkOrderManualTitleLanguageItemName, { language: `fi`, value: `Työtilauksen kuvaus` }, { language: `sv`, value: `SV: Work order description` }, { language: `pl`, value: `PL: Work order description` }, { language: `en`, value: `Work order description` },);
        this.set(this.rentaTasksWorkOrderLabelCustomerNameLanguageItemName, { language: `fi`, value: `Asiakas` }, { language: `sv`, value: `SV: Customer name` }, { language: `pl`, value: `PL: Customer name` }, { language: `en`, value: `Customer name` },);
        this.set(this.rentaTasksWorkOrderLabelConstructionSiteLanguageItemName, { language: `fi`, value: `Työmaan nimi` }, { language: `sv`, value: `SV: Construction site` }, { language: `pl`, value: `PL: Construction site` }, { language: `en`, value: `Construction site` },);
        this.set(this.rentaTasksWorkOrderLabelAddressLanguageItemName, { language: `fi`, value: `Osoite` }, { language: `sv`, value: `SV: Address` }, { language: `pl`, value: `PL: Address` }, { language: `en`, value: `Address` },);
        this.set(this.rentaTasksWorkOrderLabelOrdererLanguageItemName, { language: `fi`, value: `Tilaaja` }, { language: `sv`, value: `SV: Orderer` }, { language: `pl`, value: `PL: Orderer` }, { language: `en`, value: `Orderer` },);
        this.set(this.rentaTasksWorkOrderLabelOrdererPhoneLanguageItemName, { language: `fi`, value: `Tilaajan puhelinnumero` }, { language: `sv`, value: `SV: Orderer phone` }, { language: `pl`, value: `PL: Orderer phone` }, { language: `en`, value: `Orderer phone` },);
        this.set(this.rentaTasksWorkOrderLabelApproverLanguageItemName, { language: `fi`, value: `Hyväksyjä` }, { language: `sv`, value: `SV: Approver` }, { language: `pl`, value: `PL: Approver` }, { language: `en`, value: `Approver` },);
        this.set(this.rentaTasksWorkOrderLabelApproverPhoneLanguageItemName, { language: `fi`, value: `Hyväksyjän puhelinnumero` }, { language: `sv`, value: `SV: Approver phone` }, { language: `pl`, value: `PL: Approver phone` }, { language: `en`, value: `Approver phone` },);
        this.set(this.rentaTasksWorkOrderLabelManagerLanguageItemName, { language: `fi`, value: `Työnjohtaja` }, { language: `sv`, value: `SV: Manager` }, { language: `pl`, value: `PL: Manager` }, { language: `en`, value: `Manager` },);
        this.set(this.rentaTasksWorkOrderLabelManagerPhoneLanguageItemName, { language: `fi`, value: `Työnjohtajan puhelinnumero` }, { language: `sv`, value: `SV: Manager phone` }, { language: `pl`, value: `PL: Manager phone` }, { language: `en`, value: `Manager phone` },);
        this.set(this.rentaTasksWorkOrderLabelDistanceLanguageItemName, { language: `fi`, value: `Matkakorvaukset` }, { language: `sv`, value: `SV: Distance` }, { language: `pl`, value: `PL: Distance` }, { language: `en`, value: `Distance` },);
        this.set(this.genericKmLanguageItemName, { language: `fi`, value: `{0} km` }, { language: `sv`, value: `SV: {0} km` }, { language: `pl`, value: `PL: {0} km` }, { language: `en`, value: `{0} km` },);
        this.set(this.rentaTasksWorkOrderLabelWorkingHoursLanguageItemName, { language: `fi`, value: `Työtunnit` }, { language: `sv`, value: `SV: Working hours` }, { language: `pl`, value: `PL: Working hours` }, { language: `en`, value: `Working hours` },);
        this.set(this.genericHoursLanguageItemName, { language: `fi`, value: `{0:0.0} h ({1:0.0}/{2:0.0}/{3:0.0})` }, { language: `sv`, value: `SV: {0:0.0} h ({1:0.0}/{2:0.0}/{3:0.0})` }, { language: `pl`, value: `PL: {0:0.0} h ({1:0.0}/{2:0.0}/{3:0.0})` }, { language: `en`, value: `{0:0.0} h ({1:0.0}/{2:0.0}/{3:0.0})` },);
        this.set(this.rentaTasksWorkOrderLabelStatusLanguageItemName, { language: `fi`, value: `Tila:` }, { language: `sv`, value: `SV: Status:` }, { language: `pl`, value: `PL: Status:` }, { language: `en`, value: `Status:` },);
        this.set(this.rentaTasksWorkOrderLabelActivationDateLanguageItemName, { language: `fi`, value: `Aloituspäivä:` }, { language: `sv`, value: `SV: Activation date:` }, { language: `pl`, value: `PL: Activation date:` }, { language: `en`, value: `Activation date:` },);
        this.set(this.rentaTasksWorkOrderLabelCompletionDateLanguageItemName, { language: `fi`, value: `Valmistumispäivä:` }, { language: `sv`, value: `SV: Completion date:` }, { language: `pl`, value: `PL: Completion date:` }, { language: `en`, value: `Completion date:` },);
        this.set(this.rentaTasksWorkOrderButtonLabelSignInLanguageItemName, { language: `fi`, value: `Kirjaudu työtilaukselle` }, { language: `sv`, value: `SV: Sign in` }, { language: `pl`, value: `PL: Sign in` }, { language: `en`, value: `Sign in` },);
        this.set(this.rentaTasksWorkOrderButtonLabelSignOutLanguageItemName, { language: `fi`, value: `Keskeytä työ` }, { language: `sv`, value: `SV: Sign out` }, { language: `pl`, value: `PL: Sign out` }, { language: `en`, value: `Sign out` },);
        this.set(this.rentaTasksWorkOrderButtonLabelAddEquipmentLanguageItemName, { language: `fi`, value: `Lisää tarvikkeita` }, { language: `sv`, value: `SV: Add equipment` }, { language: `pl`, value: `PL: Add equipment` }, { language: `en`, value: `Add equipment` },);
        this.set(this.rentaTasksWorkOrderButtonLabelBackLanguageItemName, { language: `fi`, value: `Palaa` }, { language: `sv`, value: `SV: Back` }, { language: `pl`, value: `PL: Back` }, { language: `en`, value: `Back` },);
        this.set(this.rentaTasksDashboardRouteWidgetMyWorkOrderLanguageItemName, { language: `fi`, value: `Minun työtilaukseni` }, { language: `sv`, value: `SV: My work order` }, { language: `pl`, value: `PL: My work order` }, { language: `en`, value: `My work order` },);
        this.set(this.rentaTasksDashboardRouteWidgetWorkOrdersLanguageItemName, { language: `fi`, value: `Työtilaukset` }, { language: `sv`, value: `SV: Work orders` }, { language: `pl`, value: `PL: Work orders` }, { language: `en`, value: `Work orders` },);
        this.set(this.rentaTasksWorkOrderSignOutAlertLanguageItemName, { language: `fi`, value: `Olet kirjautunut onnistuneesti työtilaukselta.` }, { language: `sv`, value: `SV: You have successfully signed out from the work order.` }, { language: `pl`, value: `PL: You have successfully signed out from the work order.` }, { language: `en`, value: `You have successfully signed out from the work order.` },);
        this.set(this.rentaTasksWorkOrderSaveAlertLanguageItemName, { language: `fi`, value: `Työtilaus on tallennettu onnistuneesti.` }, { language: `sv`, value: `SV: The work order is saved successfully.` }, { language: `pl`, value: `PL: The work order is saved successfully.` }, { language: `en`, value: `The work order is saved successfully.` },);
        this.set(this.rentaTasksWorkOrderUpdateEquipmentAlertLanguageItemName, { language: `fi`, value: `Työtilaukselle lisätyt tarvikkeet on tallennettu onnistuneesti` }, { language: `sv`, value: `SV: The work order equipment is updated successfully.` }, { language: `pl`, value: `PL: The work order equipment is updated successfully.` }, { language: `en`, value: `The work order equipment is updated successfully.` },);
        this.set(this.rentaTasksWorkOrderCompleteAlertLanguageItemName, { language: `fi`, value: `Työtilaus valmistettu onnistuneesti.` }, { language: `sv`, value: `SV: The work order completed successfully.` }, { language: `pl`, value: `PL: The work order completed successfully.` }, { language: `en`, value: `The work order completed successfully.` },);
        this.set(this.workOrdersFiltersEmployeesLanguageItemName, { language: `fi`, value: `Asentajat` }, { language: `sv`, value: `SV: Employees` }, { language: `pl`, value: `PL: Employees` }, { language: `en`, value: `Employees` },);
        this.set(this.workOrdersFiltersManagersLanguageItemName, { language: `fi`, value: `Työnjohtajat` }, { language: `sv`, value: `SV: Managers` }, { language: `pl`, value: `PL: Managers` }, { language: `en`, value: `Managers` },);
        this.set(this.rentaTasksDashboardRouteWidgetWorkOrdersDescriptionLanguageItemName, { language: `fi`, value: `Tarkastele aktiivisia työtilauksia` }, { language: `sv`, value: `SV: Check active work orders` }, { language: `pl`, value: `PL: Check active work orders` }, { language: `en`, value: `Check active work orders` },);
        this.set(this.workOrdersRowsNoAddressLanguageItemName, { language: `fi`, value: `Ei osoitetta` }, { language: `sv`, value: `SV: No address` }, { language: `pl`, value: `PL: No address` }, { language: `en`, value: `No address` },);
        this.set(this.editContactPersonModalButtonLabelSaveChangesLanguageItemName, { language: `fi`, value: `Tallenna muutokset` }, { language: `sv`, value: `SV: Save changes` }, { language: `pl`, value: `PL: Save changes` }, { language: `en`, value: `Save changes` },);
        this.set(this.editContactPersonModalSubtitleLanguageItemName, { language: `fi`, value: `Täytä puuttuvat tiedot` }, { language: `sv`, value: `SV: Fill in missing information` }, { language: `pl`, value: `PL: Fill in missing information` }, { language: `en`, value: `Fill in missing information` },);
        this.set(this.summaryWidgetButtonEditApproverLanguageItemName, { language: `fi`, value: `Täytä puuttuvat kuittaajan tiedot` }, { language: `sv`, value: `SV: Fill in missing approver info` }, { language: `pl`, value: `PL: Fill in missing approver info` }, { language: `en`, value: `Fill in missing approver info` },);
        this.set(this.summaryWidgetDropdownNothingSelectedLanguageItemName, { language: `fi`, value: `Valitse hyväksyjä` }, { language: `sv`, value: `SV: Select customer approver` }, { language: `pl`, value: `PL: Select customer approver` }, { language: `en`, value: `Select customer approver` },);
        this.set(this.managersNewOrdererLanguageItemName, { language: `fi`, value: `Luo uusi tilaaja` }, { language: `sv`, value: `SV: Create newOrderer` }, { language: `pl`, value: `PL: Create new orderer` }, { language: `en`, value: `Create new orderer` },);
        this.set(this.managersOrdererSavedSuccessfullyLanguageItemName, { language: `fi`, value: `Tilaaja on tallennettu onnistuneesti.` }, { language: `en`, value: `Orderer has been saved successfully.` },);
        this.set(this.rentaTasksControllerStepsTitleEditLanguageItemName, { language: `fi`, value: `Muokkaa tehtävää` }, { language: `en`, value: `Edit task` },);
        this.set(this.rentaTasksControllerStepsTitleManagersLanguageItemName, { language: `fi`, value: `Hyväksyjät` }, { language: `en`, value: `Managers` },);
        this.set(this.managersStepOrdererSaveLanguageItemName, { language: `fi`, value: `Tilaaja tallennettu onnistuneesti.` }, { language: `en`, value: `Orderer has been saved successfully.` },);
        this.set(this.managersStepApproverSavedLanguageItemName, { language: `fi`, value: `Hyväksyjä tallennettu onnistuneesti.` }, { language: `en`, value: `Approver has been saved successfully.` },);
        this.set(this.managersStepOrdererNotSpecifiedLanguageItemName, { language: `fi`, value: `Tilaajan yhteystietoja puuttuu!` }, { language: `en`, value: `Orderer data should be specified!` },);
        this.set(this.managersStepApproverNotSpecifiedLanguageItemName, { language: `fi`, value: `Hyväksyjän yhteystietoja puuttuu!` }, { language: `en`, value: `Approver data should be specified!` },);
        this.set(this.managersStepManualLanguageItemName, { language: `fi`, value: `Määritä työtilauksen työnjohtaja, tilaaja ja hyväksyjä. Yhteyshenkilöiden tiedot (sähköposti, matkapuhelinnumero, etu -ja sukunimi) tulee olla täytetty.` }, { language: `en`, value: `Specify the work order manager, customer approver, and customer orderer. Customer contact information (email, phone, first and last name) should also be specified.` },);
        this.set(this.managersStepManagerLabelLanguageItemName, { language: `fi`, value: `Työnjohtaja` }, { language: `en`, value: `Manager` },);
        this.set(this.managersStepManagerDescriptionLanguageItemName, { language: `fi`, value: `Valitse työnjohtaja` }, { language: `en`, value: `Choose a manager` },);
        this.set(this.managersStepOrdererLabelLanguageItemName, { language: `fi`, value: `Tilaaja` }, { language: `en`, value: `Customer orderer` },);
        this.set(this.managersStepOrdererDescriptionLanguageItemName, { language: `fi`, value: `Valitse tai luo tilaaja` }, { language: `en`, value: `Choose or create an orderer` },);
        this.set(this.managersStepOrdererAddLanguageItemName, { language: `fi`, value: `Uusi tilaaja` }, { language: `en`, value: `New orderer` },);
        this.set(this.managersStepApproverLabelLanguageItemName, { language: `fi`, value: `Hyväksyjä` }, { language: `en`, value: `Customer approver` },);
        this.set(this.managersStepApproverDescriptionLanguageItemName, { language: `fi`, value: `Valitse tai luo hyväksyjä` }, { language: `en`, value: `Choose or create an approver` },);
        this.set(this.managersStepApproverAddLanguageItemName, { language: `fi`, value: `Uusi hyväksyjä` }, { language: `en`, value: `New approver` },);
        this.set(this.rentaTasksWorkOrderInfoCheckboxWidgetUnscheduledLanguageItemName, { language: `fi`, value: `Aikatauluttamaton` }, { language: `sv`, value: `SV: Unscheduled` }, { language: `pl`, value: `PL: Unscheduled` }, { language: `en`, value: `Unscheduled` },);
        this.set(this.rentaTasksWorkOrderInfoCheckboxWidgetUnscheduledDescriptionLanguageItemName, { language: `fi`, value: `Lisää tai poista aloituspäivämäärä` }, { language: `sv`, value: `SV: Check to unschedule an activation date` }, { language: `pl`, value: `PL: Check to unschedule an activation date` }, { language: `en`, value: `Check to unschedule an activation date` },);
        this.set(this.rentaTasksAddEquipmentCategoriesOrProductsSearchingLanguageItemName, { language: `fi`, value: `Etsitään…` }, { language: `sv`, value: `SV: Searching…` }, { language: `pl`, value: `PL: Searching…` }, { language: `en`, value: `Searching…` },);
        this.set(this.rentaTasksAddEquipmentCategoriesOrProductsProductsFoundLanguageItemName, { language: `fi`, value: `{0} Tuotetta löytynyt` }, { language: `sv`, value: `SV: {0} products found:` }, { language: `pl`, value: `PL: {0} products found:` }, { language: `en`, value: `{0} products found:` },);
        this.set(this.rentaTasksAddEquipmentCategoriesOrProductsNoProductsFoundLanguageItemName, { language: `fi`, value: `Hakusanalla ei löytynyt tuotteita` }, { language: `sv`, value: `SV: No products with given search term` }, { language: `pl`, value: `PL: No products with given search term` }, { language: `en`, value: `No products with given search term` },);
        this.set(this.rentaTasksAddEquipmentCategoriesOrProductsTextInputPlaceholderSearchLanguageItemName, { language: `fi`, value: `Etsi` }, { language: `sv`, value: `SV: Search` }, { language: `pl`, value: `PL: Search` }, { language: `en`, value: `Search` },);
        this.set(this.rentaTasksAddEquipmentCategoriesOrProductsSearchResultLanguageItemName, { language: `fi`, value: `Hakutulokset: {0}` }, { language: `sv`, value: `SV: Search results: {0}` }, { language: `pl`, value: `PL: Search results: {0}` }, { language: `en`, value: `Search results: {0}` },);
        this.set(this.rentaTasksAddEquipmentCategoriesOrProductsModalTitleEquipmentLanguageItemName, { language: `fi`, value: `Tarvike` }, { language: `sv`, value: `SV: Equipment` }, { language: `pl`, value: `PL: Equipment` }, { language: `en`, value: `Equipment` },);
        this.set(this.rentaTasksAddEquipmentCategoriesOrProductsModalSubtitleChooseEquipmentLanguageItemName, { language: `fi`, value: `Valitse tuote työtilaukselle` }, { language: `sv`, value: `SV: Choose product to add to equipment list` }, { language: `pl`, value: `PL: Choose product to add to equipment list` }, { language: `en`, value: `Choose product to add to equipment list` },);
        this.set(this.taskTooltipsTaskUnscheduledLanguageItemName, { language: `fi`, value: `Työtilausta ei ole aikataulutettu. Aloituspäivämäärä puuttuu.` }, { language: `sv`, value: `SV: Work order is unscheduled.\nActivation date is not specified.` }, { language: `pl`, value: `PL: Work order is unscheduled.\nActivation date is not specified.` }, { language: `en`, value: `Work order is unscheduled.\nActivation date is not specified.` },);
        this.set(this.workOrderStatusUnscheduledLanguageItemName, { language: `fi`, value: `Aikatauluttamaton` }, { language: `sv`, value: `SV: Unscheduled` }, { language: `pl`, value: `PL: Unscheduled` }, { language: `en`, value: `Unscheduled` },);
        this.set(this.rentaTasksAddEquipmentCategoriesOrProductsAddEquipmentLanguageItemName, { language: `fi`, value: `Lisää tarvikkeita` }, { language: `sv`, value: `SV: Add equipment` }, { language: `pl`, value: `PL: Add equipment` }, { language: `en`, value: `Add equipment` },);
        this.set(this.rentaTasksAddEquipmentAddEquipmentDataProviderCategoryFavoriteLanguageItemName, { language: `fi`, value: `SUOSIKKI` }, { language: `sv`, value: `SV: FAVORITE` }, { language: `pl`, value: `PL: FAVORITE` }, { language: `en`, value: `FAVORITE` },);
        this.set(this.rentaTasksAddEquipmentCategoriesOrProductsNoProductsLanguageItemName, { language: `fi`, value: `Ei tuotteita` }, { language: `sv`, value: `SV: No products` }, { language: `pl`, value: `PL: No products` }, { language: `en`, value: `No products` },);
        this.set(this.rentaTasksControllerWorkOrderConcurrencyAlertLanguageItemName, { language: `fi`, value: `{0} on muokannut työtilausta {1:D}. Tarkasta työtilauksen tiedot.` }, { language: `en`, value: `The work order was modified by "{0}" at "{1:D}". Please check the WO details and continue.` },);
        this.set(this.rentaTasksWorkOrderSignInFailedAlertLanguageItemName, { language: `fi`, value: `Työtilaukselle kirjautuminen epäonnistui, koska työtilauksen tila on muuttunut.` }, { language: `en`, value: `Cannot sign-in to the work order. The work order status has been changed.` },);
        this.set(this.rentaTasksWorkOrderLabelInvoiceReferenceLanguageItemName, { language: `fi`, value: `Viite` }, { language: `sv`, value: `SV: Reference` }, { language: `pl`, value: `PL: Reference` }, { language: `en`, value: `Reference` },);
        this.set(this.summaryWidgetReferenceLanguageItemName, { language: `fi`, value: `Viite:` }, { language: `sv`, value: `SV: Reference:` }, { language: `pl`, value: `PL: Reference:` }, { language: `en`, value: `Reference:` },);
    }

    /**
    /* "TopNav.Frontpage" (Frontpage)
    */
    public get topNavFrontpage() : string {
        return this.get(this.topNavFrontpageLanguageItemName);
    }

    /**
    /* "Widget.NewSite.Label" (New site)
    */
    public get widgetNewSiteLabel() : string {
        return this.get(this.widgetNewSiteLabelLanguageItemName);
    }

    /**
    /* "TopNav.Login" (Login)
    */
    public get topNavLogin() : string {
        return this.get(this.topNavLoginLanguageItemName);
    }

    /**
    /* "TopNav.Employees" (Employees)
    */
    public get topNavEmployees() : string {
        return this.get(this.topNavEmployeesLanguageItemName);
    }

    /**
    /* "TopNav.Warehouse" (Warehouses)
    */
    public get topNavWarehouse() : string {
        return this.get(this.topNavWarehouseLanguageItemName);
    }

    /**
    /* "TopNav.ConstructionSites" (Construction sites)
    */
    public get topNavConstructionSites() : string {
        return this.get(this.topNavConstructionSitesLanguageItemName);
    }

    /**
    /* "TopNav.Invoices" (Invoices)
    */
    public get topNavInvoices() : string {
        return this.get(this.topNavInvoicesLanguageItemName);
    }

    /**
    /* "TopNav.WorkReports" (Work reports)
    */
    public get topNavWorkReports() : string {
        return this.get(this.topNavWorkReportsLanguageItemName);
    }

    /**
    /* "TopNav.Audits" (Audits)
    */
    public get topNavAudits() : string {
        return this.get(this.topNavAuditsLanguageItemName);
    }

    /**
    /* "TopNav.Admin" (Admin)
    */
    public get topNavAdmin() : string {
        return this.get(this.topNavAdminLanguageItemName);
    }

    /**
    /* "TopNav.ConstructionSiteManagement" (Construction site management)
    */
    public get topNavConstructionSiteManagement() : string {
        return this.get(this.topNavConstructionSiteManagementLanguageItemName);
    }

    /**
    /* "TopNav.Account" (Account)
    */
    public get topNavAccount() : string {
        return this.get(this.topNavAccountLanguageItemName);
    }

    /**
    /* "TopNav.WorkHours" (Work hours)
    */
    public get topNavWorkHours() : string {
        return this.get(this.topNavWorkHoursLanguageItemName);
    }

    /**
    /* "TopNav.Logout" (Logout)
    */
    public get topNavLogout() : string {
        return this.get(this.topNavLogoutLanguageItemName);
    }

    /**
    /* "Widget.ConstructionSites.Label" (Construction sites)
    */
    public get widgetConstructionSitesLabel() : string {
        return this.get(this.widgetConstructionSitesLabelLanguageItemName);
    }

    /**
    /* "Widget.ConstructionSites.Description" (Construction sites: {0})
    */
    public get widgetConstructionSitesDescription() : string {
        return this.get(this.widgetConstructionSitesDescriptionLanguageItemName);
    }

    /**
    /* "Widget.NewSite.Description" (Create a construction site)
    */
    public get widgetNewSiteDescription() : string {
        return this.get(this.widgetNewSiteDescriptionLanguageItemName);
    }

    /**
    /* "Widget.NewTask.Label" (New task)
    */
    public get widgetNewTaskLabel() : string {
        return this.get(this.widgetNewTaskLabelLanguageItemName);
    }

    /**
    /* "Widget.NewTask.Description" (Create a task)
    */
    public get widgetNewTaskDescription() : string {
        return this.get(this.widgetNewTaskDescriptionLanguageItemName);
    }

    /**
    /* "Widget.Employees.Description" (Employees: {0})
    */
    public get widgetEmployeesDescription() : string {
        return this.get(this.widgetEmployeesDescriptionLanguageItemName);
    }

    /**
    /* "Widget.Invoices.Description" ({0:C} € / day)
    */
    public get widgetInvoicesDescription() : string {
        return this.get(this.widgetInvoicesDescriptionLanguageItemName);
    }

    /**
    /* "Widget.InvoicingPeriod.Label" (Invoicing period)
    */
    public get widgetInvoicingPeriodLabel() : string {
        return this.get(this.widgetInvoicingPeriodLabelLanguageItemName);
    }

    /**
    /* "Widget.InvoicingPeriod.Description" (Invoicing days left)
    */
    public get widgetInvoicingPeriodDescription() : string {
        return this.get(this.widgetInvoicingPeriodDescriptionLanguageItemName);
    }

    /**
    /* "Widget.SalaryPeriod.Label" (Salary period)
    */
    public get widgetSalaryPeriodLabel() : string {
        return this.get(this.widgetSalaryPeriodLabelLanguageItemName);
    }

    /**
    /* "Widget.SalaryPeriod.Description" (Salary days left)
    */
    public get widgetSalaryPeriodDescription() : string {
        return this.get(this.widgetSalaryPeriodDescriptionLanguageItemName);
    }

    /**
    /* "Widget.BudgetData.Set1Label" (Monthly rent for the last 12 months)
    */
    public get widgetBudgetDataSet1Label() : string {
        return this.get(this.widgetBudgetDataSet1LabelLanguageItemName);
    }

    /**
    /* "Widget.BudgetData.Set2Label" (Monthly rent growing the last 12 months)
    */
    public get widgetBudgetDataSet2Label() : string {
        return this.get(this.widgetBudgetDataSet2LabelLanguageItemName);
    }

    /**
    /* "Widget.BudgetData.PerimeterFrame.Label" (Perimeter frame)
    */
    public get widgetBudgetDataPerimeterFrameLabel() : string {
        return this.get(this.widgetBudgetDataPerimeterFrameLabelLanguageItemName);
    }

    /**
    /* "Widget.BudgetData.Module.Label" (Module)
    */
    public get widgetBudgetDataModuleLabel() : string {
        return this.get(this.widgetBudgetDataModuleLabelLanguageItemName);
    }

    /**
    /* "Widget.BudgetData.WeatherShelter.Label" (Weather shelter)
    */
    public get widgetBudgetDataWeatherShelterLabel() : string {
        return this.get(this.widgetBudgetDataWeatherShelterLabelLanguageItemName);
    }

    /**
    /* "Widget.MyWorkReports.Label" (My work reports)
    */
    public get widgetMyWorkReportsLabel() : string {
        return this.get(this.widgetMyWorkReportsLabelLanguageItemName);
    }

    /**
    /* "Widget.MyWorkReports.Description" (View all work reports)
    */
    public get widgetMyWorkReportsDescription() : string {
        return this.get(this.widgetMyWorkReportsDescriptionLanguageItemName);
    }

    /**
    /* "Widget.MyInvoices.Label" (My invoices)
    */
    public get widgetMyInvoicesLabel() : string {
        return this.get(this.widgetMyInvoicesLabelLanguageItemName);
    }

    /**
    /* "Widget.MyInvoices.Description" (View all invoices)
    */
    public get widgetMyInvoicesDescription() : string {
        return this.get(this.widgetMyInvoicesDescriptionLanguageItemName);
    }

    /**
    /* "Widget.MyAudits.Label" (My audits)
    */
    public get widgetMyAuditsLabel() : string {
        return this.get(this.widgetMyAuditsLabelLanguageItemName);
    }

    /**
    /* "Widget.MyAudits.Description" (View all audit reports)
    */
    public get widgetMyAuditsDescription() : string {
        return this.get(this.widgetMyAuditsDescriptionLanguageItemName);
    }

    /**
    /* "Widget.RentaLink.Label" (Renta Oy Portal)
    */
    public get widgetRentaLinkLabel() : string {
        return this.get(this.widgetRentaLinkLabelLanguageItemName);
    }

    /**
    /* "Widget.RentaLink.Description" (Local machine rental portal)
    */
    public get widgetRentaLinkDescription() : string {
        return this.get(this.widgetRentaLinkDescriptionLanguageItemName);
    }

    /**
    /* "Widget.Login.Description" (Log in\n)
    */
    public get widgetLoginDescription() : string {
        return this.get(this.widgetLoginDescriptionLanguageItemName);
    }

    /**
    /* "Validators.Email" (Email must be a proper email form)
    */
    public get validatorsEmail() : string {
        return this.get(this.validatorsEmailLanguageItemName);
    }

    /**
    /* "Validators.Password" (Password must contain at least 1 lowercase, 1 uppercase character, 1 special character and be at least 8 characters long)
    */
    public get validatorsPassword() : string {
        return this.get(this.validatorsPasswordLanguageItemName);
    }

    /**
    /* "Validators.Phone" (Incorrect phone number.)
    */
    public get validatorsPhone() : string {
        return this.get(this.validatorsPhoneLanguageItemName);
    }

    /**
    /* "Validators.Required" ({0} is required)
    */
    public get validatorsRequired() : string {
        return this.get(this.validatorsRequiredLanguageItemName);
    }

    /**
    /* "Validators.NumberRange" (Value must be in range {0} - {1}.)
    */
    public get validatorsNumberRange() : string {
        return this.get(this.validatorsNumberRangeLanguageItemName);
    }

    /**
    /* "LoginPage.LoginButton" (Login)
    */
    public get loginPageLoginButton() : string {
        return this.get(this.loginPageLoginButtonLanguageItemName);
    }

    /**
    /* "LoginPage.SsoButton" (Office 365)
    */
    public get loginPageSsoButton() : string {
        return this.get(this.loginPageSsoButtonLanguageItemName);
    }

    /**
    /* "LoginPage.ForgotPasswordButton" (Forgot password?)
    */
    public get loginPageForgotPasswordButton() : string {
        return this.get(this.loginPageForgotPasswordButtonLanguageItemName);
    }

    /**
    /* "LoginPage.EmailInput" (Email)
    */
    public get loginPageEmailInput() : string {
        return this.get(this.loginPageEmailInputLanguageItemName);
    }

    /**
    /* "Link.Expired" (Link has expired)
    */
    public get linkExpired() : string {
        return this.get(this.linkExpiredLanguageItemName);
    }

    /**
    /* "Link.Used" (Link has expired)
    */
    public get linkUsed() : string {
        return this.get(this.linkUsedLanguageItemName);
    }

    /**
    /* "ForgotPasswordPage.PageTitle" (Forgot password?)
    */
    public get forgotPasswordPagePageTitle() : string {
        return this.get(this.forgotPasswordPagePageTitleLanguageItemName);
    }

    /**
    /* "ForgotPasswordPage.SuccessMessage" (A notification has been sent to the address you provided with a link to reset your password. Continue signing in after changing your password. If you did not receive the message, please check your spam folder.)
    */
    public get forgotPasswordPageSuccessMessage() : string {
        return this.get(this.forgotPasswordPageSuccessMessageLanguageItemName);
    }

    /**
    /* "ForgotPasswordPage.FailedMessage" (A notification was not sent to the address you provided for some technical reasons.\n      Please contact administrator.)
    */
    public get forgotPasswordPageFailedMessage() : string {
        return this.get(this.forgotPasswordPageFailedMessageLanguageItemName);
    }

    /**
    /* "ForgotPasswordPage.ResetButton" (Send)
    */
    public get forgotPasswordPageResetButton() : string {
        return this.get(this.forgotPasswordPageResetButtonLanguageItemName);
    }

    /**
    /* "ForgotPasswordPage.LoginButton" (Go to login)
    */
    public get forgotPasswordPageLoginButton() : string {
        return this.get(this.forgotPasswordPageLoginButtonLanguageItemName);
    }

    /**
    /* "ForgotPasswordPage.HelpText" (No problem. Please enter your "username" and we will send you instructions on how to reset your password.)
    */
    public get forgotPasswordPageHelpText() : string {
        return this.get(this.forgotPasswordPageHelpTextLanguageItemName);
    }

    /**
    /* "ForgotPasswordPage.EmailInput" (Email)
    */
    public get forgotPasswordPageEmailInput() : string {
        return this.get(this.forgotPasswordPageEmailInputLanguageItemName);
    }

    /**
    /* "LoginPage.PasswordInput" (Password)
    */
    public get loginPagePasswordInput() : string {
        return this.get(this.loginPagePasswordInputLanguageItemName);
    }

    /**
    /* "LoginPage.Title" (Log in.)
    */
    public get loginPageTitle() : string {
        return this.get(this.loginPageTitleLanguageItemName);
    }

    /**
    /* "LoginPage.Subtitle" (Log in with your username and password.)
    */
    public get loginPageSubtitle() : string {
        return this.get(this.loginPageSubtitleLanguageItemName);
    }

    /**
    /* "Enum.LoginResultStatus.NotFound" (Invalid username or password.)
    */
    public get enumLoginResultStatusNotFound() : string {
        return this.get(this.enumLoginResultStatusNotFoundLanguageItemName);
    }

    /**
    /* "Enum.LoginResultStatus.Deleted" (Your account has been deleted. Contact support to restore your access.)
    */
    public get enumLoginResultStatusDeleted() : string {
        return this.get(this.enumLoginResultStatusDeletedLanguageItemName);
    }

    /**
    /* "Enum.LoginResultStatus.Locked" (Too many login attempts. Try again later.)
    */
    public get enumLoginResultStatusLocked() : string {
        return this.get(this.enumLoginResultStatusLockedLanguageItemName);
    }

    /**
    /* "Enum.LoginResultStatus.Security" (Your account has been locked. Contact support to restore access.)
    */
    public get enumLoginResultStatusSecurity() : string {
        return this.get(this.enumLoginResultStatusSecurityLanguageItemName);
    }

    /**
    /* "ErrorPage.Title" (Error occured)
    */
    public get errorPageTitle() : string {
        return this.get(this.errorPageTitleLanguageItemName);
    }

    /**
    /* "ErrorPage.ErrorMessage" (If this happens again, contact support.)
    */
    public get errorPageErrorMessage() : string {
        return this.get(this.errorPageErrorMessageLanguageItemName);
    }

    /**
    /* "ErrorPage.ContactSupport" (Contact support)
    */
    public get errorPageContactSupport() : string {
        return this.get(this.errorPageContactSupportLanguageItemName);
    }

    /**
    /* "ContactSupportPage.Title" (Message to support team)
    */
    public get contactSupportPageTitle() : string {
        return this.get(this.contactSupportPageTitleLanguageItemName);
    }

    /**
    /* "Form.Input.Email" (Email)
    */
    public get formInputEmail() : string {
        return this.get(this.formInputEmailLanguageItemName);
    }

    /**
    /* "Form.Input.ReceiverEmail" (Receiver email)
    */
    public get formInputReceiverEmail() : string {
        return this.get(this.formInputReceiverEmailLanguageItemName);
    }

    /**
    /* "Form.Input.Phone" (Phone number)
    */
    public get formInputPhone() : string {
        return this.get(this.formInputPhoneLanguageItemName);
    }

    /**
    /* "Form.Input.Firstname" (Firstname)
    */
    public get formInputFirstname() : string {
        return this.get(this.formInputFirstnameLanguageItemName);
    }

    /**
    /* "Form.Input.Middlename" (Middle name)
    */
    public get formInputMiddlename() : string {
        return this.get(this.formInputMiddlenameLanguageItemName);
    }

    /**
    /* "Form.Input.Lastname" (Lastname)
    */
    public get formInputLastname() : string {
        return this.get(this.formInputLastnameLanguageItemName);
    }

    /**
    /* "Form.Input.Message" (Message)
    */
    public get formInputMessage() : string {
        return this.get(this.formInputMessageLanguageItemName);
    }

    /**
    /* "Form.Input.Address" (Address)
    */
    public get formInputAddress() : string {
        return this.get(this.formInputAddressLanguageItemName);
    }

    /**
    /* "Form.Input.Street" (Street)
    */
    public get formInputStreet() : string {
        return this.get(this.formInputStreetLanguageItemName);
    }

    /**
    /* "Form.Input.City" (City)
    */
    public get formInputCity() : string {
        return this.get(this.formInputCityLanguageItemName);
    }

    /**
    /* "Form.Input.Postalcode" (Postal code)
    */
    public get formInputPostalcode() : string {
        return this.get(this.formInputPostalcodeLanguageItemName);
    }

    /**
    /* "Form.Input.Postalbox" (Postal box)
    */
    public get formInputPostalbox() : string {
        return this.get(this.formInputPostalboxLanguageItemName);
    }

    /**
    /* "Form.Input.Language" (Language)
    */
    public get formInputLanguage() : string {
        return this.get(this.formInputLanguageLanguageItemName);
    }

    /**
    /* "Form.Input.EmployeeNumber" (Employee number)
    */
    public get formInputEmployeeNumber() : string {
        return this.get(this.formInputEmployeeNumberLanguageItemName);
    }

    /**
    /* "Form.Input.CostPool" (Cost pool)
    */
    public get formInputCostPool() : string {
        return this.get(this.formInputCostPoolLanguageItemName);
    }

    /**
    /* "Form.Input.WorkCardId" (Work card id)
    */
    public get formInputWorkCardId() : string {
        return this.get(this.formInputWorkCardIdLanguageItemName);
    }

    /**
    /* "Form.Input.TimeTrackingDeviceId" (Time tracking device id)
    */
    public get formInputTimeTrackingDeviceId() : string {
        return this.get(this.formInputTimeTrackingDeviceIdLanguageItemName);
    }

    /**
    /* "Form.Input.ContractSalaryHourlyPrice" (Contract salary hourly price)
    */
    public get formInputContractSalaryHourlyPrice() : string {
        return this.get(this.formInputContractSalaryHourlyPriceLanguageItemName);
    }

    /**
    /* "Form.Input.Role" (Role)
    */
    public get formInputRole() : string {
        return this.get(this.formInputRoleLanguageItemName);
    }

    /**
    /* "Form.Send" (Send)
    */
    public get formSend() : string {
        return this.get(this.formSendLanguageItemName);
    }

    /**
    /* "Form.Save" (Save)
    */
    public get formSave() : string {
        return this.get(this.formSaveLanguageItemName);
    }

    /**
    /* "Component.Dropdown.NoItems" (No items found)
    */
    public get componentDropdownNoItems() : string {
        return this.get(this.componentDropdownNoItemsLanguageItemName);
    }

    /**
    /* "Component.Dropdown.NoData" (No data)
    */
    public get componentDropdownNoData() : string {
        return this.get(this.componentDropdownNoDataLanguageItemName);
    }

    /**
    /* "Component.Dropdown.FilterResults" (Filter results)
    */
    public get componentDropdownFilterResults() : string {
        return this.get(this.componentDropdownFilterResultsLanguageItemName);
    }

    /**
    /* "Component.Dropdown.GetResults" (Start typing to get results)
    */
    public get componentDropdownGetResults() : string {
        return this.get(this.componentDropdownGetResultsLanguageItemName);
    }

    /**
    /* "Component.Dropdown.Add" (Add)
    */
    public get componentDropdownAdd() : string {
        return this.get(this.componentDropdownAddLanguageItemName);
    }

    /**
    /* "TopNav.ContactSupport" (Support)
    */
    public get topNavContactSupport() : string {
        return this.get(this.topNavContactSupportLanguageItemName);
    }

    /**
    /* "TopNav.WorkOrders" (Work orders)
    */
    public get topNavWorkOrders() : string {
        return this.get(this.topNavWorkOrdersLanguageItemName);
    }

    /**
    /* "DayOfWeek.Sunday" (Sunday)
    */
    public get dayOfWeekSunday() : string {
        return this.get(this.dayOfWeekSundayLanguageItemName);
    }

    /**
    /* "DayOfWeek.Monday" (Monday)
    */
    public get dayOfWeekMonday() : string {
        return this.get(this.dayOfWeekMondayLanguageItemName);
    }

    /**
    /* "DayOfWeek.Tuesday" (Tuesday)
    */
    public get dayOfWeekTuesday() : string {
        return this.get(this.dayOfWeekTuesdayLanguageItemName);
    }

    /**
    /* "DayOfWeek.Wednesday" (Wednesday)
    */
    public get dayOfWeekWednesday() : string {
        return this.get(this.dayOfWeekWednesdayLanguageItemName);
    }

    /**
    /* "DayOfWeek.Thursday" (Thursday)
    */
    public get dayOfWeekThursday() : string {
        return this.get(this.dayOfWeekThursdayLanguageItemName);
    }

    /**
    /* "DayOfWeek.Friday" (Friday)
    */
    public get dayOfWeekFriday() : string {
        return this.get(this.dayOfWeekFridayLanguageItemName);
    }

    /**
    /* "DayOfWeek.Saturday" (Saturday)
    */
    public get dayOfWeekSaturday() : string {
        return this.get(this.dayOfWeekSaturdayLanguageItemName);
    }

    /**
    /* "RentaTasks.Dashboard.QRCode" (QR code)
    */
    public get rentaTasksDashboardQRCode() : string {
        return this.get(this.rentaTasksDashboardQRCodeLanguageItemName);
    }

    /**
    /* "RentaTasks.Dashboard.QRCodeDescription" (Scan QR code to select construction site)
    */
    public get rentaTasksDashboardQRCodeDescription() : string {
        return this.get(this.rentaTasksDashboardQRCodeDescriptionLanguageItemName);
    }

    /**
    /* "RentaTasks.Dashboard.CheckIn" (Check-in)
    */
    public get rentaTasksDashboardCheckIn() : string {
        return this.get(this.rentaTasksDashboardCheckInLanguageItemName);
    }

    /**
    /* "RentaTasks.Approve.DropdownWidget.TasksToCombine" (Press to select tasks to combine)
    */
    public get rentaTasksApproveDropdownWidgetTasksToCombine() : string {
        return this.get(this.rentaTasksApproveDropdownWidgetTasksToCombineLanguageItemName);
    }

    /**
    /* "RentaTasks.Approve.DropdownWidget.TasksCombined" ({0} tasks combined to the work report)
    */
    public get rentaTasksApproveDropdownWidgetTasksCombined() : string {
        return this.get(this.rentaTasksApproveDropdownWidgetTasksCombinedLanguageItemName);
    }

    /**
    /* "RentaTasks.Signature.Alert" (Work report has been sent to a customer)
    */
    public get rentaTasksSignatureAlert() : string {
        return this.get(this.rentaTasksSignatureAlertLanguageItemName);
    }

    /**
    /* "RentaTasks.SelectTask.MyTasks" (My tasks)
    */
    public get rentaTasksSelectTaskMyTasks() : string {
        return this.get(this.rentaTasksSelectTaskMyTasksLanguageItemName);
    }

    /**
    /* "RentaTasks.SelectTask.NotAssigned" (Not assigned)
    */
    public get rentaTasksSelectTaskNotAssigned() : string {
        return this.get(this.rentaTasksSelectTaskNotAssignedLanguageItemName);
    }

    /**
    /* "RentaTasks.SelectOrganization.NoOrganizations" (No organizations available)
    */
    public get rentaTasksSelectOrganizationNoOrganizations() : string {
        return this.get(this.rentaTasksSelectOrganizationNoOrganizationsLanguageItemName);
    }

    /**
    /* "RentaTasks.SelectSite.NotFound" (Construction site not found or qr code cannot be recognized)
    */
    public get rentaTasksSelectSiteNotFound() : string {
        return this.get(this.rentaTasksSelectSiteNotFoundLanguageItemName);
    }

    /**
    /* "RentaTasks.SelectSite.NoAvailableSites" (No construction sites available for selected company)
    */
    public get rentaTasksSelectSiteNoAvailableSites() : string {
        return this.get(this.rentaTasksSelectSiteNoAvailableSitesLanguageItemName);
    }

    /**
    /* "RentaTasks.AssignMounter.DropdownWidget.AssignMounters" (Assign the task to the mounters)
    */
    public get rentaTasksAssignMounterDropdownWidgetAssignMounters() : string {
        return this.get(this.rentaTasksAssignMounterDropdownWidgetAssignMountersLanguageItemName);
    }

    /**
    /* "RentaTasks.AssignMounter.DropdownWidget.MountersAssigned" ({0} mounter(s) assigned to the task)
    */
    public get rentaTasksAssignMounterDropdownWidgetMountersAssigned() : string {
        return this.get(this.rentaTasksAssignMounterDropdownWidgetMountersAssignedLanguageItemName);
    }

    /**
    /* "RentaTasks.AddEquipment.DropdownWidget.NoEquipment" (No equipment)
    */
    public get rentaTasksAddEquipmentDropdownWidgetNoEquipment() : string {
        return this.get(this.rentaTasksAddEquipmentDropdownWidgetNoEquipmentLanguageItemName);
    }

    /**
    /* "RentaTasks.AddEquipment.DropdownWidget.SpecifyAmount" ({0} position(s), you can specify amount of equipment)
    */
    public get rentaTasksAddEquipmentDropdownWidgetSpecifyAmount() : string {
        return this.get(this.rentaTasksAddEquipmentDropdownWidgetSpecifyAmountLanguageItemName);
    }

    /**
    /* "RentaTasks.AddEquipment.Manual" (Add equipment to the selected task, swipe or press next if you do not have additional equipments to add.)
    */
    public get rentaTasksAddEquipmentManual() : string {
        return this.get(this.rentaTasksAddEquipmentManualLanguageItemName);
    }

    /**
    /* "RentaTasks.AddTask.Manual" (Create a new task on the construction site.\nSpecify task name (click on widget to start editing) etc.)
    */
    public get rentaTasksAddTaskManual() : string {
        return this.get(this.rentaTasksAddTaskManualLanguageItemName);
    }

    /**
    /* "RentaTasks.Controller.Steps.Title.SelectSite" (Select site)
    */
    public get rentaTasksControllerStepsTitleSelectSite() : string {
        return this.get(this.rentaTasksControllerStepsTitleSelectSiteLanguageItemName);
    }

    /**
    /* "RentaTasks.Controller.Steps.Title.SelectOrganization" (Select client)
    */
    public get rentaTasksControllerStepsTitleSelectOrganization() : string {
        return this.get(this.rentaTasksControllerStepsTitleSelectOrganizationLanguageItemName);
    }

    /**
    /* "RentaTasks.Controller.Steps.Title.SelectTask" (Select task)
    */
    public get rentaTasksControllerStepsTitleSelectTask() : string {
        return this.get(this.rentaTasksControllerStepsTitleSelectTaskLanguageItemName);
    }

    /**
    /* "RentaTasks.Controller.Steps.Title.Allowance" (Allowance)
    */
    public get rentaTasksControllerStepsTitleAllowance() : string {
        return this.get(this.rentaTasksControllerStepsTitleAllowanceLanguageItemName);
    }

    /**
    /* "RentaTasks.Controller.Steps.Title.Distance" (Distance)
    */
    public get rentaTasksControllerStepsTitleDistance() : string {
        return this.get(this.rentaTasksControllerStepsTitleDistanceLanguageItemName);
    }

    /**
    /* "RentaTasks.Controller.Steps.Title.TaskStatus" (Task status)
    */
    public get rentaTasksControllerStepsTitleTaskStatus() : string {
        return this.get(this.rentaTasksControllerStepsTitleTaskStatusLanguageItemName);
    }

    /**
    /* "RentaTasks.Controller.Steps.Title.Equipment" (Equipment)
    */
    public get rentaTasksControllerStepsTitleEquipment() : string {
        return this.get(this.rentaTasksControllerStepsTitleEquipmentLanguageItemName);
    }

    /**
    /* "RentaTasks.Controller.Steps.Title.Approve" (Approve)
    */
    public get rentaTasksControllerStepsTitleApprove() : string {
        return this.get(this.rentaTasksControllerStepsTitleApproveLanguageItemName);
    }

    /**
    /* "RentaTasks.Controller.Steps.Title.Signature" (Signature)
    */
    public get rentaTasksControllerStepsTitleSignature() : string {
        return this.get(this.rentaTasksControllerStepsTitleSignatureLanguageItemName);
    }

    /**
    /* "RentaTasks.Controller.Steps.Title.NewTask" (New task)
    */
    public get rentaTasksControllerStepsTitleNewTask() : string {
        return this.get(this.rentaTasksControllerStepsTitleNewTaskLanguageItemName);
    }

    /**
    /* "RentaTasks.Controller.Steps.Title.Mounters" (Mounters)
    */
    public get rentaTasksControllerStepsTitleMounters() : string {
        return this.get(this.rentaTasksControllerStepsTitleMountersLanguageItemName);
    }

    /**
    /* "RentaManagement.SummaryPage.Manual" (Renta Task 1.0.\nSummary wizard step.)
    */
    public get rentaManagementSummaryPageManual() : string {
        return this.get(this.rentaManagementSummaryPageManualLanguageItemName);
    }

    /**
    /* "RentaManagement.SummaryPage.Description" (Click on step for additional info.)
    */
    public get rentaManagementSummaryPageDescription() : string {
        return this.get(this.rentaManagementSummaryPageDescriptionLanguageItemName);
    }

    /**
    /* "RentaManagement.SummaryPage.Button.Title" (Complete)
    */
    public get rentaManagementSummaryPageButtonTitle() : string {
        return this.get(this.rentaManagementSummaryPageButtonTitleLanguageItemName);
    }

    /**
    /* "RentaManagement.SelectModule.NoModules" (No site modules available for selected site and agreement.)
    */
    public get rentaManagementSelectModuleNoModules() : string {
        return this.get(this.rentaManagementSelectModuleNoModulesLanguageItemName);
    }

    /**
    /* "RentaManagement.SelectModule.Description" (Press to select module)
    */
    public get rentaManagementSelectModuleDescription() : string {
        return this.get(this.rentaManagementSelectModuleDescriptionLanguageItemName);
    }

    /**
    /* "RentaManagement.SelectModule.Manual" (Select a site module you are going to work on from dropdown menu by pressing on module widget.)
    */
    public get rentaManagementSelectModuleManual() : string {
        return this.get(this.rentaManagementSelectModuleManualLanguageItemName);
    }

    /**
    /* "RentaManagement.SelectSite.NoSiteWithModules" (No active construction sites with active agreement and existing modules.)
    */
    public get rentaManagementSelectSiteNoSiteWithModules() : string {
        return this.get(this.rentaManagementSelectSiteNoSiteWithModulesLanguageItemName);
    }

    /**
    /* "RentaManagement.SelectAgreement.NoAgreement" (No active agreements with existing modules available for selected site.)
    */
    public get rentaManagementSelectAgreementNoAgreement() : string {
        return this.get(this.rentaManagementSelectAgreementNoAgreementLanguageItemName);
    }

    /**
    /* "RentaManagement.SelectAgreement.Manual" (Select a site agreement you are going to work on from dropdown menu by pressing on Agreement widget)
    */
    public get rentaManagementSelectAgreementManual() : string {
        return this.get(this.rentaManagementSelectAgreementManualLanguageItemName);
    }

    /**
    /* "RentaManagement.SelectAgreement.Description" (Press to select agreement)
    */
    public get rentaManagementSelectAgreementDescription() : string {
        return this.get(this.rentaManagementSelectAgreementDescriptionLanguageItemName);
    }

    /**
    /* "RentaManagement.SaveAudit.Sent" (Audit report has been sent to customer.)
    */
    public get rentaManagementSaveAuditSent() : string {
        return this.get(this.rentaManagementSaveAuditSentLanguageItemName);
    }

    /**
    /* "RentaManagement.SaveAudit.Manual" (Audit module.\nPress "Activate" button.\nIt will create and activate audit for corresponding task.\nTask marked as splitted cannot be audited.)
    */
    public get rentaManagementSaveAuditManual() : string {
        return this.get(this.rentaManagementSaveAuditManualLanguageItemName);
    }

    /**
    /* "RentaManagement.Dashboard.Manual" (\nWelcome to Renta Management dashboard.\n        \nPress "Activate module" to activate a scaffolding module on a construction site.\n\nPress "Audit module" to inspect a scaffolding module on a construction site.\n\nPress "Add task" to create new extra task for a construction site.\n    )
    */
    public get rentaManagementDashboardManual() : string {
        return this.get(this.rentaManagementDashboardManualLanguageItemName);
    }

    /**
    /* "RentaManagement.Dashboard.Activate" (Activate module)
    */
    public get rentaManagementDashboardActivate() : string {
        return this.get(this.rentaManagementDashboardActivateLanguageItemName);
    }

    /**
    /* "RentaManagement.Dashboard.Activate.Description" (Activate construction site contract tasks)
    */
    public get rentaManagementDashboardActivateDescription() : string {
        return this.get(this.rentaManagementDashboardActivateDescriptionLanguageItemName);
    }

    /**
    /* "RentaManagement.Dashboard.Audit" (Audit module)
    */
    public get rentaManagementDashboardAudit() : string {
        return this.get(this.rentaManagementDashboardAuditLanguageItemName);
    }

    /**
    /* "RentaManagement.Dashboard.Audit.Description" (Audit construction site module)
    */
    public get rentaManagementDashboardAuditDescription() : string {
        return this.get(this.rentaManagementDashboardAuditDescriptionLanguageItemName);
    }

    /**
    /* "RentaManagement.Dashboard.AddTask" (Add task)
    */
    public get rentaManagementDashboardAddTask() : string {
        return this.get(this.rentaManagementDashboardAddTaskLanguageItemName);
    }

    /**
    /* "RentaManagement.Dashboard.AddTask.Description" (Create new task)
    */
    public get rentaManagementDashboardAddTaskDescription() : string {
        return this.get(this.rentaManagementDashboardAddTaskDescriptionLanguageItemName);
    }

    /**
    /* "RentaManagement.AuditParams4.Highest" (Highest level, m)
    */
    public get rentaManagementAuditParams4Highest() : string {
        return this.get(this.rentaManagementAuditParams4HighestLanguageItemName);
    }

    /**
    /* "RentaManagement.AuditParams4.Spacing" (Level spacing, m)
    */
    public get rentaManagementAuditParams4Spacing() : string {
        return this.get(this.rentaManagementAuditParams4SpacingLanguageItemName);
    }

    /**
    /* "RentaManagement.AuditParams3.Snowload" (Snow load max, kN [0..1])
    */
    public get rentaManagementAuditParams3Snowload() : string {
        return this.get(this.rentaManagementAuditParams3SnowloadLanguageItemName);
    }

    /**
    /* "RentaManagement.AuditParams3.Windload" (Wind load max, kN [0..1])
    */
    public get rentaManagementAuditParams3Windload() : string {
        return this.get(this.rentaManagementAuditParams3WindloadLanguageItemName);
    }

    /**
    /* "RentaManagement.AuditParams3.WeatherShelter" (Weather shelter, m²)
    */
    public get rentaManagementAuditParams3WeatherShelter() : string {
        return this.get(this.rentaManagementAuditParams3WeatherShelterLanguageItemName);
    }

    /**
    /* "RentaManagement.AuditParams2.LoadClass" (Scaffolding load class)
    */
    public get rentaManagementAuditParams2LoadClass() : string {
        return this.get(this.rentaManagementAuditParams2LoadClassLanguageItemName);
    }

    /**
    /* "RentaManagement.AuditParams2.Types" (Scaffolding type(s))
    */
    public get rentaManagementAuditParams2Types() : string {
        return this.get(this.rentaManagementAuditParams2TypesLanguageItemName);
    }

    /**
    /* "RentaManagement.AuditParams2.Guides" (Scaffolding guide(s))
    */
    public get rentaManagementAuditParams2Guides() : string {
        return this.get(this.rentaManagementAuditParams2GuidesLanguageItemName);
    }

    /**
    /* "RentaManagement.AuditParams2.Custom" (Custom guide)
    */
    public get rentaManagementAuditParams2Custom() : string {
        return this.get(this.rentaManagementAuditParams2CustomLanguageItemName);
    }

    /**
    /* "RentaManagement.AuditParams1.Auditor" (Auditor (plannings))
    */
    public get rentaManagementAuditParams1Auditor() : string {
        return this.get(this.rentaManagementAuditParams1AuditorLanguageItemName);
    }

    /**
    /* "RentaManagement.AuditParams1.AuditDate" (Audit date)
    */
    public get rentaManagementAuditParams1AuditDate() : string {
        return this.get(this.rentaManagementAuditParams1AuditDateLanguageItemName);
    }

    /**
    /* "RentaManagement.AuditParams1.HandoverDate" (Handover date)
    */
    public get rentaManagementAuditParams1HandoverDate() : string {
        return this.get(this.rentaManagementAuditParams1HandoverDateLanguageItemName);
    }

    /**
    /* "RentaManagement.AuditModule.Heading.Id" (Module id:)
    */
    public get rentaManagementAuditModuleHeadingId() : string {
        return this.get(this.rentaManagementAuditModuleHeadingIdLanguageItemName);
    }

    /**
    /* "RentaManagement.AuditModule.Heading.Name" (Module name:)
    */
    public get rentaManagementAuditModuleHeadingName() : string {
        return this.get(this.rentaManagementAuditModuleHeadingNameLanguageItemName);
    }

    /**
    /* "RentaManagement.AuditModule.Heading.Type" (Module type:)
    */
    public get rentaManagementAuditModuleHeadingType() : string {
        return this.get(this.rentaManagementAuditModuleHeadingTypeLanguageItemName);
    }

    /**
    /* "RentaManagement.AuditModule.Heading.Assembly" (Assembly task:)
    */
    public get rentaManagementAuditModuleHeadingAssembly() : string {
        return this.get(this.rentaManagementAuditModuleHeadingAssemblyLanguageItemName);
    }

    /**
    /* "RentaManagement.AuditModule.Heading.AuditDate" (Audit date:)
    */
    public get rentaManagementAuditModuleHeadingAuditDate() : string {
        return this.get(this.rentaManagementAuditModuleHeadingAuditDateLanguageItemName);
    }

    /**
    /* "RentaManagement.AuditModule.Heading.AuditResult" (Audit result:)
    */
    public get rentaManagementAuditModuleHeadingAuditResult() : string {
        return this.get(this.rentaManagementAuditModuleHeadingAuditResultLanguageItemName);
    }

    /**
    /* "RentaManagement.AuditModule.Heading.AuditApproving" (Audit approving:)
    */
    public get rentaManagementAuditModuleHeadingAuditApproving() : string {
        return this.get(this.rentaManagementAuditModuleHeadingAuditApprovingLanguageItemName);
    }

    /**
    /* "RentaManagement.AuditModule.Heading.AuditSent" (Audit sent:)
    */
    public get rentaManagementAuditModuleHeadingAuditSent() : string {
        return this.get(this.rentaManagementAuditModuleHeadingAuditSentLanguageItemName);
    }

    /**
    /* "RentaManagement.Controller.Steps.Title.SelectSite" (Select site)
    */
    public get rentaManagementControllerStepsTitleSelectSite() : string {
        return this.get(this.rentaManagementControllerStepsTitleSelectSiteLanguageItemName);
    }

    /**
    /* "RentaManagement.Controller.Steps.Title.SelectAgreement" (Select agreement)
    */
    public get rentaManagementControllerStepsTitleSelectAgreement() : string {
        return this.get(this.rentaManagementControllerStepsTitleSelectAgreementLanguageItemName);
    }

    /**
    /* "RentaManagement.Controller.Steps.Title.SelectModule" (Select module)
    */
    public get rentaManagementControllerStepsTitleSelectModule() : string {
        return this.get(this.rentaManagementControllerStepsTitleSelectModuleLanguageItemName);
    }

    /**
    /* "RentaManagement.Controller.Steps.Title.Audit" (Audit)
    */
    public get rentaManagementControllerStepsTitleAudit() : string {
        return this.get(this.rentaManagementControllerStepsTitleAuditLanguageItemName);
    }

    /**
    /* "RentaManagement.Controller.Steps.Title.Date" (Date)
    */
    public get rentaManagementControllerStepsTitleDate() : string {
        return this.get(this.rentaManagementControllerStepsTitleDateLanguageItemName);
    }

    /**
    /* "RentaManagement.Controller.Steps.Title.Guide" (Guide)
    */
    public get rentaManagementControllerStepsTitleGuide() : string {
        return this.get(this.rentaManagementControllerStepsTitleGuideLanguageItemName);
    }

    /**
    /* "RentaManagement.Controller.Steps.Title.Params" (Params)
    */
    public get rentaManagementControllerStepsTitleParams() : string {
        return this.get(this.rentaManagementControllerStepsTitleParamsLanguageItemName);
    }

    /**
    /* "RentaManagement.Controller.Steps.Title.Check" (Check)
    */
    public get rentaManagementControllerStepsTitleCheck() : string {
        return this.get(this.rentaManagementControllerStepsTitleCheckLanguageItemName);
    }

    /**
    /* "RentaManagement.Controller.Steps.Title.Summary" (Summary)
    */
    public get rentaManagementControllerStepsTitleSummary() : string {
        return this.get(this.rentaManagementControllerStepsTitleSummaryLanguageItemName);
    }

    /**
    /* "RentaManagement.Controller.Steps.Title.SaveAudit" (Save audit)
    */
    public get rentaManagementControllerStepsTitleSaveAudit() : string {
        return this.get(this.rentaManagementControllerStepsTitleSaveAuditLanguageItemName);
    }

    /**
    /* "RentaManagement.Controller.Question.Foundation" (Foundation)
    */
    public get rentaManagementControllerQuestionFoundation() : string {
        return this.get(this.rentaManagementControllerQuestionFoundationLanguageItemName);
    }

    /**
    /* "RentaManagement.Controller.Question.Uprights" (Uprights)
    */
    public get rentaManagementControllerQuestionUprights() : string {
        return this.get(this.rentaManagementControllerQuestionUprightsLanguageItemName);
    }

    /**
    /* "RentaManagement.Controller.Question.BindingsAndSupporters" (Horizontal bindings and supporters)
    */
    public get rentaManagementControllerQuestionBindingsAndSupporters() : string {
        return this.get(this.rentaManagementControllerQuestionBindingsAndSupportersLanguageItemName);
    }

    /**
    /* "RentaManagement.Controller.Question.SideEndBindings" (Side and end binding)
    */
    public get rentaManagementControllerQuestionSideEndBindings() : string {
        return this.get(this.rentaManagementControllerQuestionSideEndBindingsLanguageItemName);
    }

    /**
    /* "RentaManagement.Controller.Question.Anchorage" (Anchorage)
    */
    public get rentaManagementControllerQuestionAnchorage() : string {
        return this.get(this.rentaManagementControllerQuestionAnchorageLanguageItemName);
    }

    /**
    /* "RentaManagement.Controller.Question.CounterTops" (Counter tops)
    */
    public get rentaManagementControllerQuestionCounterTops() : string {
        return this.get(this.rentaManagementControllerQuestionCounterTopsLanguageItemName);
    }

    /**
    /* "RentaManagement.Controller.Question.SafetyBarriers" (Safety barriers)
    */
    public get rentaManagementControllerQuestionSafetyBarriers() : string {
        return this.get(this.rentaManagementControllerQuestionSafetyBarriersLanguageItemName);
    }

    /**
    /* "RentaManagement.Controller.Question.AscentWays" (Ascent ways)
    */
    public get rentaManagementControllerQuestionAscentWays() : string {
        return this.get(this.rentaManagementControllerQuestionAscentWaysLanguageItemName);
    }

    /**
    /* "RentaManagement.Controller.Question.AuditCard" (Scaffolding audit card)
    */
    public get rentaManagementControllerQuestionAuditCard() : string {
        return this.get(this.rentaManagementControllerQuestionAuditCardLanguageItemName);
    }

    /**
    /* "RentaManagement.Controller.Question.Covers" (Scaffolding covers)
    */
    public get rentaManagementControllerQuestionCovers() : string {
        return this.get(this.rentaManagementControllerQuestionCoversLanguageItemName);
    }

    /**
    /* "Enum.DailyAllowance.Meal" (AK)
    */
    public get enumDailyAllowanceMeal() : string {
        return this.get(this.enumDailyAllowanceMealLanguageItemName);
    }

    /**
    /* "Enum.DailyAllowance.Meal.Description" (Full day with \nmeal)
    */
    public get enumDailyAllowanceMealDescription() : string {
        return this.get(this.enumDailyAllowanceMealDescriptionLanguageItemName);
    }

    /**
    /* "Enum.DailyAllowance.Day" (1)
    */
    public get enumDailyAllowanceDay() : string {
        return this.get(this.enumDailyAllowanceDayLanguageItemName);
    }

    /**
    /* "Enum.DailyAllowance.Day.Description" (Full day)
    */
    public get enumDailyAllowanceDayDescription() : string {
        return this.get(this.enumDailyAllowanceDayDescriptionLanguageItemName);
    }

    /**
    /* "Enum.DailyAllowance.HalfDay" (1/2)
    */
    public get enumDailyAllowanceHalfDay() : string {
        return this.get(this.enumDailyAllowanceHalfDayLanguageItemName);
    }

    /**
    /* "Enum.DailyAllowance.HalfDay.Description" (Half of the day)
    */
    public get enumDailyAllowanceHalfDayDescription() : string {
        return this.get(this.enumDailyAllowanceHalfDayDescriptionLanguageItemName);
    }

    /**
    /* "Component.Dropdown.NothingSelected" (Nothing is selected)
    */
    public get componentDropdownNothingSelected() : string {
        return this.get(this.componentDropdownNothingSelectedLanguageItemName);
    }

    /**
    /* "Component.Dropdown.MultipleSelected" ({0} selected)
    */
    public get componentDropdownMultipleSelected() : string {
        return this.get(this.componentDropdownMultipleSelectedLanguageItemName);
    }

    /**
    /* "Dropdown.Group.Warehouses" (Warehouses)
    */
    public get dropdownGroupWarehouses() : string {
        return this.get(this.dropdownGroupWarehousesLanguageItemName);
    }

    /**
    /* "Dropdown.Group.ConstructionSites" (Construction sites)
    */
    public get dropdownGroupConstructionSites() : string {
        return this.get(this.dropdownGroupConstructionSitesLanguageItemName);
    }

    /**
    /* "RentaTasks.Dashboard.SignIn" (Sign-in)
    */
    public get rentaTasksDashboardSignIn() : string {
        return this.get(this.rentaTasksDashboardSignInLanguageItemName);
    }

    /**
    /* "RentaTasks.Dashboard.SignOut" (Sign-out)
    */
    public get rentaTasksDashboardSignOut() : string {
        return this.get(this.rentaTasksDashboardSignOutLanguageItemName);
    }

    /**
    /* "MyAccountPage.Title" (My account)
    */
    public get myAccountPageTitle() : string {
        return this.get(this.myAccountPageTitleLanguageItemName);
    }

    /**
    /* "MyAccountPage.Subtitle" ( )
    */
    public get myAccountPageSubtitle() : string {
        return this.get(this.myAccountPageSubtitleLanguageItemName);
    }

    /**
    /* "MyAccountPage.MyInfoTabTitle" (My info)
    */
    public get myAccountPageMyInfoTabTitle() : string {
        return this.get(this.myAccountPageMyInfoTabTitleLanguageItemName);
    }

    /**
    /* "MyAccountPage.DataSaved" (Account information updated successfully)
    */
    public get myAccountPageDataSaved() : string {
        return this.get(this.myAccountPageDataSavedLanguageItemName);
    }

    /**
    /* "MyAccountPage.MyDocumentsTabTitle" (My documents)
    */
    public get myAccountPageMyDocumentsTabTitle() : string {
        return this.get(this.myAccountPageMyDocumentsTabTitleLanguageItemName);
    }

    /**
    /* "MyAccountPage.Acceptance" (I have read and accept)
    */
    public get myAccountPageAcceptance() : string {
        return this.get(this.myAccountPageAcceptanceLanguageItemName);
    }

    /**
    /* "MyAccountPage.Acceptance.Required" (You must accept terms of usage and privacy notice in order to use application)
    */
    public get myAccountPageAcceptanceRequired() : string {
        return this.get(this.myAccountPageAcceptanceRequiredLanguageItemName);
    }

    /**
    /* "MyAccountPage.Acceptance.Terms" (terms of use)
    */
    public get myAccountPageAcceptanceTerms() : string {
        return this.get(this.myAccountPageAcceptanceTermsLanguageItemName);
    }

    /**
    /* "MyAccountPage.Acceptance.Terms.Title" (RENTA TASK-APPLICATIONS TERMS OF SERVICE)
    */
    public get myAccountPageAcceptanceTermsTitle() : string {
        return this.get(this.myAccountPageAcceptanceTermsTitleLanguageItemName);
    }

    /**
    /* "MyAccountPage.Acceptance.Terms.Content" (1	Common\n\nThe Renta Task Application (the “Application”) is owned and provided by Renta Group Oy (“Renta”).\n\nBy installing the Application and / or using the Application, the Registered Customer or the Unregistered User agrees to these Terms of Use (the "Terms of Use"). If the Registered Customer or the Unregistered User does not accept these Terms of Use, the Registered Customer or the Unregistered User does not have the right to install, open or use the application.\n\nRenta reserves the right to change these Terms of Use at any time without notice. A registered Customer or an Unregistered User shall be deemed to have accepted the updated Terms of Use by using the application after the change to the Terms of Use.\n\n2.	Renta Task application\n\nThe application is for Rentan Employees (Registered Users) and Registered Customers. It is possible to use the application either as an employee of Renta (Registered User) or alternatively as a registered Customer with a customer-specific license ("Registered Customer").\n\n2.1	Registered Customers.\nRegistering as a Customer requires an existing customer relationship with Renta. Renta has the right not to accept the registration and to revoke the license of the application.\n\nThe Registered Customer has the opportunity to view and approve work reports and invoicing for his construction sites through the application.\n\n2.2	Registered Users\nRegistration for the Application requires an existing employment relationship with Renta. Renta has the right not to accept the registration and to revoke the license of the application.\n\nThe Registered User has the opportunity to perform the actions required for work control through the application.\n\nTo ensure the proper operation of the application, the Registered Customer and the Registered User must ensure that they have the latest version of the application.\n\n3.	Product range and price list\n\nThe product range presented in the application corresponds to Renta's normal product range. Product range, product availability and price information may vary from location to location. Prices do not include VAT unless stated otherwise. VAT will be added to the rates upon invoicing.\n\nCustomer-specific price information for contract customers is presented in the Application. The presentation of prices may be limited by access rights.\n\nRenta is not responsible for any errors, omissions or other defects in the price and product information or other material presented in the Application.\n\n4.	Customer-Specific Work Reports\n\n4.1	Generation of a customer-specific work report\nThe work performed by the Registered Users on behalf of the customer forms a work report for the system.\n\n4.2	Processing a customer-specific work report\nThe Registered Customer has the opportunity to view the work reports concerning him or her and to accept and reject the work reports of the work performed. Renta has the right to invoice the work in accordance with the approved work report.\n\n5.	Customer-specific invoices\n\n5.1	Viewing Customer-Specific Invoices\nIt is possible for a registered Customer to view invoices concerning him in the application. Any incorrect invoices must be reclamed in accordance with Renta's instructions.\n\n6.	Intellectual Property Rights\n\nThe application and its content, including e.g. trademarks, trade names, product information and images are the property of Renta and / or its partners, which are protected by e.g. copyright law and international intellectual property agreements. All rights to the Application and its content are reserved. It is expressly stated that the Registered Customer or the Registered User may not sublicense, rent, transfer or otherwise distribute the Application or its rights to use the Application except as permitted in these Terms of Use.\n\nThe Registered Customer or the Registered User shall not have the right to change, modify, delete, copy, publish, make available to the public or transfer any intellectual property rights. Your right to use the application is limited to your use in accordance with these Terms of Use.\n\n7.	Permissions and access rights\n\nThe Registered Customer accepts as binding all measures taken through the Application with the registered Customer's credentials or by or on behalf of the Registered Customer. The use of Registered Customer credentials in the Application corresponds to the Registered Customer's signature.\n\nThe Registered Customer is obliged to keep the credentials carefully stored. If the Registered Customer suspects that the credentials have been forced to possession of a third party, the Registered Customer shall immediately inform the contact person of Renta about the situation. The contact person deletes the old credentials and opens the new ones. The Registered Customer is responsible for all orders placed with his / her username and for any damages that may result from compromising the credentials.\n\n8.	Rentan's responsibility\n\nThe application and its contents are provided to the Registered Customer and the Registered User “as is”. Renta is not responsible for any errors, omissions or other defects in the content transmitted in the Application. Renta does not guarantee the availability of the Application or its uninterrupted or error-free operation. Renta shall not be liable for any costs, losses or other possible direct or indirect damages that may arise from the use of this Application, the information provided in the Application or the non-availability of the Application, subject to mandatory legislation. In any case, Renta's liability is limited to a maximum amount corresponding to the agreed rental equipment rental and / or service price.\n\n9.	Cookies\n\nRenta uses cookies in the Application (so-called cookie function). A cookie is a text file stored in the user's browser when using the Application. For example, cookies make it possible to monitor the number of users of the Application and to collect information on how and when the Application is used.\n\nThe Registered Customer and the Unregistered User can disable the use of cookies in their browser settings. For more information on browser-specific instructions, contact your browser developer. Renta recommends the use of cookies in the Application in order to obtain the best possible user experience.\n\n10.	Third Party Services\n\nThe application may contain links to sites owned or operated by third parties. Renta is not responsible for the operation, content, direct or indirect damages or other features of such third party sites. By accessing these pages, the user must accept the terms of use of these pages and the Privacy Statement before using them.\n\n11.	Processing of personal data\n\nRenta processes and collects the personal data of Registered Customers in order to implement the services and to maintain and develop customer relationships. Renta's privacy statement describes the processing of personal data in more detail: https://renta.fi/en/privacy-policy-and-cookies\n\nThe personal data of unregistered Users will not be collected.\n\n12.	Other Terms\n\nRenta's valid rental terms apply to machine rental and services. The terms and conditions of the annual contracts are complied with with the customers of the annual contracts. The customer agrees to the delivery terms valid for each order.\n\nRenta may change, update, cancel or delete the Application, the contents of the Application or portions thereof at its sole discretion. The Registered Customer or the Registered User must stop using the Application if the Registered Customer or the Registered User does not accept the changes in the Terms of Use of the Application or the privacy statement.\n\nThe Registered Customer and the Unregistered User must use the Application in accordance with the terms of use of the application store from which they have acquired the Application. In all cases, the Registered Customer and the Registered User shall be liable for damages caused by his / her compliance with these Terms of Use.\n\nThe Registered Customer and the Registered User are responsible for the accuracy of the information they provide, for the careful storage of their username and password, and for the proper security of their equipment. The Registered Customer and the Registered User are responsible for all transactions in the Application with their credentials.\n\nThe use of the service and these terms and conditions are governed by Finnish law, except for its choice of law provisions.\n\nThe parties shall endeavor to resolve their differences primarily through negotiations. If no amicable settlement is reached, the disputes will be settled in the Helsinki District Court. The consumer customer can also take the dispute to the Consumer Disputes Board for resolution.\n\n13.	Contact\n\nIf you have any questions about these Terms of Use or the Application, please contact:\n\nRenta Group Oy\nÄyritie 12 B\n01510 Vantaa\nFinland\ninfo@renta.fi\nBusiness ID 2732388-9)
    */
    public get myAccountPageAcceptanceTermsContent() : string {
        return this.get(this.myAccountPageAcceptanceTermsContentLanguageItemName);
    }

    /**
    /* "MyAccountPage.Acceptance.PrivacyNotice" (privacy notice)
    */
    public get myAccountPageAcceptancePrivacyNotice() : string {
        return this.get(this.myAccountPageAcceptancePrivacyNoticeLanguageItemName);
    }

    /**
    /* "MyAccountPage.Acceptance.PrivacyNotice.Title" (RENTA TASK-APPLICATIONS PRIVACY POLICY)
    */
    public get myAccountPageAcceptancePrivacyNoticeTitle() : string {
        return this.get(this.myAccountPageAcceptancePrivacyNoticeTitleLanguageItemName);
    }

    /**
    /* "MyAccountPage.Acceptance.PrivacyNotice.Content" (Sections 10 and 24 of the Personal Data Act 22.4.1999 / 523\nPrepared: 16.10.2019\n\n1.	The Registrar\nRenta Group Oy\nBusiness ID: 2732388-9\nAddress: Äyritie 12B, 01510 Vantaa Finland\n\n2.	The person responsible for registration and / or the contact person\nCIO Joel Särkkä\nPhone number: +35850 323 5569\nEmail: joel.sarkka@renta.fi\n\n3.	Name of the register\nUser register of Renta Group Oy's Renta Task application.\n\n4.	Purpose of the processing of personal data\nRenta Group Oy and its subsidiaries process personal data in the personal identification service, credit information verification, direct marketing, customer communications, to meet employment requirements, and to enable invoicing and personal customer service.\n\nIn addition, the inclusion of the register in the processing of personal data enables logging in to the service, ordering and producing the service, and developing the service.\n\n5.	Information content of the register\nThe following information can be processed in the register:\n•	Basic information of the data subject\n        o	name\n        o	personal identification number\n        o	mail address\n        o	phone number\n        o	e-mail address\n        o	Position in the company\n        o	Consent of the data subject to direct marketing\n•	Company information\n        o	customer related information\n        o	service history\n        o	credit data entries\n        o	 other entries entered by the customer\n•	Technical information\n        o	location information\n        o	IP address\n        o	Device identification\n        o	advertising ID\n        o	operating system\n        o	browser type\n        o	other hardware details\n\n6. Regular sources of information\nPersonal information is collected from the registrant himself and through the Intrum credit information service.\n\n7. Regular data transfers and data transfers outside the EU or the European Economic Area\nThe data will not be disclosed outside the EU or the EEA.\n\n8. Use of cookies in the online service\nWe use cookies in the online service. A cookie is a small text file stored on a user's computer that enables safe, efficient and user-friendly use of the service.\n\nYou can disable and delete cookies in your browser settings.\n\n9. Registry Security Principles\nThe personal data contained in the register will always be treated as confidential. The principles of processing the data contained in the register are instructed and documented in the organizations processing the data.\n\nThe information system is protected by a firewall.\n\nOn the website, data transfer is secured with an SSL-secured connection.\n\n10. Right of prohibition of the data subject\nThe data subject shall have the right to prohibit the controller from processing personal data concerning him or her for direct mail, distance selling and other direct marketing, as well as for market and opinion research, as well as for personal registration and genealogy. The ban can be set via the mobile application or the customer portal.\n\n11. Right of inspection of the data subject\nThe data subject has the right to inspect the personal data stored in the register and to receive copies of it free of charge up to once a year.\n\nThe request for verification must be made by e-mail from an e-mail address that can be verified by the register to belong to the data subject.\n\n12. Correction of information\nThe controller shall correct, delete or supplement personal data in the register that are incorrect, unnecessary, incomplete or out of date for the purpose of processing on its own initiative or at the request of the data subject. In addition, personal data may be deleted if the customer misuses the service or engages in criminal or other prohibited activities using the service.)
    */
    public get myAccountPageAcceptancePrivacyNoticeContent() : string {
        return this.get(this.myAccountPageAcceptancePrivacyNoticeContentLanguageItemName);
    }

    /**
    /* "MyAccountPage.UserAlreadyExists" (User with same email or phone number already exists.)
    */
    public get myAccountPageUserAlreadyExists() : string {
        return this.get(this.myAccountPageUserAlreadyExistsLanguageItemName);
    }

    /**
    /* "LoginPage.Sso.UserNotFound" (Login failed, user not found.)
    */
    public get loginPageSsoUserNotFound() : string {
        return this.get(this.loginPageSsoUserNotFoundLanguageItemName);
    }

    /**
    /* "LoginPage.Sso.Failed" (Login failed, contact support to solve the issue.)
    */
    public get loginPageSsoFailed() : string {
        return this.get(this.loginPageSsoFailedLanguageItemName);
    }

    /**
    /* "Enum.CustomerApprovalType.Email" (By email)
    */
    public get enumCustomerApprovalTypeEmail() : string {
        return this.get(this.enumCustomerApprovalTypeEmailLanguageItemName);
    }

    /**
    /* "Enum.CustomerApprovalType.Phone" (By phone)
    */
    public get enumCustomerApprovalTypePhone() : string {
        return this.get(this.enumCustomerApprovalTypePhoneLanguageItemName);
    }

    /**
    /* "Enum.CustomerApprovalType.Phone.Description" (Report already approved by customer by phone)
    */
    public get enumCustomerApprovalTypePhoneDescription() : string {
        return this.get(this.enumCustomerApprovalTypePhoneDescriptionLanguageItemName);
    }

    /**
    /* "Enum.CustomerApprovalType.Email.Description" (Report will be approved by customer through email)
    */
    public get enumCustomerApprovalTypeEmailDescription() : string {
        return this.get(this.enumCustomerApprovalTypeEmailDescriptionLanguageItemName);
    }

    /**
    /* "Enum.CustomerApprovalType.Signature" (Customer signature)
    */
    public get enumCustomerApprovalTypeSignature() : string {
        return this.get(this.enumCustomerApprovalTypeSignatureLanguageItemName);
    }

    /**
    /* "Enum.CustomerApprovalType.Signature.Description" (Customer can sign report in the application)
    */
    public get enumCustomerApprovalTypeSignatureDescription() : string {
        return this.get(this.enumCustomerApprovalTypeSignatureDescriptionLanguageItemName);
    }

    /**
    /* "Enum.DailyAllowance.None" (0)
    */
    public get enumDailyAllowanceNone() : string {
        return this.get(this.enumDailyAllowanceNoneLanguageItemName);
    }

    /**
    /* "Enum.DailyAllowance.None.Description" (No daily\nallowance)
    */
    public get enumDailyAllowanceNoneDescription() : string {
        return this.get(this.enumDailyAllowanceNoneDescriptionLanguageItemName);
    }

    /**
    /* "Enum.UserDocumentType.CraneCertificate" (Crane certificate)
    */
    public get enumUserDocumentTypeCraneCertificate() : string {
        return this.get(this.enumUserDocumentTypeCraneCertificateLanguageItemName);
    }

    /**
    /* "Enum.UserDocumentType.DrivingLicence" (Driving licence)
    */
    public get enumUserDocumentTypeDrivingLicence() : string {
        return this.get(this.enumUserDocumentTypeDrivingLicenceLanguageItemName);
    }

    /**
    /* "Enum.UserDocumentType.ElectricalSafetyCard" (Electrical safety card)
    */
    public get enumUserDocumentTypeElectricalSafetyCard() : string {
        return this.get(this.enumUserDocumentTypeElectricalSafetyCardLanguageItemName);
    }

    /**
    /* "Enum.UserDocumentType.FireWorkCard" (Fire work card)
    */
    public get enumUserDocumentTypeFireWorkCard() : string {
        return this.get(this.enumUserDocumentTypeFireWorkCardLanguageItemName);
    }

    /**
    /* "Enum.UserDocumentType.FirstAidCard" (First aid card)
    */
    public get enumUserDocumentTypeFirstAidCard() : string {
        return this.get(this.enumUserDocumentTypeFirstAidCardLanguageItemName);
    }

    /**
    /* "Enum.UserDocumentType.ForkliftCard" (Forklift card)
    */
    public get enumUserDocumentTypeForkliftCard() : string {
        return this.get(this.enumUserDocumentTypeForkliftCardLanguageItemName);
    }

    /**
    /* "Enum.UserDocumentType.IdCard" (Worker id card)
    */
    public get enumUserDocumentTypeIdCard() : string {
        return this.get(this.enumUserDocumentTypeIdCardLanguageItemName);
    }

    /**
    /* "Enum.UserDocumentType.LifterCard" (Lifter card)
    */
    public get enumUserDocumentTypeLifterCard() : string {
        return this.get(this.enumUserDocumentTypeLifterCardLanguageItemName);
    }

    /**
    /* "Enum.UserDocumentType.RoadSafetyCard" (Road safety card)
    */
    public get enumUserDocumentTypeRoadSafetyCard() : string {
        return this.get(this.enumUserDocumentTypeRoadSafetyCardLanguageItemName);
    }

    /**
    /* "Enum.UserDocumentType.RoofFireWorkCard" (Roof fire work card)
    */
    public get enumUserDocumentTypeRoofFireWorkCard() : string {
        return this.get(this.enumUserDocumentTypeRoofFireWorkCardLanguageItemName);
    }

    /**
    /* "Enum.UserDocumentType.WetRoomCertificate" (Wet room certificate)
    */
    public get enumUserDocumentTypeWetRoomCertificate() : string {
        return this.get(this.enumUserDocumentTypeWetRoomCertificateLanguageItemName);
    }

    /**
    /* "Enum.UserDocumentType.WorkSafetyCard" (Work safety card)
    */
    public get enumUserDocumentTypeWorkSafetyCard() : string {
        return this.get(this.enumUserDocumentTypeWorkSafetyCardLanguageItemName);
    }

    /**
    /* "Enum.ModuleModel.Undefined" (---)
    */
    public get enumModuleModelUndefined() : string {
        return this.get(this.enumModuleModelUndefinedLanguageItemName);
    }

    /**
    /* "Enum.ModuleModel.Module" (Module)
    */
    public get enumModuleModelModule() : string {
        return this.get(this.enumModuleModelModuleLanguageItemName);
    }

    /**
    /* "Enum.ModuleModel.Modules" (Modules)
    */
    public get enumModuleModelModules() : string {
        return this.get(this.enumModuleModelModulesLanguageItemName);
    }

    /**
    /* "Enum.ModuleModel.PerimeterFrame" (Perimeter frame)
    */
    public get enumModuleModelPerimeterFrame() : string {
        return this.get(this.enumModuleModelPerimeterFrameLanguageItemName);
    }

    /**
    /* "Enum.ModuleModel.WeatherShelter" (Weather shelter)
    */
    public get enumModuleModelWeatherShelter() : string {
        return this.get(this.enumModuleModelWeatherShelterLanguageItemName);
    }

    /**
    /* "ModuleModel.Custom" (Custom)
    */
    public get moduleModelCustom() : string {
        return this.get(this.moduleModelCustomLanguageItemName);
    }

    /**
    /* "Enum.UserDocumentLevel.First" (First)
    */
    public get enumUserDocumentLevelFirst() : string {
        return this.get(this.enumUserDocumentLevelFirstLanguageItemName);
    }

    /**
    /* "Enum.UserDocumentLevel.Second" (Second)
    */
    public get enumUserDocumentLevelSecond() : string {
        return this.get(this.enumUserDocumentLevelSecondLanguageItemName);
    }

    /**
    /* "Enum.ContractTaskType.Assembly" (Assembly)
    */
    public get enumContractTaskTypeAssembly() : string {
        return this.get(this.enumContractTaskTypeAssemblyLanguageItemName);
    }

    /**
    /* "Enum.ContractTaskType.Dismantle" (Dismantle)
    */
    public get enumContractTaskTypeDismantle() : string {
        return this.get(this.enumContractTaskTypeDismantleLanguageItemName);
    }

    /**
    /* "Enum.ContractTaskType.Delivery" (Delivery)
    */
    public get enumContractTaskTypeDelivery() : string {
        return this.get(this.enumContractTaskTypeDeliveryLanguageItemName);
    }

    /**
    /* "Enum.ContractTaskType.Return" (Return)
    */
    public get enumContractTaskTypeReturn() : string {
        return this.get(this.enumContractTaskTypeReturnLanguageItemName);
    }

    /**
    /* "Enum.ContractTaskType.Covering" (Covering)
    */
    public get enumContractTaskTypeCovering() : string {
        return this.get(this.enumContractTaskTypeCoveringLanguageItemName);
    }

    /**
    /* "Form.Input.File.DragAndDrop" (Drag'n'drop file here, or click to select)
    */
    public get formInputFileDragAndDrop() : string {
        return this.get(this.formInputFileDragAndDropLanguageItemName);
    }

    /**
    /* "Form.Input.File.Readonly" (File is readonly)
    */
    public get formInputFileReadonly() : string {
        return this.get(this.formInputFileReadonlyLanguageItemName);
    }

    /**
    /* "Form.Input.File.Preview" (Preview)
    */
    public get formInputFilePreview() : string {
        return this.get(this.formInputFilePreviewLanguageItemName);
    }

    /**
    /* "Form.Input.File.ChooseFile" (Choose file)
    */
    public get formInputFileChooseFile() : string {
        return this.get(this.formInputFileChooseFileLanguageItemName);
    }

    /**
    /* "UserDocument.Subtitle" (Upload document or modify the existing)
    */
    public get userDocumentSubtitle() : string {
        return this.get(this.userDocumentSubtitleLanguageItemName);
    }

    /**
    /* "UserDocument.Title" (User document)
    */
    public get userDocumentTitle() : string {
        return this.get(this.userDocumentTitleLanguageItemName);
    }

    /**
    /* "UserDocument.Send.HelpText" (Send user document by email)
    */
    public get userDocumentSendHelpText() : string {
        return this.get(this.userDocumentSendHelpTextLanguageItemName);
    }

    /**
    /* "UserDocument.Send.Button" (Send document)
    */
    public get userDocumentSendButton() : string {
        return this.get(this.userDocumentSendButtonLanguageItemName);
    }

    /**
    /* "UserDocument.ValidThru" (Valid thru)
    */
    public get userDocumentValidThru() : string {
        return this.get(this.userDocumentValidThruLanguageItemName);
    }

    /**
    /* "UserDocument.Image" (Document image)
    */
    public get userDocumentImage() : string {
        return this.get(this.userDocumentImageLanguageItemName);
    }

    /**
    /* "UserDocument.Level" (Level)
    */
    public get userDocumentLevel() : string {
        return this.get(this.userDocumentLevelLanguageItemName);
    }

    /**
    /* "Enum.WorkDayState.Normal" (Normal)
    */
    public get enumWorkDayStateNormal() : string {
        return this.get(this.enumWorkDayStateNormalLanguageItemName);
    }

    /**
    /* "Enum.WorkDayState.Normal.Description" (Normal working day)
    */
    public get enumWorkDayStateNormalDescription() : string {
        return this.get(this.enumWorkDayStateNormalDescriptionLanguageItemName);
    }

    /**
    /* "Enum.WorkDayState.SickLeave" (Sick leave)
    */
    public get enumWorkDayStateSickLeave() : string {
        return this.get(this.enumWorkDayStateSickLeaveLanguageItemName);
    }

    /**
    /* "Enum.WorkDayState.SickLeave.Description" (Employee is on sick leave)
    */
    public get enumWorkDayStateSickLeaveDescription() : string {
        return this.get(this.enumWorkDayStateSickLeaveDescriptionLanguageItemName);
    }

    /**
    /* "Enum.WorkDayState.Vacation" (Vacation)
    */
    public get enumWorkDayStateVacation() : string {
        return this.get(this.enumWorkDayStateVacationLanguageItemName);
    }

    /**
    /* "Enum.WorkDayState.Vacation.Description" (Employee is on vacation)
    */
    public get enumWorkDayStateVacationDescription() : string {
        return this.get(this.enumWorkDayStateVacationDescriptionLanguageItemName);
    }

    /**
    /* "Enum.WorkDayState.WeeklyRest" (Weekly rest)
    */
    public get enumWorkDayStateWeeklyRest() : string {
        return this.get(this.enumWorkDayStateWeeklyRestLanguageItemName);
    }

    /**
    /* "Enum.WorkDayState.WeeklyRest.Description" (Weekly holiday)
    */
    public get enumWorkDayStateWeeklyRestDescription() : string {
        return this.get(this.enumWorkDayStateWeeklyRestDescriptionLanguageItemName);
    }

    /**
    /* "Enum.WorkDayState.PaidDayOff" (Paid day off)
    */
    public get enumWorkDayStatePaidDayOff() : string {
        return this.get(this.enumWorkDayStatePaidDayOffLanguageItemName);
    }

    /**
    /* "Enum.WorkDayState.PaidDayOff.Description" (Employee has paid day off)
    */
    public get enumWorkDayStatePaidDayOffDescription() : string {
        return this.get(this.enumWorkDayStatePaidDayOffDescriptionLanguageItemName);
    }

    /**
    /* "Enum.WorkDayState.FlexHours" (Flex hours)
    */
    public get enumWorkDayStateFlexHours() : string {
        return this.get(this.enumWorkDayStateFlexHoursLanguageItemName);
    }

    /**
    /* "Enum.WorkDayState.FlexHours.Description" (Flex hours)
    */
    public get enumWorkDayStateFlexHoursDescription() : string {
        return this.get(this.enumWorkDayStateFlexHoursDescriptionLanguageItemName);
    }

    /**
    /* "UserDocumentSendSuccess" (Document sent successfully)
    */
    public get userDocumentSendSuccess() : string {
        return this.get(this.userDocumentSendSuccessLanguageItemName);
    }

    /**
    /* "Generic.AccessDenied" (Access denied)
    */
    public get genericAccessDenied() : string {
        return this.get(this.genericAccessDeniedLanguageItemName);
    }

    /**
    /* "Generic.DataSaved" (Saved successfully)
    */
    public get genericDataSaved() : string {
        return this.get(this.genericDataSavedLanguageItemName);
    }

    /**
    /* "Generic.Task" (Task)
    */
    public get genericTask() : string {
        return this.get(this.genericTaskLanguageItemName);
    }

    /**
    /* "Generic.Warehouse" (Warehouse)
    */
    public get genericWarehouse() : string {
        return this.get(this.genericWarehouseLanguageItemName);
    }

    /**
    /* "Generic.Tasks" (Tasks)
    */
    public get genericTasks() : string {
        return this.get(this.genericTasksLanguageItemName);
    }

    /**
    /* "Generic.Name" (Name)
    */
    public get genericName() : string {
        return this.get(this.genericNameLanguageItemName);
    }

    /**
    /* "Generic.VatId" (Business ID)
    */
    public get genericVatId() : string {
        return this.get(this.genericVatIdLanguageItemName);
    }

    /**
    /* "Generic.CostPool" (Cost pool)
    */
    public get genericCostPool() : string {
        return this.get(this.genericCostPoolLanguageItemName);
    }

    /**
    /* "Generic.Details" (Details)
    */
    public get genericDetails() : string {
        return this.get(this.genericDetailsLanguageItemName);
    }

    /**
    /* "Warehouses.PageTitle" (Warehouses)
    */
    public get warehousesPageTitle() : string {
        return this.get(this.warehousesPageTitleLanguageItemName);
    }

    /**
    /* "WarehousePanel.PanelTitle" (Warehouse details)
    */
    public get warehousePanelPanelTitle() : string {
        return this.get(this.warehousePanelPanelTitleLanguageItemName);
    }

    /**
    /* "Warehouses.ExternalId" (Warehouse number)
    */
    public get warehousesExternalId() : string {
        return this.get(this.warehousesExternalIdLanguageItemName);
    }

    /**
    /* "Enum.BusinessArea.Scaffolding" (Scaffolding)
    */
    public get enumBusinessAreaScaffolding() : string {
        return this.get(this.enumBusinessAreaScaffoldingLanguageItemName);
    }

    /**
    /* "Enum.BusinessArea.Stp" (Stp)
    */
    public get enumBusinessAreaStp() : string {
        return this.get(this.enumBusinessAreaStpLanguageItemName);
    }

    /**
    /* "Admin.SettingsKey" (Setting)
    */
    public get adminSettingsKey() : string {
        return this.get(this.adminSettingsKeyLanguageItemName);
    }

    /**
    /* "Admin.SettingsValue" (Value)
    */
    public get adminSettingsValue() : string {
        return this.get(this.adminSettingsValueLanguageItemName);
    }

    /**
    /* "Admin.UserDeleted" (User account {0} deleted successfully.)
    */
    public get adminUserDeleted() : string {
        return this.get(this.adminUserDeletedLanguageItemName);
    }

    /**
    /* "Admin.UserDeletedPermanently" (User account "{0}" was permanently deleted.)
    */
    public get adminUserDeletedPermanently() : string {
        return this.get(this.adminUserDeletedPermanentlyLanguageItemName);
    }

    /**
    /* "Admin.UserRestored" (User account {0} restored successfully.)
    */
    public get adminUserRestored() : string {
        return this.get(this.adminUserRestoredLanguageItemName);
    }

    /**
    /* "Admin.AddUser" (Add user)
    */
    public get adminAddUser() : string {
        return this.get(this.adminAddUserLanguageItemName);
    }

    /**
    /* "Admin.ShowDeleted" (Show deleted)
    */
    public get adminShowDeleted() : string {
        return this.get(this.adminShowDeletedLanguageItemName);
    }

    /**
    /* "Admin.Subcontractor.Label" (Subcontractor)
    */
    public get adminSubcontractorLabel() : string {
        return this.get(this.adminSubcontractorLabelLanguageItemName);
    }

    /**
    /* "Admin.Button.AddNewSubcontractor" (Add new subcontractor)
    */
    public get adminButtonAddNewSubcontractor() : string {
        return this.get(this.adminButtonAddNewSubcontractorLanguageItemName);
    }

    /**
    /* "Admin.Button.Restore" (Restore)
    */
    public get adminButtonRestore() : string {
        return this.get(this.adminButtonRestoreLanguageItemName);
    }

    /**
    /* "Admin.Button.Delete" (Delete)
    */
    public get adminButtonDelete() : string {
        return this.get(this.adminButtonDeleteLanguageItemName);
    }

    /**
    /* "Admin.Button.Unlock" (Unlock)
    */
    public get adminButtonUnlock() : string {
        return this.get(this.adminButtonUnlockLanguageItemName);
    }

    /**
    /* "Admin.SettingsSaved" (Settings saved)
    */
    public get adminSettingsSaved() : string {
        return this.get(this.adminSettingsSavedLanguageItemName);
    }

    /**
    /* "Admin.Settings.Tab" (Settings)
    */
    public get adminSettingsTab() : string {
        return this.get(this.adminSettingsTabLanguageItemName);
    }

    /**
    /* "Admin.Users.Tab" (Users)
    */
    public get adminUsersTab() : string {
        return this.get(this.adminUsersTabLanguageItemName);
    }

    /**
    /* "Admin.AlertMessage.UnlockUser" (User account "{0}" unlocked successfully.)
    */
    public get adminAlertMessageUnlockUser() : string {
        return this.get(this.adminAlertMessageUnlockUserLanguageItemName);
    }

    /**
    /* "Admin.ConfirmationButton.UnlockUser" (Are you sure you want to unlock user "{0}"?)
    */
    public get adminConfirmationButtonUnlockUser() : string {
        return this.get(this.adminConfirmationButtonUnlockUserLanguageItemName);
    }

    /**
    /* "Admin.ConfirmationButton.DeleteUser" (Are you sure you want to delete user "{0}"?)
    */
    public get adminConfirmationButtonDeleteUser() : string {
        return this.get(this.adminConfirmationButtonDeleteUserLanguageItemName);
    }

    /**
    /* "Admin.ConfirmationButton.RestoreUser" (Are you sure you want to restore user "{0}"?)
    */
    public get adminConfirmationButtonRestoreUser() : string {
        return this.get(this.adminConfirmationButtonRestoreUserLanguageItemName);
    }

    /**
    /* "Generic.Save" (Save)
    */
    public get genericSave() : string {
        return this.get(this.genericSaveLanguageItemName);
    }

    /**
    /* "Generic.Cancel" (Cancel)
    */
    public get genericCancel() : string {
        return this.get(this.genericCancelLanguageItemName);
    }

    /**
    /* "Generic.Constructionsite" (Construction site)
    */
    public get genericConstructionsite() : string {
        return this.get(this.genericConstructionsiteLanguageItemName);
    }

    /**
    /* "Generic.Date" (Date)
    */
    public get genericDate() : string {
        return this.get(this.genericDateLanguageItemName);
    }

    /**
    /* "ResetPassword.PageTitle" (Set new password for your account)
    */
    public get resetPasswordPageTitle() : string {
        return this.get(this.resetPasswordPageTitleLanguageItemName);
    }

    /**
    /* "ResetPassword.ConfirmPasswordInput" (Confirm password)
    */
    public get resetPasswordConfirmPasswordInput() : string {
        return this.get(this.resetPasswordConfirmPasswordInputLanguageItemName);
    }

    /**
    /* "ResetPassword.PasswordsDontMatchMessage" (Passwords don't match)
    */
    public get resetPasswordPasswordsDontMatchMessage() : string {
        return this.get(this.resetPasswordPasswordsDontMatchMessageLanguageItemName);
    }

    /**
    /* "ResetPassword.SuccessMessage" (Password set successfully)
    */
    public get resetPasswordSuccessMessage() : string {
        return this.get(this.resetPasswordSuccessMessageLanguageItemName);
    }

    /**
    /* "ResetPassword.SuccessMessageAndInfo" (Password set successfully. You must accept terms of usage and privacy notice in order to use application.)
    */
    public get resetPasswordSuccessMessageAndInfo() : string {
        return this.get(this.resetPasswordSuccessMessageAndInfoLanguageItemName);
    }

    /**
    /* "ChangePassword.CurrentPassword" (Current password)
    */
    public get changePasswordCurrentPassword() : string {
        return this.get(this.changePasswordCurrentPasswordLanguageItemName);
    }

    /**
    /* "ChangePassword.NewPassword" (New password)
    */
    public get changePasswordNewPassword() : string {
        return this.get(this.changePasswordNewPasswordLanguageItemName);
    }

    /**
    /* "ChangePassword.PageTitle" (Change password)
    */
    public get changePasswordPageTitle() : string {
        return this.get(this.changePasswordPageTitleLanguageItemName);
    }

    /**
    /* "ChangePassword.Button" (Change password)
    */
    public get changePasswordButton() : string {
        return this.get(this.changePasswordButtonLanguageItemName);
    }

    /**
    /* "ChangePassword.WrongCurrentMessage" (Wrong current password)
    */
    public get changePasswordWrongCurrentMessage() : string {
        return this.get(this.changePasswordWrongCurrentMessageLanguageItemName);
    }

    /**
    /* "ChangePassword.WeakPasswordMessage" (Password must have one non alphanumeric character, one lowercase ('a'-'z') character, one uppercase ('A'-'Z') character, one number and be at least 8 characters long)
    */
    public get changePasswordWeakPasswordMessage() : string {
        return this.get(this.changePasswordWeakPasswordMessageLanguageItemName);
    }

    /**
    /* "RoleName.SubcontractorManager" (Manager)
    */
    public get roleNameSubcontractorManager() : string {
        return this.get(this.roleNameSubcontractorManagerLanguageItemName);
    }

    /**
    /* "RoleName.SubcontractorMounter" (Mounter)
    */
    public get roleNameSubcontractorMounter() : string {
        return this.get(this.roleNameSubcontractorMounterLanguageItemName);
    }

    /**
    /* "RoleName.SubcontractorHeadMounter" (Head mounter)
    */
    public get roleNameSubcontractorHeadMounter() : string {
        return this.get(this.roleNameSubcontractorHeadMounterLanguageItemName);
    }

    /**
    /* "RoleName.ScaffoldingMounter" (Scaffolding mounter)
    */
    public get roleNameScaffoldingMounter() : string {
        return this.get(this.roleNameScaffoldingMounterLanguageItemName);
    }

    /**
    /* "RoleName.Mounter" (RTP mounter)
    */
    public get roleNameMounter() : string {
        return this.get(this.roleNameMounterLanguageItemName);
    }

    /**
    /* "RoleName.ScaffoldingHeadMounter" (Scaffolding head mounter)
    */
    public get roleNameScaffoldingHeadMounter() : string {
        return this.get(this.roleNameScaffoldingHeadMounterLanguageItemName);
    }

    /**
    /* "RoleName.StpHeadMounter" (RTP head mounter)
    */
    public get roleNameStpHeadMounter() : string {
        return this.get(this.roleNameStpHeadMounterLanguageItemName);
    }

    /**
    /* "RoleName.ScaffoldingManager" (Scaffolding manager)
    */
    public get roleNameScaffoldingManager() : string {
        return this.get(this.roleNameScaffoldingManagerLanguageItemName);
    }

    /**
    /* "RoleName.StpManager" (RTP manager)
    */
    public get roleNameStpManager() : string {
        return this.get(this.roleNameStpManagerLanguageItemName);
    }

    /**
    /* "RoleName.ScaffoldingAdmin" (Scaffolding admin)
    */
    public get roleNameScaffoldingAdmin() : string {
        return this.get(this.roleNameScaffoldingAdminLanguageItemName);
    }

    /**
    /* "RoleName.StpAdmin" (RTP admin)
    */
    public get roleNameStpAdmin() : string {
        return this.get(this.roleNameStpAdminLanguageItemName);
    }

    /**
    /* "TopNav.ChangePassword" (Change password)
    */
    public get topNavChangePassword() : string {
        return this.get(this.topNavChangePasswordLanguageItemName);
    }

    /**
    /* "Enum.ConstructionSiteStatus.Active" (Active)
    */
    public get enumConstructionSiteStatusActive() : string {
        return this.get(this.enumConstructionSiteStatusActiveLanguageItemName);
    }

    /**
    /* "Enum.ConstructionSiteStatus.Active.Description" (Under construction)
    */
    public get enumConstructionSiteStatusActiveDescription() : string {
        return this.get(this.enumConstructionSiteStatusActiveDescriptionLanguageItemName);
    }

    /**
    /* "Enum.ConstructionSiteStatus.Inactive" (Inactive)
    */
    public get enumConstructionSiteStatusInactive() : string {
        return this.get(this.enumConstructionSiteStatusInactiveLanguageItemName);
    }

    /**
    /* "Enum.ConstructionSiteStatus.Inactive.Description" (Construction is frozen)
    */
    public get enumConstructionSiteStatusInactiveDescription() : string {
        return this.get(this.enumConstructionSiteStatusInactiveDescriptionLanguageItemName);
    }

    /**
    /* "Enum.ConstructionSiteStatus.Closed" (Closed)
    */
    public get enumConstructionSiteStatusClosed() : string {
        return this.get(this.enumConstructionSiteStatusClosedLanguageItemName);
    }

    /**
    /* "Enum.ConstructionSiteStatus.Closed.Description" (Construction is completed or not started yet)
    */
    public get enumConstructionSiteStatusClosedDescription() : string {
        return this.get(this.enumConstructionSiteStatusClosedDescriptionLanguageItemName);
    }

    /**
    /* "Enum.WorkOrderStatus.HasActiveTasks" (Has active tasks)
    */
    public get enumWorkOrderStatusHasActiveTasks() : string {
        return this.get(this.enumWorkOrderStatusHasActiveTasksLanguageItemName);
    }

    /**
    /* "Enum.WorkOrderStatus.HasActiveTasks.Description" (Has activated, but not completed tasks)
    */
    public get enumWorkOrderStatusHasActiveTasksDescription() : string {
        return this.get(this.enumWorkOrderStatusHasActiveTasksDescriptionLanguageItemName);
    }

    /**
    /* "Enum.WorkOrderStatus.WorkReportNotSent" (Work report not sent)
    */
    public get enumWorkOrderStatusWorkReportNotSent() : string {
        return this.get(this.enumWorkOrderStatusWorkReportNotSentLanguageItemName);
    }

    /**
    /* "Enum.WorkOrderStatus.WorkReportNotSent.Description" (Has not sent work reports with approving type "Email")
    */
    public get enumWorkOrderStatusWorkReportNotSentDescription() : string {
        return this.get(this.enumWorkOrderStatusWorkReportNotSentDescriptionLanguageItemName);
    }

    /**
    /* "Enum.WorkOrderStatus.WorkReportNotApprovedByCustomer" (Pending customer approval)
    */
    public get enumWorkOrderStatusWorkReportNotApprovedByCustomer() : string {
        return this.get(this.enumWorkOrderStatusWorkReportNotApprovedByCustomerLanguageItemName);
    }

    /**
    /* "Enum.WorkOrderStatus.WorkReportNotApprovedByCustomer.Description" (Has not approved work reports)
    */
    public get enumWorkOrderStatusWorkReportNotApprovedByCustomerDescription() : string {
        return this.get(this.enumWorkOrderStatusWorkReportNotApprovedByCustomerDescriptionLanguageItemName);
    }

    /**
    /* "Enum.WorkOrderStatus.TaskNotApprovedByManager" (Pending manager approval)
    */
    public get enumWorkOrderStatusTaskNotApprovedByManager() : string {
        return this.get(this.enumWorkOrderStatusTaskNotApprovedByManagerLanguageItemName);
    }

    /**
    /* "Enum.WorkOrderStatus.TaskNotApprovedByManager.Description" (Has completed, but not approved tasks)
    */
    public get enumWorkOrderStatusTaskNotApprovedByManagerDescription() : string {
        return this.get(this.enumWorkOrderStatusTaskNotApprovedByManagerDescriptionLanguageItemName);
    }

    /**
    /* "Enum.WorkOrderStatus.InvoiceRowsNotApprovedNyManager" (Pending invoice row approval)
    */
    public get enumWorkOrderStatusInvoiceRowsNotApprovedNyManager() : string {
        return this.get(this.enumWorkOrderStatusInvoiceRowsNotApprovedNyManagerLanguageItemName);
    }

    /**
    /* "Enum.WorkOrderStatus.InvoiceRowsNotApprovedNyManager.Description" (Has not approved invoice rows)
    */
    public get enumWorkOrderStatusInvoiceRowsNotApprovedNyManagerDescription() : string {
        return this.get(this.enumWorkOrderStatusInvoiceRowsNotApprovedNyManagerDescriptionLanguageItemName);
    }

    /**
    /* "Enum.WorkOrderStatus.InvoiceNotCreated" (Not billed)
    */
    public get enumWorkOrderStatusInvoiceNotCreated() : string {
        return this.get(this.enumWorkOrderStatusInvoiceNotCreatedLanguageItemName);
    }

    /**
    /* "Enum.WorkOrderStatus.InvoiceNotCreated.Description" (Has approved, but not sent to Pagero invoices)
    */
    public get enumWorkOrderStatusInvoiceNotCreatedDescription() : string {
        return this.get(this.enumWorkOrderStatusInvoiceNotCreatedDescriptionLanguageItemName);
    }

    /**
    /* "Month.January" (January)
    */
    public get monthJanuary() : string {
        return this.get(this.monthJanuaryLanguageItemName);
    }

    /**
    /* "Month.February" (February)
    */
    public get monthFebruary() : string {
        return this.get(this.monthFebruaryLanguageItemName);
    }

    /**
    /* "Month.March" (March)
    */
    public get monthMarch() : string {
        return this.get(this.monthMarchLanguageItemName);
    }

    /**
    /* "Month.April" (April)
    */
    public get monthApril() : string {
        return this.get(this.monthAprilLanguageItemName);
    }

    /**
    /* "Month.May" (May)
    */
    public get monthMay() : string {
        return this.get(this.monthMayLanguageItemName);
    }

    /**
    /* "Month.June" (June)
    */
    public get monthJune() : string {
        return this.get(this.monthJuneLanguageItemName);
    }

    /**
    /* "Month.July" (July)
    */
    public get monthJuly() : string {
        return this.get(this.monthJulyLanguageItemName);
    }

    /**
    /* "Month.August" (August)
    */
    public get monthAugust() : string {
        return this.get(this.monthAugustLanguageItemName);
    }

    /**
    /* "Month.September" (September)
    */
    public get monthSeptember() : string {
        return this.get(this.monthSeptemberLanguageItemName);
    }

    /**
    /* "Month.October" (October)
    */
    public get monthOctober() : string {
        return this.get(this.monthOctoberLanguageItemName);
    }

    /**
    /* "Month.November" (November)
    */
    public get monthNovember() : string {
        return this.get(this.monthNovemberLanguageItemName);
    }

    /**
    /* "Month.December" (December)
    */
    public get monthDecember() : string {
        return this.get(this.monthDecemberLanguageItemName);
    }

    /**
    /* "RoleName.Admin" (Admin)
    */
    public get roleNameAdmin() : string {
        return this.get(this.roleNameAdminLanguageItemName);
    }

    /**
    /* "RoleName.ContactPerson" (Contact person)
    */
    public get roleNameContactPerson() : string {
        return this.get(this.roleNameContactPersonLanguageItemName);
    }

    /**
    /* "RoleName.ScaffoldingDriver" (Scaffolding driver)
    */
    public get roleNameScaffoldingDriver() : string {
        return this.get(this.roleNameScaffoldingDriverLanguageItemName);
    }

    /**
    /* "RoleName.StpDriver" (RTP driver)
    */
    public get roleNameStpDriver() : string {
        return this.get(this.roleNameStpDriverLanguageItemName);
    }

    /**
    /* "Enum.UserRoleGroup.Admins" (Admins)
    */
    public get enumUserRoleGroupAdmins() : string {
        return this.get(this.enumUserRoleGroupAdminsLanguageItemName);
    }

    /**
    /* "Enum.UserRoleGroup.Subcontractors" (Subcontractors)
    */
    public get enumUserRoleGroupSubcontractors() : string {
        return this.get(this.enumUserRoleGroupSubcontractorsLanguageItemName);
    }

    /**
    /* "Enum.UserRoleGroup.Admins.Description" (Site & business administrators)
    */
    public get enumUserRoleGroupAdminsDescription() : string {
        return this.get(this.enumUserRoleGroupAdminsDescriptionLanguageItemName);
    }

    /**
    /* "Enum.UserRoleGroup.Managers" (Managers)
    */
    public get enumUserRoleGroupManagers() : string {
        return this.get(this.enumUserRoleGroupManagersLanguageItemName);
    }

    /**
    /* "Enum.UserRoleGroup.ContactPersons" (Contact Persons)
    */
    public get enumUserRoleGroupContactPersons() : string {
        return this.get(this.enumUserRoleGroupContactPersonsLanguageItemName);
    }

    /**
    /* "Enum.UserRoleGroup.Managers.Description" (Site managers & contact persons)
    */
    public get enumUserRoleGroupManagersDescription() : string {
        return this.get(this.enumUserRoleGroupManagersDescriptionLanguageItemName);
    }

    /**
    /* "Enum.UserRoleGroup.Employees" (Employees)
    */
    public get enumUserRoleGroupEmployees() : string {
        return this.get(this.enumUserRoleGroupEmployeesLanguageItemName);
    }

    /**
    /* "Enum.UserRoleGroup.Employees.Description" (Head mounters, mounters & drivers)
    */
    public get enumUserRoleGroupEmployeesDescription() : string {
        return this.get(this.enumUserRoleGroupEmployeesDescriptionLanguageItemName);
    }

    /**
    /* "Enum.TaxRate.Rate24" (24%)
    */
    public get enumTaxRateRate24() : string {
        return this.get(this.enumTaxRateRate24LanguageItemName);
    }

    /**
    /* "Enum.TaxRate.Rate14" (14%)
    */
    public get enumTaxRateRate14() : string {
        return this.get(this.enumTaxRateRate14LanguageItemName);
    }

    /**
    /* "Enum.TaxRate.Rate10" (10%)
    */
    public get enumTaxRateRate10() : string {
        return this.get(this.enumTaxRateRate10LanguageItemName);
    }

    /**
    /* "Enum.TaxRate.Rate0" (0%)
    */
    public get enumTaxRateRate0() : string {
        return this.get(this.enumTaxRateRate0LanguageItemName);
    }

    /**
    /* "Admin.HeaderTitle" (Admin management)
    */
    public get adminHeaderTitle() : string {
        return this.get(this.adminHeaderTitleLanguageItemName);
    }

    /**
    /* "Admin.ChooseRole" (Choose a role)
    */
    public get adminChooseRole() : string {
        return this.get(this.adminChooseRoleLanguageItemName);
    }

    /**
    /* "ConfirmationDialog.AreYouSure" (Are you sure?)
    */
    public get confirmationDialogAreYouSure() : string {
        return this.get(this.confirmationDialogAreYouSureLanguageItemName);
    }

    /**
    /* "ConfirmationDialog.Confirm" (Confirm)
    */
    public get confirmationDialogConfirm() : string {
        return this.get(this.confirmationDialogConfirmLanguageItemName);
    }

    /**
    /* "ConfirmationDialog.Close" (Close)
    */
    public get confirmationDialogClose() : string {
        return this.get(this.confirmationDialogCloseLanguageItemName);
    }

    /**
    /* "Footer.Frontpage" (Frontpage)
    */
    public get footerFrontpage() : string {
        return this.get(this.footerFrontpageLanguageItemName);
    }

    /**
    /* "BaseInput.DocumentTooBig" (Document file is too big)
    */
    public get baseInputDocumentTooBig() : string {
        return this.get(this.baseInputDocumentTooBigLanguageItemName);
    }

    /**
    /* "BaseInput.TotalSizeTooBig" (Total size of documents is too big)
    */
    public get baseInputTotalSizeTooBig() : string {
        return this.get(this.baseInputTotalSizeTooBigLanguageItemName);
    }

    /**
    /* "BaseInput.DocumentTypeNotSupported" (Document type is not supported, choose file with extension {0})
    */
    public get baseInputDocumentTypeNotSupported() : string {
        return this.get(this.baseInputDocumentTypeNotSupportedLanguageItemName);
    }

    /**
    /* "Password.HelpText.PasswordHints" (Password must have at least:)
    */
    public get passwordHelpTextPasswordHints() : string {
        return this.get(this.passwordHelpTextPasswordHintsLanguageItemName);
    }

    /**
    /* "Password.HelpText.SpecialCharacter" (one non alphanumeric character)
    */
    public get passwordHelpTextSpecialCharacter() : string {
        return this.get(this.passwordHelpTextSpecialCharacterLanguageItemName);
    }

    /**
    /* "Password.HelpText.LowerCase" (one lowercase ('a'-'z') character)
    */
    public get passwordHelpTextLowerCase() : string {
        return this.get(this.passwordHelpTextLowerCaseLanguageItemName);
    }

    /**
    /* "Password.HelpText.UpperCase" (one uppercase ('A'-'Z') character)
    */
    public get passwordHelpTextUpperCase() : string {
        return this.get(this.passwordHelpTextUpperCaseLanguageItemName);
    }

    /**
    /* "Password.HelpText.Number" (one number)
    */
    public get passwordHelpTextNumber() : string {
        return this.get(this.passwordHelpTextNumberLanguageItemName);
    }

    /**
    /* "Password.HelpText.Length" (at least 8 characters long)
    */
    public get passwordHelpTextLength() : string {
        return this.get(this.passwordHelpTextLengthLanguageItemName);
    }

    /**
    /* "Enum.ConstructionSiteSubContractorTaskStatus.WorkReportNotApprovedByCustomer" (Work report not approved)
    */
    public get enumConstructionSiteSubContractorTaskStatusWorkReportNotApprovedByCustomer() : string {
        return this.get(this.enumConstructionSiteSubContractorTaskStatusWorkReportNotApprovedByCustomerLanguageItemName);
    }

    /**
    /* "Enum.ConstructionSiteSubContractorTaskStatus.WorkReportNotApprovedByCustomer.Description" (Some work reports are not approved by customer)
    */
    public get enumConstructionSiteSubContractorTaskStatusWorkReportNotApprovedByCustomerDescription() : string {
        return this.get(this.enumConstructionSiteSubContractorTaskStatusWorkReportNotApprovedByCustomerDescriptionLanguageItemName);
    }

    /**
    /* "Enum.ConstructionSiteSubContractorTaskStatus.OpenTasks" (Open tasks)
    */
    public get enumConstructionSiteSubContractorTaskStatusOpenTasks() : string {
        return this.get(this.enumConstructionSiteSubContractorTaskStatusOpenTasksLanguageItemName);
    }

    /**
    /* "Enum.ConstructionSiteSubContractorTaskStatus.OpenTasks.Description" (Some tasks are not completed)
    */
    public get enumConstructionSiteSubContractorTaskStatusOpenTasksDescription() : string {
        return this.get(this.enumConstructionSiteSubContractorTaskStatusOpenTasksDescriptionLanguageItemName);
    }

    /**
    /* "Enum.ConstructionSiteSubContractorTaskStatus.TaskNotApproved" (Tasks not approved)
    */
    public get enumConstructionSiteSubContractorTaskStatusTaskNotApproved() : string {
        return this.get(this.enumConstructionSiteSubContractorTaskStatusTaskNotApprovedLanguageItemName);
    }

    /**
    /* "Enum.ConstructionSiteSubContractorTaskStatus.TaskNotApproved.Description" (Some tasks are not approved by manager)
    */
    public get enumConstructionSiteSubContractorTaskStatusTaskNotApprovedDescription() : string {
        return this.get(this.enumConstructionSiteSubContractorTaskStatusTaskNotApprovedDescriptionLanguageItemName);
    }

    /**
    /* "Enum.ConstructionSiteSubContractorTaskStatus.WorkReportNotSent" (Work reports not sent)
    */
    public get enumConstructionSiteSubContractorTaskStatusWorkReportNotSent() : string {
        return this.get(this.enumConstructionSiteSubContractorTaskStatusWorkReportNotSentLanguageItemName);
    }

    /**
    /* "Enum.ConstructionSiteSubContractorTaskStatus.WorkReportNotSent.Description" (Some work reports are not sent to customer)
    */
    public get enumConstructionSiteSubContractorTaskStatusWorkReportNotSentDescription() : string {
        return this.get(this.enumConstructionSiteSubContractorTaskStatusWorkReportNotSentDescriptionLanguageItemName);
    }

    /**
    /* "Enum.ConstructionSiteSubContractorTaskStatus.WorkReportNotInvoiced" (Work reports not invoiced)
    */
    public get enumConstructionSiteSubContractorTaskStatusWorkReportNotInvoiced() : string {
        return this.get(this.enumConstructionSiteSubContractorTaskStatusWorkReportNotInvoicedLanguageItemName);
    }

    /**
    /* "Enum.ConstructionSiteSubContractorTaskStatus.WorkReportNotInvoiced.Description" (Some work reports are not invoices)
    */
    public get enumConstructionSiteSubContractorTaskStatusWorkReportNotInvoicedDescription() : string {
        return this.get(this.enumConstructionSiteSubContractorTaskStatusWorkReportNotInvoicedDescriptionLanguageItemName);
    }

    /**
    /* "PredefinedTaskGroup.Mounter" (Extra tasks for mounters)
    */
    public get predefinedTaskGroupMounter() : string {
        return this.get(this.predefinedTaskGroupMounterLanguageItemName);
    }

    /**
    /* "PredefinedTaskGroup.Delivery" (Delivery tasks)
    */
    public get predefinedTaskGroupDelivery() : string {
        return this.get(this.predefinedTaskGroupDeliveryLanguageItemName);
    }

    /**
    /* "Enum.PredefinedExtraTask.Assembly" (Assembly)
    */
    public get enumPredefinedExtraTaskAssembly() : string {
        return this.get(this.enumPredefinedExtraTaskAssemblyLanguageItemName);
    }

    /**
    /* "Enum.PredefinedExtraTask.Dismantle" (Dismantle)
    */
    public get enumPredefinedExtraTaskDismantle() : string {
        return this.get(this.enumPredefinedExtraTaskDismantleLanguageItemName);
    }

    /**
    /* "Enum.PredefinedExtraTask.WeatherCoverOpening" (Weather cover opening)
    */
    public get enumPredefinedExtraTaskWeatherCoverOpening() : string {
        return this.get(this.enumPredefinedExtraTaskWeatherCoverOpeningLanguageItemName);
    }

    /**
    /* "Enum.PredefinedExtraTask.ExtraWork" (Extra work)
    */
    public get enumPredefinedExtraTaskExtraWork() : string {
        return this.get(this.enumPredefinedExtraTaskExtraWorkLanguageItemName);
    }

    /**
    /* "Enum.PredefinedExtraTask.ModificationWork" (Modification work)
    */
    public get enumPredefinedExtraTaskModificationWork() : string {
        return this.get(this.enumPredefinedExtraTaskModificationWorkLanguageItemName);
    }

    /**
    /* "Enum.PredefinedExtraTask.RepairWork" (Repair work)
    */
    public get enumPredefinedExtraTaskRepairWork() : string {
        return this.get(this.enumPredefinedExtraTaskRepairWorkLanguageItemName);
    }

    /**
    /* "Enum.PredefinedDeliveryTask.DeliveryTransport" (Delivery transport)
    */
    public get enumPredefinedDeliveryTaskDeliveryTransport() : string {
        return this.get(this.enumPredefinedDeliveryTaskDeliveryTransportLanguageItemName);
    }

    /**
    /* "Enum.PredefinedDeliveryTask.ReturnTransport" (Return transport)
    */
    public get enumPredefinedDeliveryTaskReturnTransport() : string {
        return this.get(this.enumPredefinedDeliveryTaskReturnTransportLanguageItemName);
    }

    /**
    /* "Enum.PredefinedDeliveryTask.PackedMaterialTransport" (Packed material transport)
    */
    public get enumPredefinedDeliveryTaskPackedMaterialTransport() : string {
        return this.get(this.enumPredefinedDeliveryTaskPackedMaterialTransportLanguageItemName);
    }

    /**
    /* "Enum.ScaffoldingLoadClassType.Class1" (Class 1)
    */
    public get enumScaffoldingLoadClassTypeClass1() : string {
        return this.get(this.enumScaffoldingLoadClassTypeClass1LanguageItemName);
    }

    /**
    /* "Enum.ScaffoldingLoadClassType.Class1.Description" (Class 1 (0.75 kN/m2))
    */
    public get enumScaffoldingLoadClassTypeClass1Description() : string {
        return this.get(this.enumScaffoldingLoadClassTypeClass1DescriptionLanguageItemName);
    }

    /**
    /* "Enum.ScaffoldingLoadClassType.Class2" (Class 2)
    */
    public get enumScaffoldingLoadClassTypeClass2() : string {
        return this.get(this.enumScaffoldingLoadClassTypeClass2LanguageItemName);
    }

    /**
    /* "Enum.ScaffoldingLoadClassType.Class2.Description" (Class 2 (1.5 kN/m2))
    */
    public get enumScaffoldingLoadClassTypeClass2Description() : string {
        return this.get(this.enumScaffoldingLoadClassTypeClass2DescriptionLanguageItemName);
    }

    /**
    /* "Enum.ScaffoldingLoadClassType.Class3" (Class 3)
    */
    public get enumScaffoldingLoadClassTypeClass3() : string {
        return this.get(this.enumScaffoldingLoadClassTypeClass3LanguageItemName);
    }

    /**
    /* "Enum.ScaffoldingLoadClassType.Class3.Description" (Class 3 (2 kN/m2))
    */
    public get enumScaffoldingLoadClassTypeClass3Description() : string {
        return this.get(this.enumScaffoldingLoadClassTypeClass3DescriptionLanguageItemName);
    }

    /**
    /* "Enum.ScaffoldingLoadClassType.Class4" (Class 4)
    */
    public get enumScaffoldingLoadClassTypeClass4() : string {
        return this.get(this.enumScaffoldingLoadClassTypeClass4LanguageItemName);
    }

    /**
    /* "Enum.ScaffoldingLoadClassType.Class4.Description" (Class 4 (3 kN/m2))
    */
    public get enumScaffoldingLoadClassTypeClass4Description() : string {
        return this.get(this.enumScaffoldingLoadClassTypeClass4DescriptionLanguageItemName);
    }

    /**
    /* "Enum.ScaffoldingLoadClassType.Class5" (Class 5)
    */
    public get enumScaffoldingLoadClassTypeClass5() : string {
        return this.get(this.enumScaffoldingLoadClassTypeClass5LanguageItemName);
    }

    /**
    /* "Enum.ScaffoldingLoadClassType.Class5.Description" (Class 5 (4.5 kN/m2))
    */
    public get enumScaffoldingLoadClassTypeClass5Description() : string {
        return this.get(this.enumScaffoldingLoadClassTypeClass5DescriptionLanguageItemName);
    }

    /**
    /* "Enum.ScaffoldingLoadClassType.Class6" (Class 6)
    */
    public get enumScaffoldingLoadClassTypeClass6() : string {
        return this.get(this.enumScaffoldingLoadClassTypeClass6LanguageItemName);
    }

    /**
    /* "Enum.ScaffoldingLoadClassType.Class6.Description" (Class 6 (6 kN/m2))
    */
    public get enumScaffoldingLoadClassTypeClass6Description() : string {
        return this.get(this.enumScaffoldingLoadClassTypeClass6DescriptionLanguageItemName);
    }

    /**
    /* "Enum.ProductUnit.Piece" (Piece)
    */
    public get enumProductUnitPiece() : string {
        return this.get(this.enumProductUnitPieceLanguageItemName);
    }

    /**
    /* "Enum.ProductUnit.Meter" (Meter)
    */
    public get enumProductUnitMeter() : string {
        return this.get(this.enumProductUnitMeterLanguageItemName);
    }

    /**
    /* "Enum.ProductUnit.Kilometer" (Kilometer)
    */
    public get enumProductUnitKilometer() : string {
        return this.get(this.enumProductUnitKilometerLanguageItemName);
    }

    /**
    /* "Enum.ProductUnit.Meter2" (Square meter)
    */
    public get enumProductUnitMeter2() : string {
        return this.get(this.enumProductUnitMeter2LanguageItemName);
    }

    /**
    /* "Enum.ProductUnit.Liter" (Liter)
    */
    public get enumProductUnitLiter() : string {
        return this.get(this.enumProductUnitLiterLanguageItemName);
    }

    /**
    /* "Enum.ProductUnit.Box" (Box)
    */
    public get enumProductUnitBox() : string {
        return this.get(this.enumProductUnitBoxLanguageItemName);
    }

    /**
    /* "Enum.ProductUnit.Pair" (Pair)
    */
    public get enumProductUnitPair() : string {
        return this.get(this.enumProductUnitPairLanguageItemName);
    }

    /**
    /* "Enum.ProductUnit.Bottle" (Bottle)
    */
    public get enumProductUnitBottle() : string {
        return this.get(this.enumProductUnitBottleLanguageItemName);
    }

    /**
    /* "Enum.ProductUnit.Can" (Can)
    */
    public get enumProductUnitCan() : string {
        return this.get(this.enumProductUnitCanLanguageItemName);
    }

    /**
    /* "Enum.ProductUnit.Bag" (Bag)
    */
    public get enumProductUnitBag() : string {
        return this.get(this.enumProductUnitBagLanguageItemName);
    }

    /**
    /* "Enum.ProductUnit.Roll" (Roll)
    */
    public get enumProductUnitRoll() : string {
        return this.get(this.enumProductUnitRollLanguageItemName);
    }

    /**
    /* "Enum.ProductUnit.Custom" (Custom)
    */
    public get enumProductUnitCustom() : string {
        return this.get(this.enumProductUnitCustomLanguageItemName);
    }

    /**
    /* "SendWorkReport.Title" (Send work report)
    */
    public get sendWorkReportTitle() : string {
        return this.get(this.sendWorkReportTitleLanguageItemName);
    }

    /**
    /* "SendWorkReport.Subtitle" (for approving by email to existing or new contact person)
    */
    public get sendWorkReportSubtitle() : string {
        return this.get(this.sendWorkReportSubtitleLanguageItemName);
    }

    /**
    /* "SendWorkReport.Dropdown.Label" (Contact person)
    */
    public get sendWorkReportDropdownLabel() : string {
        return this.get(this.sendWorkReportDropdownLabelLanguageItemName);
    }

    /**
    /* "SendWorkReport.Dropdown.NewContactPerson" (New contact person)
    */
    public get sendWorkReportDropdownNewContactPerson() : string {
        return this.get(this.sendWorkReportDropdownNewContactPersonLanguageItemName);
    }

    /**
    /* "SendWorkReport.NewContactPerson" (Create new contact person)
    */
    public get sendWorkReportNewContactPerson() : string {
        return this.get(this.sendWorkReportNewContactPersonLanguageItemName);
    }

    /**
    /* "WorkHoursWidget.Approved" (Approved)
    */
    public get workHoursWidgetApproved() : string {
        return this.get(this.workHoursWidgetApprovedLanguageItemName);
    }

    /**
    /* "WorkHoursWidget.Reported" (Reported)
    */
    public get workHoursWidgetReported() : string {
        return this.get(this.workHoursWidgetReportedLanguageItemName);
    }

    /**
    /* "WorkHoursWidget.ContractHours" (Contract hours)
    */
    public get workHoursWidgetContractHours() : string {
        return this.get(this.workHoursWidgetContractHoursLanguageItemName);
    }

    /**
    /* "WorkHoursWidget.SalaryHours" (Salary hours)
    */
    public get workHoursWidgetSalaryHours() : string {
        return this.get(this.workHoursWidgetSalaryHoursLanguageItemName);
    }

    /**
    /* "MyWorkHours.Label" (My work hours)
    */
    public get myWorkHoursLabel() : string {
        return this.get(this.myWorkHoursLabelLanguageItemName);
    }

    /**
    /* "MyWorkHours.Description" (Check reported/approved work hours)
    */
    public get myWorkHoursDescription() : string {
        return this.get(this.myWorkHoursDescriptionLanguageItemName);
    }

    /**
    /* "MyWorkHours.NoTask" (NO TASK ASSIGNED)
    */
    public get myWorkHoursNoTask() : string {
        return this.get(this.myWorkHoursNoTaskLanguageItemName);
    }

    /**
    /* "MyWorkHours.LunchHourInstructionsTitle" (Note)
    */
    public get myWorkHoursLunchHourInstructionsTitle() : string {
        return this.get(this.myWorkHoursLunchHourInstructionsTitleLanguageItemName);
    }

    /**
    /* "MyWorkHours.LunchHourInstructionsDescription" (Enter all of your working hours. Lunch hours will be calculated automatically.)
    */
    public get myWorkHoursLunchHourInstructionsDescription() : string {
        return this.get(this.myWorkHoursLunchHourInstructionsDescriptionLanguageItemName);
    }

    /**
    /* "MyWorkHours.NoReportedHours" (No reported hours for this day)
    */
    public get myWorkHoursNoReportedHours() : string {
        return this.get(this.myWorkHoursNoReportedHoursLanguageItemName);
    }

    /**
    /* "Enum.PaymentTermsCode.P0" (0 days net)
    */
    public get enumPaymentTermsCodeP0() : string {
        return this.get(this.enumPaymentTermsCodeP0LanguageItemName);
    }

    /**
    /* "Enum.PaymentTermsCode.P14" (14 days net)
    */
    public get enumPaymentTermsCodeP14() : string {
        return this.get(this.enumPaymentTermsCodeP14LanguageItemName);
    }

    /**
    /* "Enum.PaymentTermsCode.P21" (21 days net)
    */
    public get enumPaymentTermsCodeP21() : string {
        return this.get(this.enumPaymentTermsCodeP21LanguageItemName);
    }

    /**
    /* "Enum.PaymentTermsCode.P30" (30 days net)
    */
    public get enumPaymentTermsCodeP30() : string {
        return this.get(this.enumPaymentTermsCodeP30LanguageItemName);
    }

    /**
    /* "Enum.PaymentTermsCode.P45" (45 days net)
    */
    public get enumPaymentTermsCodeP45() : string {
        return this.get(this.enumPaymentTermsCodeP45LanguageItemName);
    }

    /**
    /* "Enum.PaymentTermsCode.P60" (60 days net)
    */
    public get enumPaymentTermsCodeP60() : string {
        return this.get(this.enumPaymentTermsCodeP60LanguageItemName);
    }

    /**
    /* "Enum.PaymentTermsCode.P7" (7 days net)
    */
    public get enumPaymentTermsCodeP7() : string {
        return this.get(this.enumPaymentTermsCodeP7LanguageItemName);
    }

    /**
    /* "Enum.InvoiceState.Created" (Created)
    */
    public get enumInvoiceStateCreated() : string {
        return this.get(this.enumInvoiceStateCreatedLanguageItemName);
    }

    /**
    /* "Enum.InvoiceState.Created.Description" (Create by manager, not approved)
    */
    public get enumInvoiceStateCreatedDescription() : string {
        return this.get(this.enumInvoiceStateCreatedDescriptionLanguageItemName);
    }

    /**
    /* "Enum.InvoiceState.Approved" (Approved)
    */
    public get enumInvoiceStateApproved() : string {
        return this.get(this.enumInvoiceStateApprovedLanguageItemName);
    }

    /**
    /* "Enum.InvoiceState.Approved.Description" (Invoice approved by manager)
    */
    public get enumInvoiceStateApprovedDescription() : string {
        return this.get(this.enumInvoiceStateApprovedDescriptionLanguageItemName);
    }

    /**
    /* "Enum.InvoiceState.Sent" (Sent)
    */
    public get enumInvoiceStateSent() : string {
        return this.get(this.enumInvoiceStateSentLanguageItemName);
    }

    /**
    /* "Enum.InvoiceState.Sent.Description" (Invoice sent to invoicing system)
    */
    public get enumInvoiceStateSentDescription() : string {
        return this.get(this.enumInvoiceStateSentDescriptionLanguageItemName);
    }

    /**
    /* "Enum.InvoiceState.Processed" (Processed)
    */
    public get enumInvoiceStateProcessed() : string {
        return this.get(this.enumInvoiceStateProcessedLanguageItemName);
    }

    /**
    /* "Enum.InvoiceState.Processed.Description" (Successfully processed by invoicing system)
    */
    public get enumInvoiceStateProcessedDescription() : string {
        return this.get(this.enumInvoiceStateProcessedDescriptionLanguageItemName);
    }

    /**
    /* "Enum.InvoiceState.Failed" (Failed)
    */
    public get enumInvoiceStateFailed() : string {
        return this.get(this.enumInvoiceStateFailedLanguageItemName);
    }

    /**
    /* "Enum.InvoiceState.Failed.Description" (Failed during processing by invoicing system)
    */
    public get enumInvoiceStateFailedDescription() : string {
        return this.get(this.enumInvoiceStateFailedDescriptionLanguageItemName);
    }

    /**
    /* "Enum.InvoiceStateFilter.Created" (Created)
    */
    public get enumInvoiceStateFilterCreated() : string {
        return this.get(this.enumInvoiceStateFilterCreatedLanguageItemName);
    }

    /**
    /* "Enum.InvoiceStateFilter.Created.Description" (Create by manager, not approved)
    */
    public get enumInvoiceStateFilterCreatedDescription() : string {
        return this.get(this.enumInvoiceStateFilterCreatedDescriptionLanguageItemName);
    }

    /**
    /* "Enum.InvoiceStateFilter.Approved" (Approved)
    */
    public get enumInvoiceStateFilterApproved() : string {
        return this.get(this.enumInvoiceStateFilterApprovedLanguageItemName);
    }

    /**
    /* "Enum.InvoiceStateFilter.Approved.Description" (Invoice approved by manager)
    */
    public get enumInvoiceStateFilterApprovedDescription() : string {
        return this.get(this.enumInvoiceStateFilterApprovedDescriptionLanguageItemName);
    }

    /**
    /* "Enum.InvoiceStateFilter.Sent" (Sent)
    */
    public get enumInvoiceStateFilterSent() : string {
        return this.get(this.enumInvoiceStateFilterSentLanguageItemName);
    }

    /**
    /* "Enum.InvoiceStateFilter.Sent.Description" (Invoice sent to invoicing system)
    */
    public get enumInvoiceStateFilterSentDescription() : string {
        return this.get(this.enumInvoiceStateFilterSentDescriptionLanguageItemName);
    }

    /**
    /* "Enum.InvoiceStateFilter.Processed" (Processed)
    */
    public get enumInvoiceStateFilterProcessed() : string {
        return this.get(this.enumInvoiceStateFilterProcessedLanguageItemName);
    }

    /**
    /* "Enum.InvoiceStateFilter.Processed.Description" (Successfully processed by invoicing system)
    */
    public get enumInvoiceStateFilterProcessedDescription() : string {
        return this.get(this.enumInvoiceStateFilterProcessedDescriptionLanguageItemName);
    }

    /**
    /* "Enum.InvoiceStateFilter.Failed" (Failed)
    */
    public get enumInvoiceStateFilterFailed() : string {
        return this.get(this.enumInvoiceStateFilterFailedLanguageItemName);
    }

    /**
    /* "Enum.InvoiceStateFilter.Failed.Description" (Failed during processing by invoicing system)
    */
    public get enumInvoiceStateFilterFailedDescription() : string {
        return this.get(this.enumInvoiceStateFilterFailedDescriptionLanguageItemName);
    }

    /**
    /* "Enum.InvoiceStateFilter.Locked" (Locked)
    */
    public get enumInvoiceStateFilterLocked() : string {
        return this.get(this.enumInvoiceStateFilterLockedLanguageItemName);
    }

    /**
    /* "Enum.InvoiceStateFilter.Locked.Description" (An invoice marked as locked and ready to be sent)
    */
    public get enumInvoiceStateFilterLockedDescription() : string {
        return this.get(this.enumInvoiceStateFilterLockedDescriptionLanguageItemName);
    }

    /**
    /* "Enum.InvoiceType.Debit" (Debit)
    */
    public get enumInvoiceTypeDebit() : string {
        return this.get(this.enumInvoiceTypeDebitLanguageItemName);
    }

    /**
    /* "Enum.InvoiceType.Credit" (Credit)
    */
    public get enumInvoiceTypeCredit() : string {
        return this.get(this.enumInvoiceTypeCreditLanguageItemName);
    }

    /**
    /* "Enum.InvoiceRowType.ContractTask" (Contract task)
    */
    public get enumInvoiceRowTypeContractTask() : string {
        return this.get(this.enumInvoiceRowTypeContractTaskLanguageItemName);
    }

    /**
    /* "Enum.InvoiceRowType.ContractTask.Description" (3030)
    */
    public get enumInvoiceRowTypeContractTaskDescription() : string {
        return this.get(this.enumInvoiceRowTypeContractTaskDescriptionLanguageItemName);
    }

    /**
    /* "Enum.InvoiceRowType.Rent" (Rent)
    */
    public get enumInvoiceRowTypeRent() : string {
        return this.get(this.enumInvoiceRowTypeRentLanguageItemName);
    }

    /**
    /* "Enum.InvoiceRowType.Rent.Description" (3000)
    */
    public get enumInvoiceRowTypeRentDescription() : string {
        return this.get(this.enumInvoiceRowTypeRentDescriptionLanguageItemName);
    }

    /**
    /* "Enum.InvoiceRowType.ExtraRent" (Extra rent)
    */
    public get enumInvoiceRowTypeExtraRent() : string {
        return this.get(this.enumInvoiceRowTypeExtraRentLanguageItemName);
    }

    /**
    /* "Enum.InvoiceRowType.WorkReport" (Work report)
    */
    public get enumInvoiceRowTypeWorkReport() : string {
        return this.get(this.enumInvoiceRowTypeWorkReportLanguageItemName);
    }

    /**
    /* "Enum.InvoiceRowType.WorkReport.Description" (3020)
    */
    public get enumInvoiceRowTypeWorkReportDescription() : string {
        return this.get(this.enumInvoiceRowTypeWorkReportDescriptionLanguageItemName);
    }

    /**
    /* "Enum.InvoiceRowType.WorkReports" (Work reports)
    */
    public get enumInvoiceRowTypeWorkReports() : string {
        return this.get(this.enumInvoiceRowTypeWorkReportsLanguageItemName);
    }

    /**
    /* "Enum.InvoiceRowType.TaskEquipment" (Equipment)
    */
    public get enumInvoiceRowTypeTaskEquipment() : string {
        return this.get(this.enumInvoiceRowTypeTaskEquipmentLanguageItemName);
    }

    /**
    /* "Enum.InvoiceRowType.TaskEquipment.Description" (3050)
    */
    public get enumInvoiceRowTypeTaskEquipmentDescription() : string {
        return this.get(this.enumInvoiceRowTypeTaskEquipmentDescriptionLanguageItemName);
    }

    /**
    /* "Enum.InvoiceRowType.TaskExtraCharge" (Extra charge)
    */
    public get enumInvoiceRowTypeTaskExtraCharge() : string {
        return this.get(this.enumInvoiceRowTypeTaskExtraChargeLanguageItemName);
    }

    /**
    /* "Enum.ManualInvoiceRowType.ContractTask" (3030)
    */
    public get enumManualInvoiceRowTypeContractTask() : string {
        return this.get(this.enumManualInvoiceRowTypeContractTaskLanguageItemName);
    }

    /**
    /* "Enum.ManualInvoiceRowType.ContractTask.Description" (Contract task)
    */
    public get enumManualInvoiceRowTypeContractTaskDescription() : string {
        return this.get(this.enumManualInvoiceRowTypeContractTaskDescriptionLanguageItemName);
    }

    /**
    /* "Enum.ManualInvoiceRowType.Rent" (3000)
    */
    public get enumManualInvoiceRowTypeRent() : string {
        return this.get(this.enumManualInvoiceRowTypeRentLanguageItemName);
    }

    /**
    /* "Enum.ManualInvoiceRowType.Rent.Description" (Rent)
    */
    public get enumManualInvoiceRowTypeRentDescription() : string {
        return this.get(this.enumManualInvoiceRowTypeRentDescriptionLanguageItemName);
    }

    /**
    /* "Enum.ManualInvoiceRowType.WorkReport" (3020)
    */
    public get enumManualInvoiceRowTypeWorkReport() : string {
        return this.get(this.enumManualInvoiceRowTypeWorkReportLanguageItemName);
    }

    /**
    /* "Enum.ManualInvoiceRowType.WorkReport.Description" (WorkReport)
    */
    public get enumManualInvoiceRowTypeWorkReportDescription() : string {
        return this.get(this.enumManualInvoiceRowTypeWorkReportDescriptionLanguageItemName);
    }

    /**
    /* "Enum.ManualInvoiceRowType.TaskEquipment" (3050)
    */
    public get enumManualInvoiceRowTypeTaskEquipment() : string {
        return this.get(this.enumManualInvoiceRowTypeTaskEquipmentLanguageItemName);
    }

    /**
    /* "Enum.ManualInvoiceRowType.TaskEquipment.Description" (Equipment)
    */
    public get enumManualInvoiceRowTypeTaskEquipmentDescription() : string {
        return this.get(this.enumManualInvoiceRowTypeTaskEquipmentDescriptionLanguageItemName);
    }

    /**
    /* "Grid.NoItems" (No items)
    */
    public get gridNoItems() : string {
        return this.get(this.gridNoItemsLanguageItemName);
    }

    /**
    /* "Grid.NoData.Invoices" (No invoices)
    */
    public get gridNoDataInvoices() : string {
        return this.get(this.gridNoDataInvoicesLanguageItemName);
    }

    /**
    /* "Grid.NoData.InvoiceRows" (No invoice rows have been created yet)
    */
    public get gridNoDataInvoiceRows() : string {
        return this.get(this.gridNoDataInvoiceRowsLanguageItemName);
    }

    /**
    /* "Grid.NoData.Modules" (No modules have been created yet)
    */
    public get gridNoDataModules() : string {
        return this.get(this.gridNoDataModulesLanguageItemName);
    }

    /**
    /* "Grid.NoData.Tasks" (No tasks have been created yet)
    */
    public get gridNoDataTasks() : string {
        return this.get(this.gridNoDataTasksLanguageItemName);
    }

    /**
    /* "Grid.NoData.Subcontractors" (No subcontractors)
    */
    public get gridNoDataSubcontractors() : string {
        return this.get(this.gridNoDataSubcontractorsLanguageItemName);
    }

    /**
    /* "Grid.NoData.WorkReports" (No work reports have been created yet)
    */
    public get gridNoDataWorkReports() : string {
        return this.get(this.gridNoDataWorkReportsLanguageItemName);
    }

    /**
    /* "DocumentPreviewModal.Invoice.Title" (Invoice preview)
    */
    public get documentPreviewModalInvoiceTitle() : string {
        return this.get(this.documentPreviewModalInvoiceTitleLanguageItemName);
    }

    /**
    /* "DocumentPreviewModal.WorkReport.Title" (Work report preview)
    */
    public get documentPreviewModalWorkReportTitle() : string {
        return this.get(this.documentPreviewModalWorkReportTitleLanguageItemName);
    }

    /**
    /* "Component.Footer.Contact" (Contact information)
    */
    public get componentFooterContact() : string {
        return this.get(this.componentFooterContactLanguageItemName);
    }

    /**
    /* "Component.Footer.Frontpage" (Frontpage)
    */
    public get componentFooterFrontpage() : string {
        return this.get(this.componentFooterFrontpageLanguageItemName);
    }

    /**
    /* "Component.List.Loading" (Loading...)
    */
    public get componentListLoading() : string {
        return this.get(this.componentListLoadingLanguageItemName);
    }

    /**
    /* "WorkDayPanel.HalfDayAllowance" (Half of the day)
    */
    public get workDayPanelHalfDayAllowance() : string {
        return this.get(this.workDayPanelHalfDayAllowanceLanguageItemName);
    }

    /**
    /* "WorkDayPanel.WorkDayType" (Type)
    */
    public get workDayPanelWorkDayType() : string {
        return this.get(this.workDayPanelWorkDayTypeLanguageItemName);
    }

    /**
    /* "WorkDayPanel.SalaryHours" (Salary \nhours)
    */
    public get workDayPanelSalaryHours() : string {
        return this.get(this.workDayPanelSalaryHoursLanguageItemName);
    }

    /**
    /* "WorkDayPanel.SalaryHours.Description" (Hours to be transferred to payroll)
    */
    public get workDayPanelSalaryHoursDescription() : string {
        return this.get(this.workDayPanelSalaryHoursDescriptionLanguageItemName);
    }

    /**
    /* "AddTaskModal.WorkReport" (Work Report)
    */
    public get addTaskModalWorkReport() : string {
        return this.get(this.addTaskModalWorkReportLanguageItemName);
    }

    /**
    /* "AddTaskModal.PriceEuro" (Price, €)
    */
    public get addTaskModalPriceEuro() : string {
        return this.get(this.addTaskModalPriceEuroLanguageItemName);
    }

    /**
    /* "AddTaskModal.CostEuro" (Cost, €)
    */
    public get addTaskModalCostEuro() : string {
        return this.get(this.addTaskModalCostEuroLanguageItemName);
    }

    /**
    /* "AddTaskModal.SiteOrWarehouse" (Site or warehouse)
    */
    public get addTaskModalSiteOrWarehouse() : string {
        return this.get(this.addTaskModalSiteOrWarehouseLanguageItemName);
    }

    /**
    /* "AddTaskModal.Agreement" (Agreement)
    */
    public get addTaskModalAgreement() : string {
        return this.get(this.addTaskModalAgreementLanguageItemName);
    }

    /**
    /* "AddTaskModal.ExtraHours.AutoCalculated" (Auto calculated)
    */
    public get addTaskModalExtraHoursAutoCalculated() : string {
        return this.get(this.addTaskModalExtraHoursAutoCalculatedLanguageItemName);
    }

    /**
    /* "AddWorkReportModal.CreateNewReport" (Create new work report)
    */
    public get addWorkReportModalCreateNewReport() : string {
        return this.get(this.addWorkReportModalCreateNewReportLanguageItemName);
    }

    /**
    /* "AddWorkReportModal.Attachments" (Attachments)
    */
    public get addWorkReportModalAttachments() : string {
        return this.get(this.addWorkReportModalAttachmentsLanguageItemName);
    }

    /**
    /* "AddWorkReportModal.AttachmentRemoveConfirmation" (Are you sure that you want to remove attachment file?)
    */
    public get addWorkReportModalAttachmentRemoveConfirmation() : string {
        return this.get(this.addWorkReportModalAttachmentRemoveConfirmationLanguageItemName);
    }

    /**
    /* "AddWorkReportModal.CreateNewReportSubtitle" (And fill it with invoicing material)
    */
    public get addWorkReportModalCreateNewReportSubtitle() : string {
        return this.get(this.addWorkReportModalCreateNewReportSubtitleLanguageItemName);
    }

    /**
    /* "AddWorkReportModal.Validation.CreateWorkReportFirst" (Create work report first to enable creating new tasks functionality)
    */
    public get addWorkReportModalValidationCreateWorkReportFirst() : string {
        return this.get(this.addWorkReportModalValidationCreateWorkReportFirstLanguageItemName);
    }

    /**
    /* "AddWorkReportModal.Grid.ExtraCharges" (Extra charges)
    */
    public get addWorkReportModalGridExtraCharges() : string {
        return this.get(this.addWorkReportModalGridExtraChargesLanguageItemName);
    }

    /**
    /* "AddWorkReportModal.Grid.ExtraCharges.Title" (Sum of task extra charges costs)
    */
    public get addWorkReportModalGridExtraChargesTitle() : string {
        return this.get(this.addWorkReportModalGridExtraChargesTitleLanguageItemName);
    }

    /**
    /* "TaskHoursPanel.Hours" (Hours)
    */
    public get taskHoursPanelHours() : string {
        return this.get(this.taskHoursPanelHoursLanguageItemName);
    }

    /**
    /* "TaskHoursPanel.HoursInfo" (Automatically counted hours)
    */
    public get taskHoursPanelHoursInfo() : string {
        return this.get(this.taskHoursPanelHoursInfoLanguageItemName);
    }

    /**
    /* "TaskHoursPanel.ExtraHours" (Extra \n hours)
    */
    public get taskHoursPanelExtraHours() : string {
        return this.get(this.taskHoursPanelExtraHoursLanguageItemName);
    }

    /**
    /* "TaskHoursPanel.ExtraHoursInfo" (Extra hours, reported by mounter for the task)
    */
    public get taskHoursPanelExtraHoursInfo() : string {
        return this.get(this.taskHoursPanelExtraHoursInfoLanguageItemName);
    }

    /**
    /* "TaskHoursPanel.Overtime" (Overtime)
    */
    public get taskHoursPanelOvertime() : string {
        return this.get(this.taskHoursPanelOvertimeLanguageItemName);
    }

    /**
    /* "TaskHoursPanel.ContractHours" (Hours)
    */
    public get taskHoursPanelContractHours() : string {
        return this.get(this.taskHoursPanelContractHoursLanguageItemName);
    }

    /**
    /* "TaskHoursPanel.ContractHoursPrice" (Price, €/h)
    */
    public get taskHoursPanelContractHoursPrice() : string {
        return this.get(this.taskHoursPanelContractHoursPriceLanguageItemName);
    }

    /**
    /* "TaskHoursPanel.ContractHoursPriceInfo" (Contract cost €)
    */
    public get taskHoursPanelContractHoursPriceInfo() : string {
        return this.get(this.taskHoursPanelContractHoursPriceInfoLanguageItemName);
    }

    /**
    /* "TaskHoursPanel.NoAccessToHours" (Task contains hours that you do not have access to)
    */
    public get taskHoursPanelNoAccessToHours() : string {
        return this.get(this.taskHoursPanelNoAccessToHoursLanguageItemName);
    }

    /**
    /* "AddTaskModal.Mounters" (Mounters)
    */
    public get addTaskModalMounters() : string {
        return this.get(this.addTaskModalMountersLanguageItemName);
    }

    /**
    /* "AddTaskModal.Name" (Name)
    */
    public get addTaskModalName() : string {
        return this.get(this.addTaskModalNameLanguageItemName);
    }

    /**
    /* "TasksPanel.Date" (Date)
    */
    public get tasksPanelDate() : string {
        return this.get(this.tasksPanelDateLanguageItemName);
    }

    /**
    /* "TasksPanel.CreateModule" (Create module)
    */
    public get tasksPanelCreateModule() : string {
        return this.get(this.tasksPanelCreateModuleLanguageItemName);
    }

    /**
    /* "TasksPanel.CreateExtraModule" (Create extra module)
    */
    public get tasksPanelCreateExtraModule() : string {
        return this.get(this.tasksPanelCreateExtraModuleLanguageItemName);
    }

    /**
    /* "TasksPanel.Cost" (Cost)
    */
    public get tasksPanelCost() : string {
        return this.get(this.tasksPanelCostLanguageItemName);
    }

    /**
    /* "TasksPanel.Price" (Price)
    */
    public get tasksPanelPrice() : string {
        return this.get(this.tasksPanelPriceLanguageItemName);
    }

    /**
    /* "TasksPanel.DeleteTask" (Delete task)
    */
    public get tasksPanelDeleteTask() : string {
        return this.get(this.tasksPanelDeleteTaskLanguageItemName);
    }

    /**
    /* "TasksPanel.CommitChanges" (Save changes)
    */
    public get tasksPanelCommitChanges() : string {
        return this.get(this.tasksPanelCommitChangesLanguageItemName);
    }

    /**
    /* "TasksPanel.CancelChanges" (Cancel changes)
    */
    public get tasksPanelCancelChanges() : string {
        return this.get(this.tasksPanelCancelChangesLanguageItemName);
    }

    /**
    /* "TasksPanel.DeleteHours" (Delete hours)
    */
    public get tasksPanelDeleteHours() : string {
        return this.get(this.tasksPanelDeleteHoursLanguageItemName);
    }

    /**
    /* "TasksPanel.RentTabTitle" (Rent)
    */
    public get tasksPanelRentTabTitle() : string {
        return this.get(this.tasksPanelRentTabTitleLanguageItemName);
    }

    /**
    /* "TasksPanel.Agreement" (Agreement)
    */
    public get tasksPanelAgreement() : string {
        return this.get(this.tasksPanelAgreementLanguageItemName);
    }

    /**
    /* "TaskTooltips.NewTask" (New work order)
    */
    public get taskTooltipsNewTask() : string {
        return this.get(this.taskTooltipsNewTaskLanguageItemName);
    }

    /**
    /* "TaskTooltips.TaskInProgress" (Task in process)
    */
    public get taskTooltipsTaskInProgress() : string {
        return this.get(this.taskTooltipsTaskInProgressLanguageItemName);
    }

    /**
    /* "TaskTooltips.TaskWaitingActivation" (Task is waiting for activation date)
    */
    public get taskTooltipsTaskWaitingActivation() : string {
        return this.get(this.taskTooltipsTaskWaitingActivationLanguageItemName);
    }

    /**
    /* "TaskTooltips.TaskApproved" (Task is completed and approved)
    */
    public get taskTooltipsTaskApproved() : string {
        return this.get(this.taskTooltipsTaskApprovedLanguageItemName);
    }

    /**
    /* "TaskTooltips.TaskDeclined" (Work order is declined by customer)
    */
    public get taskTooltipsTaskDeclined() : string {
        return this.get(this.taskTooltipsTaskDeclinedLanguageItemName);
    }

    /**
    /* "TaskTooltips.TaskWaitingApproval" (Task is completed, waiting for approving)
    */
    public get taskTooltipsTaskWaitingApproval() : string {
        return this.get(this.taskTooltipsTaskWaitingApprovalLanguageItemName);
    }

    /**
    /* "TaskTooltips.TaskInvoiced" (Task is invoiced)
    */
    public get taskTooltipsTaskInvoiced() : string {
        return this.get(this.taskTooltipsTaskInvoicedLanguageItemName);
    }

    /**
    /* "TaskTooltips.TaskReadyForInvoicing" (Task is ready to be invoiced (invoice row created and approved))
    */
    public get taskTooltipsTaskReadyForInvoicing() : string {
        return this.get(this.taskTooltipsTaskReadyForInvoicingLanguageItemName);
    }

    /**
    /* "TaskHoursPanel.FixedPrice" (Fixed price, €)
    */
    public get taskHoursPanelFixedPrice() : string {
        return this.get(this.taskHoursPanelFixedPriceLanguageItemName);
    }

    /**
    /* "TasksPanel.InfoMounterHours" (Information about mounter's hours, commited to the task)
    */
    public get tasksPanelInfoMounterHours() : string {
        return this.get(this.tasksPanelInfoMounterHoursLanguageItemName);
    }

    /**
    /* "TasksPanel.Start" (Start)
    */
    public get tasksPanelStart() : string {
        return this.get(this.tasksPanelStartLanguageItemName);
    }

    /**
    /* "TasksPanel.Name" (Name)
    */
    public get tasksPanelName() : string {
        return this.get(this.tasksPanelNameLanguageItemName);
    }

    /**
    /* "TasksPanel.StartInfo" (Activation date (date when task is started))
    */
    public get tasksPanelStartInfo() : string {
        return this.get(this.tasksPanelStartInfoLanguageItemName);
    }

    /**
    /* "TasksPanel.Done" (Done)
    */
    public get tasksPanelDone() : string {
        return this.get(this.tasksPanelDoneLanguageItemName);
    }

    /**
    /* "TasksPanel.AddTaskTitle" (Add task)
    */
    public get tasksPanelAddTaskTitle() : string {
        return this.get(this.tasksPanelAddTaskTitleLanguageItemName);
    }

    /**
    /* "TasksPanel.AddWorkReportTitle" (Add work report)
    */
    public get tasksPanelAddWorkReportTitle() : string {
        return this.get(this.tasksPanelAddWorkReportTitleLanguageItemName);
    }

    /**
    /* "TasksPanel.ChangeWorkReportTitle" (Change Work Report)
    */
    public get tasksPanelChangeWorkReportTitle() : string {
        return this.get(this.tasksPanelChangeWorkReportTitleLanguageItemName);
    }

    /**
    /* "TasksPanel.SaveWorkReportTitle" (Save Work Report)
    */
    public get tasksPanelSaveWorkReportTitle() : string {
        return this.get(this.tasksPanelSaveWorkReportTitleLanguageItemName);
    }

    /**
    /* "TasksPanel.Forecast" (Forecast)
    */
    public get tasksPanelForecast() : string {
        return this.get(this.tasksPanelForecastLanguageItemName);
    }

    /**
    /* "TasksPanel.ForecastInfo" (Date when task should be completed (contract date))
    */
    public get tasksPanelForecastInfo() : string {
        return this.get(this.tasksPanelForecastInfoLanguageItemName);
    }

    /**
    /* "TasksPanel.ExtraHoursInfo" (Task extra hours, automatically calculated based on mounters entered extra hours)
    */
    public get tasksPanelExtraHoursInfo() : string {
        return this.get(this.tasksPanelExtraHoursInfoLanguageItemName);
    }

    /**
    /* "TasksPanel.Actions" (Actions)
    */
    public get tasksPanelActions() : string {
        return this.get(this.tasksPanelActionsLanguageItemName);
    }

    /**
    /* "TasksPanel.CompleteTask" (Complete Task)
    */
    public get tasksPanelCompleteTask() : string {
        return this.get(this.tasksPanelCompleteTaskLanguageItemName);
    }

    /**
    /* "TasksPanel.ActivateTask" (Activate Task)
    */
    public get tasksPanelActivateTask() : string {
        return this.get(this.tasksPanelActivateTaskLanguageItemName);
    }

    /**
    /* "TasksPanel.ApproveTaskCreate" (Approve task to create a invoice row)
    */
    public get tasksPanelApproveTaskCreate() : string {
        return this.get(this.tasksPanelApproveTaskCreateLanguageItemName);
    }

    /**
    /* "TasksPanel.RestoreTask" (Restore deleted task)
    */
    public get tasksPanelRestoreTask() : string {
        return this.get(this.tasksPanelRestoreTaskLanguageItemName);
    }

    /**
    /* "TasksPanel.Code" (Code)
    */
    public get tasksPanelCode() : string {
        return this.get(this.tasksPanelCodeLanguageItemName);
    }

    /**
    /* "TasksPanel.WorkReportDescription" (Description of the work report)
    */
    public get tasksPanelWorkReportDescription() : string {
        return this.get(this.tasksPanelWorkReportDescriptionLanguageItemName);
    }

    /**
    /* "TasksPanel.Type" (Type)
    */
    public get tasksPanelType() : string {
        return this.get(this.tasksPanelTypeLanguageItemName);
    }

    /**
    /* "TasksPanel.Tasks" (Tasks)
    */
    public get tasksPanelTasks() : string {
        return this.get(this.tasksPanelTasksLanguageItemName);
    }

    /**
    /* "TasksPanel.ExtraModuleCreated" (Extra module has been successfully created)
    */
    public get tasksPanelExtraModuleCreated() : string {
        return this.get(this.tasksPanelExtraModuleCreatedLanguageItemName);
    }

    /**
    /* "TasksPanel.Confirmation.ExtraModule" (Are you sure that you want to create extra module for this task?)
    */
    public get tasksPanelConfirmationExtraModule() : string {
        return this.get(this.tasksPanelConfirmationExtraModuleLanguageItemName);
    }

    /**
    /* "AddTaskModal.Description" (Description)
    */
    public get addTaskModalDescription() : string {
        return this.get(this.addTaskModalDescriptionLanguageItemName);
    }

    /**
    /* "AddTaskModal.AddTask" (Add task)
    */
    public get addTaskModalAddTask() : string {
        return this.get(this.addTaskModalAddTaskLanguageItemName);
    }

    /**
    /* "AddTaskModal.CreateTask" (Create task)
    */
    public get addTaskModalCreateTask() : string {
        return this.get(this.addTaskModalCreateTaskLanguageItemName);
    }

    /**
    /* "AddTaskModal.CreateAndContinue" (Create and continue)
    */
    public get addTaskModalCreateAndContinue() : string {
        return this.get(this.addTaskModalCreateAndContinueLanguageItemName);
    }

    /**
    /* "AddTaskModal.CreateAndClose" (Create and close)
    */
    public get addTaskModalCreateAndClose() : string {
        return this.get(this.addTaskModalCreateAndCloseLanguageItemName);
    }

    /**
    /* "AddTaskModal.Validation.CreateTaskFirst" (Create task first to enable mounter hours and extra charges functionality)
    */
    public get addTaskModalValidationCreateTaskFirst() : string {
        return this.get(this.addTaskModalValidationCreateTaskFirstLanguageItemName);
    }

    /**
    /* "AddTaskModal.Validation.CreateWorkReportFirst" (Save work report first to enable mounter hours and extra charges functionality)
    */
    public get addTaskModalValidationCreateWorkReportFirst() : string {
        return this.get(this.addTaskModalValidationCreateWorkReportFirstLanguageItemName);
    }

    /**
    /* "AddTaskModal.Delete" (Delete)
    */
    public get addTaskModalDelete() : string {
        return this.get(this.addTaskModalDeleteLanguageItemName);
    }

    /**
    /* "AddTaskModal.ExtraHours" (Extra hours)
    */
    public get addTaskModalExtraHours() : string {
        return this.get(this.addTaskModalExtraHoursLanguageItemName);
    }

    /**
    /* "AddTaskModal.Delete.Confirm" (Do you really want to delete this task?)
    */
    public get addTaskModalDeleteConfirm() : string {
        return this.get(this.addTaskModalDeleteConfirmLanguageItemName);
    }

    /**
    /* "AddTaskModal.ChangeTask" (Edit task)
    */
    public get addTaskModalChangeTask() : string {
        return this.get(this.addTaskModalChangeTaskLanguageItemName);
    }

    /**
    /* "AddTaskModal.SaveTask" (Save task)
    */
    public get addTaskModalSaveTask() : string {
        return this.get(this.addTaskModalSaveTaskLanguageItemName);
    }

    /**
    /* "WorkDayPanel.AutoDistance" (Auto distance\nkm)
    */
    public get workDayPanelAutoDistance() : string {
        return this.get(this.workDayPanelAutoDistanceLanguageItemName);
    }

    /**
    /* "WorkDayPanel.WorkingHours" (Hours)
    */
    public get workDayPanelWorkingHours() : string {
        return this.get(this.workDayPanelWorkingHoursLanguageItemName);
    }

    /**
    /* "InvoiceExportModal.SendToNav" (Send To Nav)
    */
    public get invoiceExportModalSendToNav() : string {
        return this.get(this.invoiceExportModalSendToNavLanguageItemName);
    }

    /**
    /* "AddTaskModal.AddTaskSubtitle" (Add new task for construction site and assign mounters)
    */
    public get addTaskModalAddTaskSubtitle() : string {
        return this.get(this.addTaskModalAddTaskSubtitleLanguageItemName);
    }

    /**
    /* "AddConstructionsite.SalesPerson" (Sales person)
    */
    public get addConstructionsiteSalesPerson() : string {
        return this.get(this.addConstructionsiteSalesPersonLanguageItemName);
    }

    /**
    /* "AddConstructionsite.Title" (Add construction site)
    */
    public get addConstructionsiteTitle() : string {
        return this.get(this.addConstructionsiteTitleLanguageItemName);
    }

    /**
    /* "AddConstructionsite.AddSite" (Add site)
    */
    public get addConstructionsiteAddSite() : string {
        return this.get(this.addConstructionsiteAddSiteLanguageItemName);
    }

    /**
    /* "AddConstructionsite.Flyout" (Construction site has been created)
    */
    public get addConstructionsiteFlyout() : string {
        return this.get(this.addConstructionsiteFlyoutLanguageItemName);
    }

    /**
    /* "AddConstructionsite.Redirect" (Redirect to construction site page)
    */
    public get addConstructionsiteRedirect() : string {
        return this.get(this.addConstructionsiteRedirectLanguageItemName);
    }

    /**
    /* "AddConstructionsiteToolbar.AllManagers" (All managers)
    */
    public get addConstructionsiteToolbarAllManagers() : string {
        return this.get(this.addConstructionsiteToolbarAllManagersLanguageItemName);
    }

    /**
    /* "AddConstructionsiteToolbar.AllSalesPersons" (All sales persons)
    */
    public get addConstructionsiteToolbarAllSalesPersons() : string {
        return this.get(this.addConstructionsiteToolbarAllSalesPersonsLanguageItemName);
    }

    /**
    /* "ConstructionSitesToolbar.Customer" (Customer)
    */
    public get constructionSitesToolbarCustomer() : string {
        return this.get(this.constructionSitesToolbarCustomerLanguageItemName);
    }

    /**
    /* "AddConstructionsiteToolbar.Site" (Site)
    */
    public get addConstructionsiteToolbarSite() : string {
        return this.get(this.addConstructionsiteToolbarSiteLanguageItemName);
    }

    /**
    /* "AddConstructionsiteToolbar.AnyStatus" (Any status)
    */
    public get addConstructionsiteToolbarAnyStatus() : string {
        return this.get(this.addConstructionsiteToolbarAnyStatusLanguageItemName);
    }

    /**
    /* "AddConstructionsiteToolbar.AnyTaskStatus" (Any task status)
    */
    public get addConstructionsiteToolbarAnyTaskStatus() : string {
        return this.get(this.addConstructionsiteToolbarAnyTaskStatusLanguageItemName);
    }

    /**
    /* "AddConstructionsiteToolbar.AnySubTaskStatus" (Any subcontractor task status)
    */
    public get addConstructionsiteToolbarAnySubTaskStatus() : string {
        return this.get(this.addConstructionsiteToolbarAnySubTaskStatusLanguageItemName);
    }

    /**
    /* "AddConstructionsiteToolbar.Filter" (Filter)
    */
    public get addConstructionsiteToolbarFilter() : string {
        return this.get(this.addConstructionsiteToolbarFilterLanguageItemName);
    }

    /**
    /* "AddConstructionsiteToolbar.ClearFilter" (Clear filter)
    */
    public get addConstructionsiteToolbarClearFilter() : string {
        return this.get(this.addConstructionsiteToolbarClearFilterLanguageItemName);
    }

    /**
    /* "ConstructionSites.ToolBar.CustomerFilter" (Customer / no.)
    */
    public get constructionSitesToolBarCustomerFilter() : string {
        return this.get(this.constructionSitesToolBarCustomerFilterLanguageItemName);
    }

    /**
    /* "ConstructionSites.ToolBar.SiteFilter" (Site / no.)
    */
    public get constructionSitesToolBarSiteFilter() : string {
        return this.get(this.constructionSitesToolBarSiteFilterLanguageItemName);
    }

    /**
    /* "ConstructionSites.CustomerNumber" (Customer number)
    */
    public get constructionSitesCustomerNumber() : string {
        return this.get(this.constructionSitesCustomerNumberLanguageItemName);
    }

    /**
    /* "ConstructionSites.Status" (Status)
    */
    public get constructionSitesStatus() : string {
        return this.get(this.constructionSitesStatusLanguageItemName);
    }

    /**
    /* "ConstructionSites.Activate" (Activate)
    */
    public get constructionSitesActivate() : string {
        return this.get(this.constructionSitesActivateLanguageItemName);
    }

    /**
    /* "ConstructionSites.Name" (Name)
    */
    public get constructionSitesName() : string {
        return this.get(this.constructionSitesNameLanguageItemName);
    }

    /**
    /* "ConstructionSites.CommitChanges" (Commit changes)
    */
    public get constructionSitesCommitChanges() : string {
        return this.get(this.constructionSitesCommitChangesLanguageItemName);
    }

    /**
    /* "ConstructionSites.CancelChanges" (Cancel changes)
    */
    public get constructionSitesCancelChanges() : string {
        return this.get(this.constructionSitesCancelChangesLanguageItemName);
    }

    /**
    /* "ConstructionSites.Deactivate" (Deactivate)
    */
    public get constructionSitesDeactivate() : string {
        return this.get(this.constructionSitesDeactivateLanguageItemName);
    }

    /**
    /* "ConstructionSites.Close" (Close)
    */
    public get constructionSitesClose() : string {
        return this.get(this.constructionSitesCloseLanguageItemName);
    }

    /**
    /* "AddConstructionsite.Manager" (Manager)
    */
    public get addConstructionsiteManager() : string {
        return this.get(this.addConstructionsiteManagerLanguageItemName);
    }

    /**
    /* "AddConstructionsite.Warehouse" (Warehouse)
    */
    public get addConstructionsiteWarehouse() : string {
        return this.get(this.addConstructionsiteWarehouseLanguageItemName);
    }

    /**
    /* "AddConstructionsite.Organization" (Organization)
    */
    public get addConstructionsiteOrganization() : string {
        return this.get(this.addConstructionsiteOrganizationLanguageItemName);
    }

    /**
    /* "ConstructionSites.InvoiceReference" (Invoice reference)
    */
    public get constructionSitesInvoiceReference() : string {
        return this.get(this.constructionSitesInvoiceReferenceLanguageItemName);
    }

    /**
    /* "ConstructionSites.Reference" (Reference)
    */
    public get constructionSitesReference() : string {
        return this.get(this.constructionSitesReferenceLanguageItemName);
    }

    /**
    /* "AddConstructionsite.DuplicateDeviceId" (Time tracking device id is already register for another construction site or warehouse.)
    */
    public get addConstructionsiteDuplicateDeviceId() : string {
        return this.get(this.addConstructionsiteDuplicateDeviceIdLanguageItemName);
    }

    /**
    /* "ConstructionSites.Sites" (Sites)
    */
    public get constructionSitesSites() : string {
        return this.get(this.constructionSitesSitesLanguageItemName);
    }

    /**
    /* "TaskHoursPanel.Mounter" (Mounter)
    */
    public get taskHoursPanelMounter() : string {
        return this.get(this.taskHoursPanelMounterLanguageItemName);
    }

    /**
    /* "TaskHoursPanel.CommitChanges" (Commit changes)
    */
    public get taskHoursPanelCommitChanges() : string {
        return this.get(this.taskHoursPanelCommitChangesLanguageItemName);
    }

    /**
    /* "TaskHoursPanel.CancelChanges" (Cancel changes)
    */
    public get taskHoursPanelCancelChanges() : string {
        return this.get(this.taskHoursPanelCancelChangesLanguageItemName);
    }

    /**
    /* "TaskHoursPanel.ApproveHours" (Approve hours)
    */
    public get taskHoursPanelApproveHours() : string {
        return this.get(this.taskHoursPanelApproveHoursLanguageItemName);
    }

    /**
    /* "TaskHoursPanel.DeleteHours" (Delete hours)
    */
    public get taskHoursPanelDeleteHours() : string {
        return this.get(this.taskHoursPanelDeleteHoursLanguageItemName);
    }

    /**
    /* "TaskHoursPanel.RestoreDeletedHours" (Restore deleted hours)
    */
    public get taskHoursPanelRestoreDeletedHours() : string {
        return this.get(this.taskHoursPanelRestoreDeletedHoursLanguageItemName);
    }

    /**
    /* "TaskHoursPanel.Date" (Date)
    */
    public get taskHoursPanelDate() : string {
        return this.get(this.taskHoursPanelDateLanguageItemName);
    }

    /**
    /* "TasksPanel.SentAt" (Sent at)
    */
    public get tasksPanelSentAt() : string {
        return this.get(this.tasksPanelSentAtLanguageItemName);
    }

    /**
    /* "TasksPanel.PreviewWorkReport" (Preview work report)
    */
    public get tasksPanelPreviewWorkReport() : string {
        return this.get(this.tasksPanelPreviewWorkReportLanguageItemName);
    }

    /**
    /* "TasksPanel.DownloadWorkReport" (Download work report)
    */
    public get tasksPanelDownloadWorkReport() : string {
        return this.get(this.tasksPanelDownloadWorkReportLanguageItemName);
    }

    /**
    /* "TasksPanel.ApproveWorkReportInvoice" (Approve work report to create a invoice row)
    */
    public get tasksPanelApproveWorkReportInvoice() : string {
        return this.get(this.tasksPanelApproveWorkReportInvoiceLanguageItemName);
    }

    /**
    /* "TasksPanel.DeleteWorkReport" (Delete work report)
    */
    public get tasksPanelDeleteWorkReport() : string {
        return this.get(this.tasksPanelDeleteWorkReportLanguageItemName);
    }

    /**
    /* "TasksPanel.RestoreDeletedWorkReport" (Restore deleted work report)
    */
    public get tasksPanelRestoreDeletedWorkReport() : string {
        return this.get(this.tasksPanelRestoreDeletedWorkReportLanguageItemName);
    }

    /**
    /* "AddConstructionsite.ProjectNumber" (Project number)
    */
    public get addConstructionsiteProjectNumber() : string {
        return this.get(this.addConstructionsiteProjectNumberLanguageItemName);
    }

    /**
    /* "TasksPanel.SentTo" (Sent to)
    */
    public get tasksPanelSentTo() : string {
        return this.get(this.tasksPanelSentToLanguageItemName);
    }

    /**
    /* "TasksPanel.ComplitionDate" (Date when task was completed)
    */
    public get tasksPanelComplitionDate() : string {
        return this.get(this.tasksPanelComplitionDateLanguageItemName);
    }

    /**
    /* "ConstructionSites.SitesInfo" (Construction sites)
    */
    public get constructionSitesSitesInfo() : string {
        return this.get(this.constructionSitesSitesInfoLanguageItemName);
    }

    /**
    /* "TasksPanel.SendToCustomer" (Send to customer for approving)
    */
    public get tasksPanelSendToCustomer() : string {
        return this.get(this.tasksPanelSendToCustomerLanguageItemName);
    }

    /**
    /* "AddMounterModal.AddHoursInfo" (Add mounter working hours for site or warehouse)
    */
    public get addMounterModalAddHoursInfo() : string {
        return this.get(this.addMounterModalAddHoursInfoLanguageItemName);
    }

    /**
    /* "SalaryHoursPanel.Evening" (Evening)
    */
    public get salaryHoursPanelEvening() : string {
        return this.get(this.salaryHoursPanelEveningLanguageItemName);
    }

    /**
    /* "WorkDayPanel.AutoHours" (Auto Hours)
    */
    public get workDayPanelAutoHours() : string {
        return this.get(this.workDayPanelAutoHoursLanguageItemName);
    }

    /**
    /* "SalaryHoursPanel.Total" (Total)
    */
    public get salaryHoursPanelTotal() : string {
        return this.get(this.salaryHoursPanelTotalLanguageItemName);
    }

    /**
    /* "SalaryHoursPanel.NormalHours" (Normal hours)
    */
    public get salaryHoursPanelNormalHours() : string {
        return this.get(this.salaryHoursPanelNormalHoursLanguageItemName);
    }

    /**
    /* "SalaryHoursPanel.Price" (Price)
    */
    public get salaryHoursPanelPrice() : string {
        return this.get(this.salaryHoursPanelPriceLanguageItemName);
    }

    /**
    /* "SalaryHoursPanel.WorkingHours" (Hours)
    */
    public get salaryHoursPanelWorkingHours() : string {
        return this.get(this.salaryHoursPanelWorkingHoursLanguageItemName);
    }

    /**
    /* "SalaryHoursPanel.Hours" (Hours)
    */
    public get salaryHoursPanelHours() : string {
        return this.get(this.salaryHoursPanelHoursLanguageItemName);
    }

    /**
    /* "SalaryExportModal.SendToPayroll" (Send to payroll)
    */
    public get salaryExportModalSendToPayroll() : string {
        return this.get(this.salaryExportModalSendToPayrollLanguageItemName);
    }

    /**
    /* "SalaryHoursPanel.OvertimeFifty" (Overtime 50%)
    */
    public get salaryHoursPanelOvertimeFifty() : string {
        return this.get(this.salaryHoursPanelOvertimeFiftyLanguageItemName);
    }

    /**
    /* "AddMounterModal.NoTasksAvailable" (No tasks available)
    */
    public get addMounterModalNoTasksAvailable() : string {
        return this.get(this.addMounterModalNoTasksAvailableLanguageItemName);
    }

    /**
    /* "AddMounterModal.WorkingHours" (Working hours)
    */
    public get addMounterModalWorkingHours() : string {
        return this.get(this.addMounterModalWorkingHoursLanguageItemName);
    }

    /**
    /* "AddMounterModal.Hours" (Hours)
    */
    public get addMounterModalHours() : string {
        return this.get(this.addMounterModalHoursLanguageItemName);
    }

    /**
    /* "AddMounterModal.Task" (Task)
    */
    public get addMounterModalTask() : string {
        return this.get(this.addMounterModalTaskLanguageItemName);
    }

    /**
    /* "CheckInsPanel.Sign" (Site sign)
    */
    public get checkInsPanelSign() : string {
        return this.get(this.checkInsPanelSignLanguageItemName);
    }

    /**
    /* "CheckInsPanel.SignIn" (Sign in at)
    */
    public get checkInsPanelSignIn() : string {
        return this.get(this.checkInsPanelSignInLanguageItemName);
    }

    /**
    /* "CheckInsPanel.CheckIn" (Task check in)
    */
    public get checkInsPanelCheckIn() : string {
        return this.get(this.checkInsPanelCheckInLanguageItemName);
    }

    /**
    /* "CheckInsPanel.CheckOut" (Task check out)
    */
    public get checkInsPanelCheckOut() : string {
        return this.get(this.checkInsPanelCheckOutLanguageItemName);
    }

    /**
    /* "CheckInsPanel.SiteOrWarehouse" (Site or warehouse)
    */
    public get checkInsPanelSiteOrWarehouse() : string {
        return this.get(this.checkInsPanelSiteOrWarehouseLanguageItemName);
    }

    /**
    /* "CheckInsPanel.SignOut" (Sign out at)
    */
    public get checkInsPanelSignOut() : string {
        return this.get(this.checkInsPanelSignOutLanguageItemName);
    }

    /**
    /* "CheckInsPanel.CheckInAt" (Check in at)
    */
    public get checkInsPanelCheckInAt() : string {
        return this.get(this.checkInsPanelCheckInAtLanguageItemName);
    }

    /**
    /* "WorkDayPanel.FixedContractCost" (Fixed price, €)
    */
    public get workDayPanelFixedContractCost() : string {
        return this.get(this.workDayPanelFixedContractCostLanguageItemName);
    }

    /**
    /* "AddMounterModal.AddHours" (Add hours)
    */
    public get addMounterModalAddHours() : string {
        return this.get(this.addMounterModalAddHoursLanguageItemName);
    }

    /**
    /* "CheckInsPanel.CheckInAddress" (Check in address)
    */
    public get checkInsPanelCheckInAddress() : string {
        return this.get(this.checkInsPanelCheckInAddressLanguageItemName);
    }

    /**
    /* "CheckInsPanel.CheckOutAt" (Check out at)
    */
    public get checkInsPanelCheckOutAt() : string {
        return this.get(this.checkInsPanelCheckOutAtLanguageItemName);
    }

    /**
    /* "CheckInsPanel.CheckOutAddress" (Check out address)
    */
    public get checkInsPanelCheckOutAddress() : string {
        return this.get(this.checkInsPanelCheckOutAddressLanguageItemName);
    }

    /**
    /* "CheckInsPanel.Task" (Task)
    */
    public get checkInsPanelTask() : string {
        return this.get(this.checkInsPanelTaskLanguageItemName);
    }

    /**
    /* "SalaryHoursPanel.OvertimeHundred" (Overtime 100%)
    */
    public get salaryHoursPanelOvertimeHundred() : string {
        return this.get(this.salaryHoursPanelOvertimeHundredLanguageItemName);
    }

    /**
    /* "SalaryHoursPanel.ContractHours" (Contract hours)
    */
    public get salaryHoursPanelContractHours() : string {
        return this.get(this.salaryHoursPanelContractHoursLanguageItemName);
    }

    /**
    /* "SalaryHoursPanel.MarkAsNormal" (Mark as normal)
    */
    public get salaryHoursPanelMarkAsNormal() : string {
        return this.get(this.salaryHoursPanelMarkAsNormalLanguageItemName);
    }

    /**
    /* "SalaryHoursPanel.NightOvertime" (Night overtime)
    */
    public get salaryHoursPanelNightOvertime() : string {
        return this.get(this.salaryHoursPanelNightOvertimeLanguageItemName);
    }

    /**
    /* "SalaryHoursPanel.Night" (Night)
    */
    public get salaryHoursPanelNight() : string {
        return this.get(this.salaryHoursPanelNightLanguageItemName);
    }

    /**
    /* "WorkDayPanel.Passengers" (Passengers)
    */
    public get workDayPanelPassengers() : string {
        return this.get(this.workDayPanelPassengersLanguageItemName);
    }

    /**
    /* "WorkDayPanel.PassengersDescription" (Amount of people you traveled with)
    */
    public get workDayPanelPassengersDescription() : string {
        return this.get(this.workDayPanelPassengersDescriptionLanguageItemName);
    }

    /**
    /* "SalaryHoursPanel.SundayOvertime" (Sunday overtime)
    */
    public get salaryHoursPanelSundayOvertime() : string {
        return this.get(this.salaryHoursPanelSundayOvertimeLanguageItemName);
    }

    /**
    /* "WorkDayPanel.Details" (Details)
    */
    public get workDayPanelDetails() : string {
        return this.get(this.workDayPanelDetailsLanguageItemName);
    }

    /**
    /* "WorkDayPanel.Compensations" (Compensations)
    */
    public get workDayPanelCompensations() : string {
        return this.get(this.workDayPanelCompensationsLanguageItemName);
    }

    /**
    /* "WorkDayPanel.Contract" (Contract)
    */
    public get workDayPanelContract() : string {
        return this.get(this.workDayPanelContractLanguageItemName);
    }

    /**
    /* "WorkDayPanel.DetailsInfo" (Information about mounter's check-ins)
    */
    public get workDayPanelDetailsInfo() : string {
        return this.get(this.workDayPanelDetailsInfoLanguageItemName);
    }

    /**
    /* "WorkDayPanel.AddNewTaskHours" (Add new task hours)
    */
    public get workDayPanelAddNewTaskHours() : string {
        return this.get(this.workDayPanelAddNewTaskHoursLanguageItemName);
    }

    /**
    /* "WorkDayPanel.WorkDay" (Work Day)
    */
    public get workDayPanelWorkDay() : string {
        return this.get(this.workDayPanelWorkDayLanguageItemName);
    }

    /**
    /* "WorkDayPanel.DailyAllowance" (Daily Allowance)
    */
    public get workDayPanelDailyAllowance() : string {
        return this.get(this.workDayPanelDailyAllowanceLanguageItemName);
    }

    /**
    /* "WorkDayPanel.Aggregate.DailyAllowance" (Daily Allowance)
    */
    public get workDayPanelAggregateDailyAllowance() : string {
        return this.get(this.workDayPanelAggregateDailyAllowanceLanguageItemName);
    }

    /**
    /* "WorkDayPanel.OwnEquipment" (Own equipment)
    */
    public get workDayPanelOwnEquipment() : string {
        return this.get(this.workDayPanelOwnEquipmentLanguageItemName);
    }

    /**
    /* "WorkDayPanel.Allowance" (Allowance)
    */
    public get workDayPanelAllowance() : string {
        return this.get(this.workDayPanelAllowanceLanguageItemName);
    }

    /**
    /* "WorkDayPanel.Equipment" (Equipment)
    */
    public get workDayPanelEquipment() : string {
        return this.get(this.workDayPanelEquipmentLanguageItemName);
    }

    /**
    /* "WorkDayPanel.Distance" (Distance, km)
    */
    public get workDayPanelDistance() : string {
        return this.get(this.workDayPanelDistanceLanguageItemName);
    }

    /**
    /* "WorkDayPanel.DistanceInfo" (Distance calculated based on GPS)
    */
    public get workDayPanelDistanceInfo() : string {
        return this.get(this.workDayPanelDistanceInfoLanguageItemName);
    }

    /**
    /* "SalaryHoursPanel.EveningOvertime" (Evening overtime)
    */
    public get salaryHoursPanelEveningOvertime() : string {
        return this.get(this.salaryHoursPanelEveningOvertimeLanguageItemName);
    }

    /**
    /* "WorkDayPanelToolbar.DailyHours" (Daily hours)
    */
    public get workDayPanelToolbarDailyHours() : string {
        return this.get(this.workDayPanelToolbarDailyHoursLanguageItemName);
    }

    /**
    /* "WorkDayPanelToolbar.DailyHoursSubText" (Employees hours per day, construction site & task.)
    */
    public get workDayPanelToolbarDailyHoursSubText() : string {
        return this.get(this.workDayPanelToolbarDailyHoursSubTextLanguageItemName);
    }

    /**
    /* "WorkDayPanelToolbar.Months" (Months)
    */
    public get workDayPanelToolbarMonths() : string {
        return this.get(this.workDayPanelToolbarMonthsLanguageItemName);
    }

    /**
    /* "WorkDayPanelToolbar.Periods" (Periods)
    */
    public get workDayPanelToolbarPeriods() : string {
        return this.get(this.workDayPanelToolbarPeriodsLanguageItemName);
    }

    /**
    /* "WorkDayPanelToolbar.InvoicePeriods" (Invoice periods)
    */
    public get workDayPanelToolbarInvoicePeriods() : string {
        return this.get(this.workDayPanelToolbarInvoicePeriodsLanguageItemName);
    }

    /**
    /* "WorkDayPanelToolbar.SalaryPeriods" (Salary periods)
    */
    public get workDayPanelToolbarSalaryPeriods() : string {
        return this.get(this.workDayPanelToolbarSalaryPeriodsLanguageItemName);
    }

    /**
    /* "WorkDayPanelToolbar.Any" (Any)
    */
    public get workDayPanelToolbarAny() : string {
        return this.get(this.workDayPanelToolbarAnyLanguageItemName);
    }

    /**
    /* "WorkDayPanelToolbar.AnySubText" (Any construction sites or warehouse)
    */
    public get workDayPanelToolbarAnySubText() : string {
        return this.get(this.workDayPanelToolbarAnySubTextLanguageItemName);
    }

    /**
    /* "WorkDayPanelToolbar.ConstructionSitesInfoSubText" (Active and assigned construction sites)
    */
    public get workDayPanelToolbarConstructionSitesInfoSubText() : string {
        return this.get(this.workDayPanelToolbarConstructionSitesInfoSubTextLanguageItemName);
    }

    /**
    /* "WorkDayPanelToolbar.AssignedWarehouses" (Assigned warehouses)
    */
    public get workDayPanelToolbarAssignedWarehouses() : string {
        return this.get(this.workDayPanelToolbarAssignedWarehousesLanguageItemName);
    }

    /**
    /* "WorkDayPanelToolbar.AnySalaryHours" (Any salary hours)
    */
    public get workDayPanelToolbarAnySalaryHours() : string {
        return this.get(this.workDayPanelToolbarAnySalaryHoursLanguageItemName);
    }

    /**
    /* "WorkDayPanelToolbar.AnySalaryHoursSubText" (Any salary hours, not approved, approved, exported)
    */
    public get workDayPanelToolbarAnySalaryHoursSubText() : string {
        return this.get(this.workDayPanelToolbarAnySalaryHoursSubTextLanguageItemName);
    }

    /**
    /* "WorkDayPanelToolbar.ApprovedByManager" (Approved by manager)
    */
    public get workDayPanelToolbarApprovedByManager() : string {
        return this.get(this.workDayPanelToolbarApprovedByManagerLanguageItemName);
    }

    /**
    /* "WorkDayPanelToolbar.ApprovedByDirector" (Approved by director)
    */
    public get workDayPanelToolbarApprovedByDirector() : string {
        return this.get(this.workDayPanelToolbarApprovedByDirectorLanguageItemName);
    }

    /**
    /* "WorkDayPanelToolbar.ApprovedByDirectorSubText" (Approved by manager and director (exportable))
    */
    public get workDayPanelToolbarApprovedByDirectorSubText() : string {
        return this.get(this.workDayPanelToolbarApprovedByDirectorSubTextLanguageItemName);
    }

    /**
    /* "WorkDayPanelToolbar.NotApprovedByManager" (Not approved by manager)
    */
    public get workDayPanelToolbarNotApprovedByManager() : string {
        return this.get(this.workDayPanelToolbarNotApprovedByManagerLanguageItemName);
    }

    /**
    /* "WorkDayPanelToolbar.NotApprovedByManagerSubText" (Not approved by manager and director (not approved at all))
    */
    public get workDayPanelToolbarNotApprovedByManagerSubText() : string {
        return this.get(this.workDayPanelToolbarNotApprovedByManagerSubTextLanguageItemName);
    }

    /**
    /* "WorkDayPanelToolbar.NotApprovedByDirector" (Not approved by director)
    */
    public get workDayPanelToolbarNotApprovedByDirector() : string {
        return this.get(this.workDayPanelToolbarNotApprovedByDirectorLanguageItemName);
    }

    /**
    /* "WorkDayPanelToolbar.NotApprovedByDirectorSubText" (Approved by manager only, not approved by director)
    */
    public get workDayPanelToolbarNotApprovedByDirectorSubText() : string {
        return this.get(this.workDayPanelToolbarNotApprovedByDirectorSubTextLanguageItemName);
    }

    /**
    /* "WorkDayPanelToolbar.ReportType" (Report type:)
    */
    public get workDayPanelToolbarReportType() : string {
        return this.get(this.workDayPanelToolbarReportTypeLanguageItemName);
    }

    /**
    /* "WorkDayPanelToolbar.Source" (Source:)
    */
    public get workDayPanelToolbarSource() : string {
        return this.get(this.workDayPanelToolbarSourceLanguageItemName);
    }

    /**
    /* "WorkDayPanelToolbar.Approve" (Approve:)
    */
    public get workDayPanelToolbarApprove() : string {
        return this.get(this.workDayPanelToolbarApproveLanguageItemName);
    }

    /**
    /* "WorkDayPanelToolbar.Date" (Date:)
    */
    public get workDayPanelToolbarDate() : string {
        return this.get(this.workDayPanelToolbarDateLanguageItemName);
    }

    /**
    /* "WorkDayPanelToolbar.Search" (Search)
    */
    public get workDayPanelToolbarSearch() : string {
        return this.get(this.workDayPanelToolbarSearchLanguageItemName);
    }

    /**
    /* "WorkDayPanelToolbar.AddMounter" (Add mounter)
    */
    public get workDayPanelToolbarAddMounter() : string {
        return this.get(this.workDayPanelToolbarAddMounterLanguageItemName);
    }

    /**
    /* "WorkDayPanelToolbar.ExportMepco" (Export salary file in Mepco format (.csv))
    */
    public get workDayPanelToolbarExportMepco() : string {
        return this.get(this.workDayPanelToolbarExportMepcoLanguageItemName);
    }

    /**
    /* "WorkDayPanelToolbar.ExportMepcoSubText" (Choose rows with state 'Approved by director' to export)
    */
    public get workDayPanelToolbarExportMepcoSubText() : string {
        return this.get(this.workDayPanelToolbarExportMepcoSubTextLanguageItemName);
    }

    /**
    /* "WorkDayPanelToolbar.ExportRowInfo" (You are going to export {0} rows for {1} employees)
    */
    public get workDayPanelToolbarExportRowInfo() : string {
        return this.get(this.workDayPanelToolbarExportRowInfoLanguageItemName);
    }

    /**
    /* "WorkDayPanelToolbar.ExportTikon" (Export salary file in Mepco format (.csv))
    */
    public get workDayPanelToolbarExportTikon() : string {
        return this.get(this.workDayPanelToolbarExportTikonLanguageItemName);
    }

    /**
    /* "InvoiceExportModal.DownloadFile" (Download file)
    */
    public get invoiceExportModalDownloadFile() : string {
        return this.get(this.invoiceExportModalDownloadFileLanguageItemName);
    }

    /**
    /* "InvoiceToolbar.AnyState" (Any state)
    */
    public get invoiceToolbarAnyState() : string {
        return this.get(this.invoiceToolbarAnyStateLanguageItemName);
    }

    /**
    /* "InvoiceToolbar.Invoice" (Invoice)
    */
    public get invoiceToolbarInvoice() : string {
        return this.get(this.invoiceToolbarInvoiceLanguageItemName);
    }

    /**
    /* "InvoiceToolbar.InvoiceTitle" (Invoice number, code or reference)
    */
    public get invoiceToolbarInvoiceTitle() : string {
        return this.get(this.invoiceToolbarInvoiceTitleLanguageItemName);
    }

    /**
    /* "InvoiceToolbar.CustomerNameOrNumber" (Customer name or number)
    */
    public get invoiceToolbarCustomerNameOrNumber() : string {
        return this.get(this.invoiceToolbarCustomerNameOrNumberLanguageItemName);
    }

    /**
    /* "InvoiceToolbar.ConstructionSiteNameOrNumber" (Construction site name or number)
    */
    public get invoiceToolbarConstructionSiteNameOrNumber() : string {
        return this.get(this.invoiceToolbarConstructionSiteNameOrNumberLanguageItemName);
    }

    /**
    /* "InvoiceToolbar.Navision" (Navision)
    */
    public get invoiceToolbarNavision() : string {
        return this.get(this.invoiceToolbarNavisionLanguageItemName);
    }

    /**
    /* "InvoiceToolbar.NavisionTitle" (Export to Microsoft Dynamics NAV format)
    */
    public get invoiceToolbarNavisionTitle() : string {
        return this.get(this.invoiceToolbarNavisionTitleLanguageItemName);
    }

    /**
    /* "InvoiceToolbar.Pagero" (Pagero)
    */
    public get invoiceToolbarPagero() : string {
        return this.get(this.invoiceToolbarPageroLanguageItemName);
    }

    /**
    /* "InvoiceToolbar.ExportToPagero" (Export to Pagero)
    */
    public get invoiceToolbarExportToPagero() : string {
        return this.get(this.invoiceToolbarExportToPageroLanguageItemName);
    }

    /**
    /* "InvoiceToolbar.ExportNavisionFormat" (Export invoices in Navision format)
    */
    public get invoiceToolbarExportNavisionFormat() : string {
        return this.get(this.invoiceToolbarExportNavisionFormatLanguageItemName);
    }

    /**
    /* "InvoiceToolbar.ExportNavisionFormatSubTitle" (All 'Sent', but not exported invoices)
    */
    public get invoiceToolbarExportNavisionFormatSubTitle() : string {
        return this.get(this.invoiceToolbarExportNavisionFormatSubTitleLanguageItemName);
    }

    /**
    /* "InvoiceToolbar.ExportPageroFormat" (Export invoices to Pagero (F-Invoice))
    */
    public get invoiceToolbarExportPageroFormat() : string {
        return this.get(this.invoiceToolbarExportPageroFormatLanguageItemName);
    }

    /**
    /* "InvoiceToolbar.ExportPageroFormatSubTitle" (All 'Approved', but not billed invoices)
    */
    public get invoiceToolbarExportPageroFormatSubTitle() : string {
        return this.get(this.invoiceToolbarExportPageroFormatSubTitleLanguageItemName);
    }

    /**
    /* "Invoices.DeleteCreditInvoiceConfirmation" (Are you sure\nyou want delete credit invoice\n<mark>#{0}</mark> on <mark>{1:C}€</mark>\nfor customer\n'<mark>{2}</mark>'?)
    */
    public get invoicesDeleteCreditInvoiceConfirmation() : string {
        return this.get(this.invoicesDeleteCreditInvoiceConfirmationLanguageItemName);
    }

    /**
    /* "Invoices.CreditInvoiceCreated" (Credit invoice {0} created successfully.)
    */
    public get invoicesCreditInvoiceCreated() : string {
        return this.get(this.invoicesCreditInvoiceCreatedLanguageItemName);
    }

    /**
    /* "Invoices.InvoiceCustomerConfirmation" (Are you sure\nyou want bill invoice\n<mark>#{0}</mark> on <mark>{1:C}€</mark>\nfor customer\n'<mark>{2}</mark>'?)
    */
    public get invoicesInvoiceCustomerConfirmation() : string {
        return this.get(this.invoicesInvoiceCustomerConfirmationLanguageItemName);
    }

    /**
    /* "Invoices.CreditInvoiceCustomerConfirmation" (Are you sure\nyou want credit invoice\n<mark>#{0}</mark> on <mark>{1:C}€</mark>\nfor customer\n'<mark>{2}</mark>'?)
    */
    public get invoicesCreditInvoiceCustomerConfirmation() : string {
        return this.get(this.invoicesCreditInvoiceCustomerConfirmationLanguageItemName);
    }

    /**
    /* "Invoices.ExportInfo" (You are going to export {0} invoices for {1} company(s).)
    */
    public get invoicesExportInfo() : string {
        return this.get(this.invoicesExportInfoLanguageItemName);
    }

    /**
    /* "Invoices.NothingSelected" (Nothing selected.)
    */
    public get invoicesNothingSelected() : string {
        return this.get(this.invoicesNothingSelectedLanguageItemName);
    }

    /**
    /* "Invoices.SentToAccounting" (Invoice(s) sent to accounting system successfully.)
    */
    public get invoicesSentToAccounting() : string {
        return this.get(this.invoicesSentToAccountingLanguageItemName);
    }

    /**
    /* "Invoices.MarkedAsExported" (Invoice(s) marked as exported. Store and transfer the file to NAV system.)
    */
    public get invoicesMarkedAsExported() : string {
        return this.get(this.invoicesMarkedAsExportedLanguageItemName);
    }

    /**
    /* "Invoices.InformationInvoiceRows" (Information about invoice rows)
    */
    public get invoicesInformationInvoiceRows() : string {
        return this.get(this.invoicesInformationInvoiceRowsLanguageItemName);
    }

    /**
    /* "Invoices.Reference" (Reference)
    */
    public get invoicesReference() : string {
        return this.get(this.invoicesReferenceLanguageItemName);
    }

    /**
    /* "Invoices.Cost" (Cost, €)
    */
    public get invoicesCost() : string {
        return this.get(this.invoicesCostLanguageItemName);
    }

    /**
    /* "Invoices.InvoiceComment" (Invoice comment for customer)
    */
    public get invoicesInvoiceComment() : string {
        return this.get(this.invoicesInvoiceCommentLanguageItemName);
    }

    /**
    /* "Generic.NameAndProject" (Name and project number)
    */
    public get genericNameAndProject() : string {
        return this.get(this.genericNameAndProjectLanguageItemName);
    }

    /**
    /* "Invoices.CreatedAt" (Created at)
    */
    public get invoicesCreatedAt() : string {
        return this.get(this.invoicesCreatedAtLanguageItemName);
    }

    /**
    /* "Invoices.Entry" (Entry)
    */
    public get invoicesEntry() : string {
        return this.get(this.invoicesEntryLanguageItemName);
    }

    /**
    /* "Invoices.EntryTitle" (The date payment should be transferred to a customer, last day of invoicing period)
    */
    public get invoicesEntryTitle() : string {
        return this.get(this.invoicesEntryTitleLanguageItemName);
    }

    /**
    /* "Invoices.Net" (Net)
    */
    public get invoicesNet() : string {
        return this.get(this.invoicesNetLanguageItemName);
    }

    /**
    /* "Invoices.Due" (Due)
    */
    public get invoicesDue() : string {
        return this.get(this.invoicesDueLanguageItemName);
    }

    /**
    /* "Invoices.DueTitle" (The date during which the payment must be made at the latest (Payment Date 0 Net))
    */
    public get invoicesDueTitle() : string {
        return this.get(this.invoicesDueTitleLanguageItemName);
    }

    /**
    /* "Invoices.State" (State)
    */
    public get invoicesState() : string {
        return this.get(this.invoicesStateLanguageItemName);
    }

    /**
    /* "Invoices.SentNumber" (Invoice number)
    */
    public get invoicesSentNumber() : string {
        return this.get(this.invoicesSentNumberLanguageItemName);
    }

    /**
    /* "Invoices.Nav" (NAV)
    */
    public get invoicesNav() : string {
        return this.get(this.invoicesNavLanguageItemName);
    }

    /**
    /* "Invoices.PreviewInvoice" (Preview Invoice)
    */
    public get invoicesPreviewInvoice() : string {
        return this.get(this.invoicesPreviewInvoiceLanguageItemName);
    }

    /**
    /* "Invoices.DownloadInvoice" (Download Invoice)
    */
    public get invoicesDownloadInvoice() : string {
        return this.get(this.invoicesDownloadInvoiceLanguageItemName);
    }

    /**
    /* "Invoices.SendToPagero" (Send to Pagero)
    */
    public get invoicesSendToPagero() : string {
        return this.get(this.invoicesSendToPageroLanguageItemName);
    }

    /**
    /* "Invoices.CancelInvoice" (Cancel invoice (create credit invoice))
    */
    public get invoicesCancelInvoice() : string {
        return this.get(this.invoicesCancelInvoiceLanguageItemName);
    }

    /**
    /* "Invoices.ListOfInvoices" (List of invoices and invoice states)
    */
    public get invoicesListOfInvoices() : string {
        return this.get(this.invoicesListOfInvoicesLanguageItemName);
    }

    /**
    /* "Invoices.Invoices" (Invoices)
    */
    public get invoicesInvoices() : string {
        return this.get(this.invoicesInvoicesLanguageItemName);
    }

    /**
    /* "MyInvoices.MyInvoices" (My Invoices)
    */
    public get myInvoicesMyInvoices() : string {
        return this.get(this.myInvoicesMyInvoicesLanguageItemName);
    }

    /**
    /* "MyWorkReports.Confirmation.Approve" (Are you sure, you want approve work report {0}?)
    */
    public get myWorkReportsConfirmationApprove() : string {
        return this.get(this.myWorkReportsConfirmationApproveLanguageItemName);
    }

    /**
    /* "MyWorkReports.Confirmation.Decline" (Are you sure, you want decline work report {0}?)
    */
    public get myWorkReportsConfirmationDecline() : string {
        return this.get(this.myWorkReportsConfirmationDeclineLanguageItemName);
    }

    /**
    /* "MyWorkReport.ApprovedAt" (Approved at)
    */
    public get myWorkReportApprovedAt() : string {
        return this.get(this.myWorkReportApprovedAtLanguageItemName);
    }

    /**
    /* "MyWorkReport.DeclineWorkReport" (Decline work report to (return back to manager))
    */
    public get myWorkReportDeclineWorkReport() : string {
        return this.get(this.myWorkReportDeclineWorkReportLanguageItemName);
    }

    /**
    /* "MyWorkReport.MyReport" (My Work Reports)
    */
    public get myWorkReportMyReport() : string {
        return this.get(this.myWorkReportMyReportLanguageItemName);
    }

    /**
    /* "MyWorkReport.NoData" (No work reports received yet)
    */
    public get myWorkReportNoData() : string {
        return this.get(this.myWorkReportNoDataLanguageItemName);
    }

    /**
    /* "MyAudits.ApprovedAt" (Approved at)
    */
    public get myAuditsApprovedAt() : string {
        return this.get(this.myAuditsApprovedAtLanguageItemName);
    }

    /**
    /* "MyAudits.MyAudit" (My audits)
    */
    public get myAuditsMyAudit() : string {
        return this.get(this.myAuditsMyAuditLanguageItemName);
    }

    /**
    /* "MyAudits.NoData" (No audit reports received yet)
    */
    public get myAuditsNoData() : string {
        return this.get(this.myAuditsNoDataLanguageItemName);
    }

    /**
    /* "MyAudits.Actions.Approve" (Approve audit report)
    */
    public get myAuditsActionsApprove() : string {
        return this.get(this.myAuditsActionsApproveLanguageItemName);
    }

    /**
    /* "MyAudits.Actions.Preview" (Preview audit report)
    */
    public get myAuditsActionsPreview() : string {
        return this.get(this.myAuditsActionsPreviewLanguageItemName);
    }

    /**
    /* "MyAudits.Actions.Download" (Download audit report)
    */
    public get myAuditsActionsDownload() : string {
        return this.get(this.myAuditsActionsDownloadLanguageItemName);
    }

    /**
    /* "MyAudits.Confirmation.Approve" (Are you sure, you want approve audit report #{0} \"{1}\")
    */
    public get myAuditsConfirmationApprove() : string {
        return this.get(this.myAuditsConfirmationApproveLanguageItemName);
    }

    /**
    /* "MyAudits.ReportPreview" (Audit report preview)
    */
    public get myAuditsReportPreview() : string {
        return this.get(this.myAuditsReportPreviewLanguageItemName);
    }

    /**
    /* "Agreement.MinimumRentalDays" (Minimum rental days)
    */
    public get agreementMinimumRentalDays() : string {
        return this.get(this.agreementMinimumRentalDaysLanguageItemName);
    }

    /**
    /* "AgreementModule.Name" (Name)
    */
    public get agreementModuleName() : string {
        return this.get(this.agreementModuleNameLanguageItemName);
    }

    /**
    /* "AddAgreement.ExtraTaskHourlyCost" (Default task hourly price)
    */
    public get addAgreementExtraTaskHourlyCost() : string {
        return this.get(this.addAgreementExtraTaskHourlyCostLanguageItemName);
    }

    /**
    /* "AddAgreement.Title" (Add agreement)
    */
    public get addAgreementTitle() : string {
        return this.get(this.addAgreementTitleLanguageItemName);
    }

    /**
    /* "AddAgreement.Subtitle" (Create new agreement)
    */
    public get addAgreementSubtitle() : string {
        return this.get(this.addAgreementSubtitleLanguageItemName);
    }

    /**
    /* "AddAgreement.Dropdown.Label" (Contact person)
    */
    public get addAgreementDropdownLabel() : string {
        return this.get(this.addAgreementDropdownLabelLanguageItemName);
    }

    /**
    /* "AddAgreement.NewContactPerson" (Create new contact person)
    */
    public get addAgreementNewContactPerson() : string {
        return this.get(this.addAgreementNewContactPersonLanguageItemName);
    }

    /**
    /* "AddAgreement.Description" (Description)
    */
    public get addAgreementDescription() : string {
        return this.get(this.addAgreementDescriptionLanguageItemName);
    }

    /**
    /* "AddAgreement.AddAgreement" (Add agreement)
    */
    public get addAgreementAddAgreement() : string {
        return this.get(this.addAgreementAddAgreementLanguageItemName);
    }

    /**
    /* "TaskWidget.InProcess" ()
    */
    public get taskWidgetInProcess() : string {
        return this.get(this.taskWidgetInProcessLanguageItemName);
    }

    /**
    /* "TaskWidget.BlockedSplitTask" ()
    */
    public get taskWidgetBlockedSplitTask() : string {
        return this.get(this.taskWidgetBlockedSplitTaskLanguageItemName);
    }

    /**
    /* "TaskWidget.NoTaskAssigned" ()
    */
    public get taskWidgetNoTaskAssigned() : string {
        return this.get(this.taskWidgetNoTaskAssignedLanguageItemName);
    }

    /**
    /* "AuditQuestionInput.StepOk" (STEP OK)
    */
    public get auditQuestionInputStepOk() : string {
        return this.get(this.auditQuestionInputStepOkLanguageItemName);
    }

    /**
    /* "AuditQuestionInput.NeedRepairs" (NEED REPAIRS)
    */
    public get auditQuestionInputNeedRepairs() : string {
        return this.get(this.auditQuestionInputNeedRepairsLanguageItemName);
    }

    /**
    /* "AuditQuestionInput.Comment" (COMMENT)
    */
    public get auditQuestionInputComment() : string {
        return this.get(this.auditQuestionInputCommentLanguageItemName);
    }

    /**
    /* "AuditQuestionInput.InsertComment" (Insert comment if needed)
    */
    public get auditQuestionInputInsertComment() : string {
        return this.get(this.auditQuestionInputInsertCommentLanguageItemName);
    }

    /**
    /* "AuditQuestionInput.CommentRequired" (Comment is required)
    */
    public get auditQuestionInputCommentRequired() : string {
        return this.get(this.auditQuestionInputCommentRequiredLanguageItemName);
    }

    /**
    /* "AuditModule.NoAudit" (no audit)
    */
    public get auditModuleNoAudit() : string {
        return this.get(this.auditModuleNoAuditLanguageItemName);
    }

    /**
    /* "AuditModule.Passed" (Passed)
    */
    public get auditModulePassed() : string {
        return this.get(this.auditModulePassedLanguageItemName);
    }

    /**
    /* "AuditModule.NotPassed" (Not passed)
    */
    public get auditModuleNotPassed() : string {
        return this.get(this.auditModuleNotPassedLanguageItemName);
    }

    /**
    /* "AuditModule.Approved" (Approved)
    */
    public get auditModuleApproved() : string {
        return this.get(this.auditModuleApprovedLanguageItemName);
    }

    /**
    /* "AuditModule.NotApproved" (Not approved)
    */
    public get auditModuleNotApproved() : string {
        return this.get(this.auditModuleNotApprovedLanguageItemName);
    }

    /**
    /* "AuditModule.StartAudit" (START AUDIT)
    */
    public get auditModuleStartAudit() : string {
        return this.get(this.auditModuleStartAuditLanguageItemName);
    }

    /**
    /* "AuditModule.GetManual" (Audit module.\nPress \"Activate\" button for that.\nIt will create and activate task corresponding task.\n\nTask marked as split cannot be activated.)
    */
    public get auditModuleGetManual() : string {
        return this.get(this.auditModuleGetManualLanguageItemName);
    }

    /**
    /* "AuditModule.Preview" (Preview and send)
    */
    public get auditModulePreview() : string {
        return this.get(this.auditModulePreviewLanguageItemName);
    }

    /**
    /* "AuditModule.Continue" (Continue inspection)
    */
    public get auditModuleContinue() : string {
        return this.get(this.auditModuleContinueLanguageItemName);
    }

    /**
    /* "AuditModule.Sent" (Sent)
    */
    public get auditModuleSent() : string {
        return this.get(this.auditModuleSentLanguageItemName);
    }

    /**
    /* "AuditModule.NotSent" (Not sent)
    */
    public get auditModuleNotSent() : string {
        return this.get(this.auditModuleNotSentLanguageItemName);
    }

    /**
    /* "AuditModule.EmailReceivers.ContactPerson" (Contact person)
    */
    public get auditModuleEmailReceiversContactPerson() : string {
        return this.get(this.auditModuleEmailReceiversContactPersonLanguageItemName);
    }

    /**
    /* "AuditModule.EmailReceivers.Receiver" (Receiver)
    */
    public get auditModuleEmailReceiversReceiver() : string {
        return this.get(this.auditModuleEmailReceiversReceiverLanguageItemName);
    }

    /**
    /* "AuditModule.EmailReceivers.NoContactPersonWarning" (Contact person is not specified on agreement level. Audit can not be sent for approval)
    */
    public get auditModuleEmailReceiversNoContactPersonWarning() : string {
        return this.get(this.auditModuleEmailReceiversNoContactPersonWarningLanguageItemName);
    }

    /**
    /* "ConstructionSitePanel.ActivateConfirmation" (Are you sure that you want to activate this construction site?)
    */
    public get constructionSitePanelActivateConfirmation() : string {
        return this.get(this.constructionSitePanelActivateConfirmationLanguageItemName);
    }

    /**
    /* "ConstructionSitePanel.OrganizationContract" (Organization Contract)
    */
    public get constructionSitePanelOrganizationContract() : string {
        return this.get(this.constructionSitePanelOrganizationContractLanguageItemName);
    }

    /**
    /* "ConstructionSitePanel.OrganizationContractInvoicesSent" (Organization Contract (Invoices already sent!))
    */
    public get constructionSitePanelOrganizationContractInvoicesSent() : string {
        return this.get(this.constructionSitePanelOrganizationContractInvoicesSentLanguageItemName);
    }

    /**
    /* "ConstructionSitePanel.PaymentTerms" (Payment terms code)
    */
    public get constructionSitePanelPaymentTerms() : string {
        return this.get(this.constructionSitePanelPaymentTermsLanguageItemName);
    }

    /**
    /* "ConstructionSitePanel.DeactivateConfirmation" (Are you sure that you want to deactivate this construction site?)
    */
    public get constructionSitePanelDeactivateConfirmation() : string {
        return this.get(this.constructionSitePanelDeactivateConfirmationLanguageItemName);
    }

    /**
    /* "SubContractors.Title" (Subcontractors)
    */
    public get subContractorsTitle() : string {
        return this.get(this.subContractorsTitleLanguageItemName);
    }

    /**
    /* "SubContractors.AddSubcontractor" (Add subcontractor)
    */
    public get subContractorsAddSubcontractor() : string {
        return this.get(this.subContractorsAddSubcontractorLanguageItemName);
    }

    /**
    /* "SubContractors.AddNewSubcontractor" (Create new subcontractor)
    */
    public get subContractorsAddNewSubcontractor() : string {
        return this.get(this.subContractorsAddNewSubcontractorLanguageItemName);
    }

    /**
    /* "SubContractors.Subcontractor" (Subcontractor)
    */
    public get subContractorsSubcontractor() : string {
        return this.get(this.subContractorsSubcontractorLanguageItemName);
    }

    /**
    /* "InvoiceExportModal.SendToPagero" (Send To Pagero)
    */
    public get invoiceExportModalSendToPagero() : string {
        return this.get(this.invoiceExportModalSendToPageroLanguageItemName);
    }

    /**
    /* "AddContactPersonModal.Create" (Create)
    */
    public get addContactPersonModalCreate() : string {
        return this.get(this.addContactPersonModalCreateLanguageItemName);
    }

    /**
    /* "OrganizationPanel.ExternalId" (External id)
    */
    public get organizationPanelExternalId() : string {
        return this.get(this.organizationPanelExternalIdLanguageItemName);
    }

    /**
    /* "AddTaskModal.CreateExtraModule" (Create Extra Module)
    */
    public get addTaskModalCreateExtraModule() : string {
        return this.get(this.addTaskModalCreateExtraModuleLanguageItemName);
    }

    /**
    /* "AddWorkReportModal.DescriptionOfTask" (Description of the task)
    */
    public get addWorkReportModalDescriptionOfTask() : string {
        return this.get(this.addWorkReportModalDescriptionOfTaskLanguageItemName);
    }

    /**
    /* "AddWorkReportModal.RemoveTaskWorkReport" (Remove task from work report)
    */
    public get addWorkReportModalRemoveTaskWorkReport() : string {
        return this.get(this.addWorkReportModalRemoveTaskWorkReportLanguageItemName);
    }

    /**
    /* "AddWorkReportModal.DateTaskCompleted" (Date when task was completed)
    */
    public get addWorkReportModalDateTaskCompleted() : string {
        return this.get(this.addWorkReportModalDateTaskCompletedLanguageItemName);
    }

    /**
    /* "AddWorkReportModal.ExistingExtraTasks" (Existing extra tasks)
    */
    public get addWorkReportModalExistingExtraTasks() : string {
        return this.get(this.addWorkReportModalExistingExtraTasksLanguageItemName);
    }

    /**
    /* "AddWorkReportModal.AddCompletedExtraTask" (Add completed extra task)
    */
    public get addWorkReportModalAddCompletedExtraTask() : string {
        return this.get(this.addWorkReportModalAddCompletedExtraTaskLanguageItemName);
    }

    /**
    /* "SendWorkReportModal.EmailExists" (User with provided email or phone number already exists)
    */
    public get sendWorkReportModalEmailExists() : string {
        return this.get(this.sendWorkReportModalEmailExistsLanguageItemName);
    }

    /**
    /* "TaskExtraChangePanel.ExtraChargeType" (Extra charge type)
    */
    public get taskExtraChangePanelExtraChargeType() : string {
        return this.get(this.taskExtraChangePanelExtraChargeTypeLanguageItemName);
    }

    /**
    /* "TaskExtraChangeGrid.NoExtraCharges" (No extra charges)
    */
    public get taskExtraChangeGridNoExtraCharges() : string {
        return this.get(this.taskExtraChangeGridNoExtraChargesLanguageItemName);
    }

    /**
    /* "Generic.Abbreviations.Hours" (h)
    */
    public get genericAbbreviationsHours() : string {
        return this.get(this.genericAbbreviationsHoursLanguageItemName);
    }

    /**
    /* "Generic.Abbreviations.Kilometers" (km)
    */
    public get genericAbbreviationsKilometers() : string {
        return this.get(this.genericAbbreviationsKilometersLanguageItemName);
    }

    /**
    /* "Generic.Abbreviations.Vehicles" (v)
    */
    public get genericAbbreviationsVehicles() : string {
        return this.get(this.genericAbbreviationsVehiclesLanguageItemName);
    }

    /**
    /* "Generic.Approval" (Approval)
    */
    public get genericApproval() : string {
        return this.get(this.genericApprovalLanguageItemName);
    }

    /**
    /* "Generic.Loading" (Loading..)
    */
    public get genericLoading() : string {
        return this.get(this.genericLoadingLanguageItemName);
    }

    /**
    /* "TasksPanel.ApproveTask" (Approve task to create a invoice row)
    */
    public get tasksPanelApproveTask() : string {
        return this.get(this.tasksPanelApproveTaskLanguageItemName);
    }

    /**
    /* "TasksPanel.CreateTaskWorkReport" (Create task to work report)
    */
    public get tasksPanelCreateTaskWorkReport() : string {
        return this.get(this.tasksPanelCreateTaskWorkReportLanguageItemName);
    }

    /**
    /* "TasksPanel.TaskHours" (Task hours)
    */
    public get tasksPanelTaskHours() : string {
        return this.get(this.tasksPanelTaskHoursLanguageItemName);
    }

    /**
    /* "TasksPanel.TaskExtraCharges" (Task extra charges)
    */
    public get tasksPanelTaskExtraCharges() : string {
        return this.get(this.tasksPanelTaskExtraChargesLanguageItemName);
    }

    /**
    /* "TasksPanel.AddExtraCharge.Flyout" (Extra charge for task was created successfully)
    */
    public get tasksPanelAddExtraChargeFlyout() : string {
        return this.get(this.tasksPanelAddExtraChargeFlyoutLanguageItemName);
    }

    /**
    /* "TasksPanel.AddWorkReport.Flyout" (Work report was created successfully)
    */
    public get tasksPanelAddWorkReportFlyout() : string {
        return this.get(this.tasksPanelAddWorkReportFlyoutLanguageItemName);
    }

    /**
    /* "TasksPanel.AddExtraTask.Flyout" (Extra task was created successfully)
    */
    public get tasksPanelAddExtraTaskFlyout() : string {
        return this.get(this.tasksPanelAddExtraTaskFlyoutLanguageItemName);
    }

    /**
    /* "TasksPanel.AddHours.Flyout" (Mounter hours has been added successfully)
    */
    public get tasksPanelAddHoursFlyout() : string {
        return this.get(this.tasksPanelAddHoursFlyoutLanguageItemName);
    }

    /**
    /* "TasksPanel.Flyout.ChangesSaved" (Changes were successfully saved)
    */
    public get tasksPanelFlyoutChangesSaved() : string {
        return this.get(this.tasksPanelFlyoutChangesSavedLanguageItemName);
    }

    /**
    /* "TasksPanel.AddExtraCharge.Confirmation" (Are you sure that you want to delete extra charge?)
    */
    public get tasksPanelAddExtraChargeConfirmation() : string {
        return this.get(this.tasksPanelAddExtraChargeConfirmationLanguageItemName);
    }

    /**
    /* "TasksPanel.AddExtraChargeModal.Title" (Task extra charges)
    */
    public get tasksPanelAddExtraChargeModalTitle() : string {
        return this.get(this.tasksPanelAddExtraChargeModalTitleLanguageItemName);
    }

    /**
    /* "TasksPanel.AddExtraChargeModal.Subtitle" (Add tasks extra charges)
    */
    public get tasksPanelAddExtraChargeModalSubtitle() : string {
        return this.get(this.tasksPanelAddExtraChargeModalSubtitleLanguageItemName);
    }

    /**
    /* "TasksPanel.AddExtraChargeModal.Type" (Type)
    */
    public get tasksPanelAddExtraChargeModalType() : string {
        return this.get(this.tasksPanelAddExtraChargeModalTypeLanguageItemName);
    }

    /**
    /* "TasksPanel.AddExtraChargeModal.Unit" (Unit)
    */
    public get tasksPanelAddExtraChargeModalUnit() : string {
        return this.get(this.tasksPanelAddExtraChargeModalUnitLanguageItemName);
    }

    /**
    /* "TasksPanel.AddExtraChargeModal.Price" (Price)
    */
    public get tasksPanelAddExtraChargeModalPrice() : string {
        return this.get(this.tasksPanelAddExtraChargeModalPriceLanguageItemName);
    }

    /**
    /* "TasksPanel.AddExtraChargeModal.Amount" (Amount)
    */
    public get tasksPanelAddExtraChargeModalAmount() : string {
        return this.get(this.tasksPanelAddExtraChargeModalAmountLanguageItemName);
    }

    /**
    /* "TasksPanel.AddExtraChargeModal.Submit" (Add extra charge)
    */
    public get tasksPanelAddExtraChargeModalSubmit() : string {
        return this.get(this.tasksPanelAddExtraChargeModalSubmitLanguageItemName);
    }

    /**
    /* "TasksPanel.AddHoursModal.AddHours" (Add mounter hours)
    */
    public get tasksPanelAddHoursModalAddHours() : string {
        return this.get(this.tasksPanelAddHoursModalAddHoursLanguageItemName);
    }

    /**
    /* "TasksPanel.AddHoursModal.NoHours" (No hours)
    */
    public get tasksPanelAddHoursModalNoHours() : string {
        return this.get(this.tasksPanelAddHoursModalNoHoursLanguageItemName);
    }

    /**
    /* "TasksPanel.AddHoursModal.Confirmation" (Are you sure that you want to delete mounter's salary hours?)
    */
    public get tasksPanelAddHoursModalConfirmation() : string {
        return this.get(this.tasksPanelAddHoursModalConfirmationLanguageItemName);
    }

    /**
    /* "ConstructionSiteManagement.AddAgreement" (Add new agreement)
    */
    public get constructionSiteManagementAddAgreement() : string {
        return this.get(this.constructionSiteManagementAddAgreementLanguageItemName);
    }

    /**
    /* "ConstructionSiteAgreement.Deactivated" (Deactivated)
    */
    public get constructionSiteAgreementDeactivated() : string {
        return this.get(this.constructionSiteAgreementDeactivatedLanguageItemName);
    }

    /**
    /* "ConstructionSiteAgreement.ContactUser" (Contact: )
    */
    public get constructionSiteAgreementContactUser() : string {
        return this.get(this.constructionSiteAgreementContactUserLanguageItemName);
    }

    /**
    /* "AddEquipment.EquipmentList" (Equipment list)
    */
    public get addEquipmentEquipmentList() : string {
        return this.get(this.addEquipmentEquipmentListLanguageItemName);
    }

    /**
    /* "Generic.UnlockForEditing" (Unlock for editing\n (Approved by {0}, at {1}))
    */
    public get genericUnlockForEditing() : string {
        return this.get(this.genericUnlockForEditingLanguageItemName);
    }

    /**
    /* "AddEquipment.Products" (Products)
    */
    public get addEquipmentProducts() : string {
        return this.get(this.addEquipmentProductsLanguageItemName);
    }

    /**
    /* "AddEquipment.ProductsDescription" (Choose product to add to equipment list)
    */
    public get addEquipmentProductsDescription() : string {
        return this.get(this.addEquipmentProductsDescriptionLanguageItemName);
    }

    /**
    /* "AddTask.TaskName" (Task name)
    */
    public get addTaskTaskName() : string {
        return this.get(this.addTaskTaskNameLanguageItemName);
    }

    /**
    /* "AddTask.TaskNameDescription" (Specify the task name)
    */
    public get addTaskTaskNameDescription() : string {
        return this.get(this.addTaskTaskNameDescriptionLanguageItemName);
    }

    /**
    /* "AddTask.StartDate" (Start date)
    */
    public get addTaskStartDate() : string {
        return this.get(this.addTaskStartDateLanguageItemName);
    }

    /**
    /* "AddTask.StartDateDescription" (Specify a date when task should be in progress)
    */
    public get addTaskStartDateDescription() : string {
        return this.get(this.addTaskStartDateDescriptionLanguageItemName);
    }

    /**
    /* "AddTask.TaskDescription" (Task description)
    */
    public get addTaskTaskDescription() : string {
        return this.get(this.addTaskTaskDescriptionLanguageItemName);
    }

    /**
    /* "AddTask.TaskDescriptionDescription" (Specify the description of the task)
    */
    public get addTaskTaskDescriptionDescription() : string {
        return this.get(this.addTaskTaskDescriptionDescriptionLanguageItemName);
    }

    /**
    /* "Allowance.NoDaily" (No daily allowance)
    */
    public get allowanceNoDaily() : string {
        return this.get(this.allowanceNoDailyLanguageItemName);
    }

    /**
    /* "Allowance.OwnTools" (Own tools or equipment)
    */
    public get allowanceOwnTools() : string {
        return this.get(this.allowanceOwnToolsLanguageItemName);
    }

    /**
    /* "Allowance.OwnToolsDescription" (Indicates, whether or not you use own tools or equipment)
    */
    public get allowanceOwnToolsDescription() : string {
        return this.get(this.allowanceOwnToolsDescriptionLanguageItemName);
    }

    /**
    /* "Allowance.GetManual" (Select Your daily allowance from dropdown menu by pressing on Daily allowance widget.\nIf own equipment was used press on Own tools or equipment widget.)
    */
    public get allowanceGetManual() : string {
        return this.get(this.allowanceGetManualLanguageItemName);
    }

    /**
    /* "Approve.Combine" (Combine)
    */
    public get approveCombine() : string {
        return this.get(this.approveCombineLanguageItemName);
    }

    /**
    /* "Approve.CombineDescription" (Combine current task with other processed task to approve)
    */
    public get approveCombineDescription() : string {
        return this.get(this.approveCombineDescriptionLanguageItemName);
    }

    /**
    /* "Approve.WorkReportName" (Work report name)
    */
    public get approveWorkReportName() : string {
        return this.get(this.approveWorkReportNameLanguageItemName);
    }

    /**
    /* "Approve.WorkReportNameDescription" (specify work report name)
    */
    public get approveWorkReportNameDescription() : string {
        return this.get(this.approveWorkReportNameDescriptionLanguageItemName);
    }

    /**
    /* "Approve.GetManual" (Adjust Your travel distance and amount of passengers with Travel distance and Passengers widgets.)
    */
    public get approveGetManual() : string {
        return this.get(this.approveGetManualLanguageItemName);
    }

    /**
    /* "Dashboard.SwitchSite" (Switch construction site)
    */
    public get dashboardSwitchSite() : string {
        return this.get(this.dashboardSwitchSiteLanguageItemName);
    }

    /**
    /* "Dashboard.SwitchSiteDescription" (Check-in to next construction site)
    */
    public get dashboardSwitchSiteDescription() : string {
        return this.get(this.dashboardSwitchSiteDescriptionLanguageItemName);
    }

    /**
    /* "Dashboard.CreateTaskDescription" (Create a new task)
    */
    public get dashboardCreateTaskDescription() : string {
        return this.get(this.dashboardCreateTaskDescriptionLanguageItemName);
    }

    /**
    /* "Dashboard.CreateTaskForCurrentSiteDescription" (Create a new task for current construction site)
    */
    public get dashboardCreateTaskForCurrentSiteDescription() : string {
        return this.get(this.dashboardCreateTaskForCurrentSiteDescriptionLanguageItemName);
    }

    /**
    /* "Dashboard.SelectTask" (Select a task)
    */
    public get dashboardSelectTask() : string {
        return this.get(this.dashboardSelectTaskLanguageItemName);
    }

    /**
    /* "Dashboard.SwitchTask" (Switch task)
    */
    public get dashboardSwitchTask() : string {
        return this.get(this.dashboardSwitchTaskLanguageItemName);
    }

    /**
    /* "Dashboard.SwitchTaskDescription" (Close current and switch to next task)
    */
    public get dashboardSwitchTaskDescription() : string {
        return this.get(this.dashboardSwitchTaskDescriptionLanguageItemName);
    }

    /**
    /* "RentaTasks.Dashboard.GetManual" (Welcome to Renta Tasks dashboard, press Sign-in to start Your workday.\n        \nAfter successful login You can change construction site or pickup a new task from the same page.\n\nWhen your workday is finished press Sign-out to start checkout process.)
    */
    public get rentaTasksDashboardGetManual() : string {
        return this.get(this.rentaTasksDashboardGetManualLanguageItemName);
    }

    /**
    /* "Dashboard.Flyout.SiteCreated" (New construction site has been created)
    */
    public get dashboardFlyoutSiteCreated() : string {
        return this.get(this.dashboardFlyoutSiteCreatedLanguageItemName);
    }

    /**
    /* "Distance.TravelDistance" (Travel distance, km)
    */
    public get distanceTravelDistance() : string {
        return this.get(this.distanceTravelDistanceLanguageItemName);
    }

    /**
    /* "Distance.TravelDistanceDescription" (Verify travel distance to the working site)
    */
    public get distanceTravelDistanceDescription() : string {
        return this.get(this.distanceTravelDistanceDescriptionLanguageItemName);
    }

    /**
    /* "Distance.SignOut" (Sign out)
    */
    public get distanceSignOut() : string {
        return this.get(this.distanceSignOutLanguageItemName);
    }

    /**
    /* "Distance.GetManual" (Adjust Your travel distance and amount of passengers with Travel distance and Passengers widgets.)
    */
    public get distanceGetManual() : string {
        return this.get(this.distanceGetManualLanguageItemName);
    }

    /**
    /* "WorkDayAllowance.Distance" (Distance)
    */
    public get workDayAllowanceDistance() : string {
        return this.get(this.workDayAllowanceDistanceLanguageItemName);
    }

    /**
    /* "Enum.ExtraChargeType.Assembly" (Assembly)
    */
    public get enumExtraChargeTypeAssembly() : string {
        return this.get(this.enumExtraChargeTypeAssemblyLanguageItemName);
    }

    /**
    /* "Enum.ExtraChargeType.CoverSales" (Cover sales)
    */
    public get enumExtraChargeTypeCoverSales() : string {
        return this.get(this.enumExtraChargeTypeCoverSalesLanguageItemName);
    }

    /**
    /* "Enum.ExtraChargeType.Delivery" (Delivery)
    */
    public get enumExtraChargeTypeDelivery() : string {
        return this.get(this.enumExtraChargeTypeDeliveryLanguageItemName);
    }

    /**
    /* "Enum.ExtraChargeType.Dismantle" (Dismantle)
    */
    public get enumExtraChargeTypeDismantle() : string {
        return this.get(this.enumExtraChargeTypeDismantleLanguageItemName);
    }

    /**
    /* "Enum.ExtraChargeType.OtherEquipmentSales" (Other equipment sales)
    */
    public get enumExtraChargeTypeOtherEquipmentSales() : string {
        return this.get(this.enumExtraChargeTypeOtherEquipmentSalesLanguageItemName);
    }

    /**
    /* "Enum.ExtraChargeType.Return" (Return)
    */
    public get enumExtraChargeTypeReturn() : string {
        return this.get(this.enumExtraChargeTypeReturnLanguageItemName);
    }

    /**
    /* "Enum.ExtraChargeType.ScaffoldingEquipmentSales" (Scaffolding equipment sales)
    */
    public get enumExtraChargeTypeScaffoldingEquipmentSales() : string {
        return this.get(this.enumExtraChargeTypeScaffoldingEquipmentSalesLanguageItemName);
    }

    /**
    /* "Enum.ExtraChargeUnit.Hour" (Hour)
    */
    public get enumExtraChargeUnitHour() : string {
        return this.get(this.enumExtraChargeUnitHourLanguageItemName);
    }

    /**
    /* "Enum.ExtraChargeUnit.M2" (Squeare meter)
    */
    public get enumExtraChargeUnitM2() : string {
        return this.get(this.enumExtraChargeUnitM2LanguageItemName);
    }

    /**
    /* "Enum.ExtraChargeUnit.Pcs" (Piece)
    */
    public get enumExtraChargeUnitPcs() : string {
        return this.get(this.enumExtraChargeUnitPcsLanguageItemName);
    }

    /**
    /* "SubcontractorCreated.Flyout" (Subcontractor {0} successfully created.)
    */
    public get subcontractorCreatedFlyout() : string {
        return this.get(this.subcontractorCreatedFlyoutLanguageItemName);
    }

    /**
    /* "SubcontractorPanel.SubcontractorAdded.Flyout" (Subcontractor {0} successfully created (added to a site).)
    */
    public get subcontractorPanelSubcontractorAddedFlyout() : string {
        return this.get(this.subcontractorPanelSubcontractorAddedFlyoutLanguageItemName);
    }

    /**
    /* "SubcontractorPanel.SubcontractorRestored.Flyout" (Subcontractor {0} restored successfully (subcontractor was marked as deleted).)
    */
    public get subcontractorPanelSubcontractorRestoredFlyout() : string {
        return this.get(this.subcontractorPanelSubcontractorRestoredFlyoutLanguageItemName);
    }

    /**
    /* "SubcontractorPanel.DeleteSubcontractor" (Delete subcontractor from warehouse)
    */
    public get subcontractorPanelDeleteSubcontractor() : string {
        return this.get(this.subcontractorPanelDeleteSubcontractorLanguageItemName);
    }

    /**
    /* "SubcontractorPanel.RestoreSubcontractor" (Restore deleted subcontractor)
    */
    public get subcontractorPanelRestoreSubcontractor() : string {
        return this.get(this.subcontractorPanelRestoreSubcontractorLanguageItemName);
    }

    /**
    /* "Validators.Length" (Text is too short)
    */
    public get validatorsLength() : string {
        return this.get(this.validatorsLengthLanguageItemName);
    }

    /**
    /* "Split.ModuleTitle" (Split)
    */
    public get splitModuleTitle() : string {
        return this.get(this.splitModuleTitleLanguageItemName);
    }

    /**
    /* "Split.ModuleSubTitle" (Split module on parts)
    */
    public get splitModuleSubTitle() : string {
        return this.get(this.splitModuleSubTitleLanguageItemName);
    }

    /**
    /* "Tasks.Mounters" (Mounters)
    */
    public get tasksMounters() : string {
        return this.get(this.tasksMountersLanguageItemName);
    }

    /**
    /* "Tasks.Type" (Type)
    */
    public get tasksType() : string {
        return this.get(this.tasksTypeLanguageItemName);
    }

    /**
    /* "Tasks.Name" (Name)
    */
    public get tasksName() : string {
        return this.get(this.tasksNameLanguageItemName);
    }

    /**
    /* "Tasks.Start" (Start)
    */
    public get tasksStart() : string {
        return this.get(this.tasksStartLanguageItemName);
    }

    /**
    /* "Tasks.Done" (Done)
    */
    public get tasksDone() : string {
        return this.get(this.tasksDoneLanguageItemName);
    }

    /**
    /* "Tasks.Hours" (Hours)
    */
    public get tasksHours() : string {
        return this.get(this.tasksHoursLanguageItemName);
    }

    /**
    /* "Tasks.ExtraHours" (Extra hours)
    */
    public get tasksExtraHours() : string {
        return this.get(this.tasksExtraHoursLanguageItemName);
    }

    /**
    /* "Tasks.Date" (Date)
    */
    public get tasksDate() : string {
        return this.get(this.tasksDateLanguageItemName);
    }

    /**
    /* "TasksToolbar.Search" (Search)
    */
    public get tasksToolbarSearch() : string {
        return this.get(this.tasksToolbarSearchLanguageItemName);
    }

    /**
    /* "TasksToolbar.Date" (Date:)
    */
    public get tasksToolbarDate() : string {
        return this.get(this.tasksToolbarDateLanguageItemName);
    }

    /**
    /* "TasksToolbar.ClearFilters" (Clear filters)
    */
    public get tasksToolbarClearFilters() : string {
        return this.get(this.tasksToolbarClearFiltersLanguageItemName);
    }

    /**
    /* "Component.SignatureWidget.Clear" (Clear)
    */
    public get componentSignatureWidgetClear() : string {
        return this.get(this.componentSignatureWidgetClearLanguageItemName);
    }

    /**
    /* "Component.SignatureWidget.Done" (Done)
    */
    public get componentSignatureWidgetDone() : string {
        return this.get(this.componentSignatureWidgetDoneLanguageItemName);
    }

    /**
    /* "Component.Modal.SaveChanges" (Save changes)
    */
    public get componentModalSaveChanges() : string {
        return this.get(this.componentModalSaveChangesLanguageItemName);
    }

    /**
    /* "Component.Modal.Close" (Close)
    */
    public get componentModalClose() : string {
        return this.get(this.componentModalCloseLanguageItemName);
    }

    /**
    /* "Component.PageContainer.PageHelp" (Page help)
    */
    public get componentPageContainerPageHelp() : string {
        return this.get(this.componentPageContainerPageHelpLanguageItemName);
    }

    /**
    /* "SubcontractorWorkDayPanel.Subcontractors" (Subcontractors)
    */
    public get subcontractorWorkDayPanelSubcontractors() : string {
        return this.get(this.subcontractorWorkDayPanelSubcontractorsLanguageItemName);
    }

    /**
    /* "SubcontractorWorkDayPanel.Managers" (Managers)
    */
    public get subcontractorWorkDayPanelManagers() : string {
        return this.get(this.subcontractorWorkDayPanelManagersLanguageItemName);
    }

    /**
    /* "SubcontractorWorkDayPanel.Mounters" (Mounters)
    */
    public get subcontractorWorkDayPanelMounters() : string {
        return this.get(this.subcontractorWorkDayPanelMountersLanguageItemName);
    }

    /**
    /* "ImageModal.PreviewNotSupported" (Preview is not supported for this type of file, but you can download it instead)
    */
    public get imageModalPreviewNotSupported() : string {
        return this.get(this.imageModalPreviewNotSupportedLanguageItemName);
    }

    /**
    /* "ImageModal.Download" (Download)
    */
    public get imageModalDownload() : string {
        return this.get(this.imageModalDownloadLanguageItemName);
    }

    /**
    /* "SelectTask.DropdownTask.Label" (Task)
    */
    public get selectTaskDropdownTaskLabel() : string {
        return this.get(this.selectTaskDropdownTaskLabelLanguageItemName);
    }

    /**
    /* "SelectTask.DropdownTask.Description" (Press to select task)
    */
    public get selectTaskDropdownTaskDescription() : string {
        return this.get(this.selectTaskDropdownTaskDescriptionLanguageItemName);
    }

    /**
    /* "SelectTask.GetManual" (Select a task You are going to work on from dropdown menu by pressing on Task widget)
    */
    public get selectTaskGetManual() : string {
        return this.get(this.selectTaskGetManualLanguageItemName);
    }

    /**
    /* "SelectTask.FetchTasks.Error" (No tasks available for selected site.\nYou can sign-in without task selection.\nSwipe to right to sign-in.)
    */
    public get selectTaskFetchTasksError() : string {
        return this.get(this.selectTaskFetchTasksErrorLanguageItemName);
    }

    /**
    /* "SelectOrganization.DropdownOrganization.Label" (Organization)
    */
    public get selectOrganizationDropdownOrganizationLabel() : string {
        return this.get(this.selectOrganizationDropdownOrganizationLabelLanguageItemName);
    }

    /**
    /* "SelectOrganization.DropdownOrganization.Description" (Press to select organization)
    */
    public get selectOrganizationDropdownOrganizationDescription() : string {
        return this.get(this.selectOrganizationDropdownOrganizationDescriptionLanguageItemName);
    }

    /**
    /* "SelectOrganization.GetManual" (Select a organization You are going to work on from dropdown menu by pressing on Organization widget)
    */
    public get selectOrganizationGetManual() : string {
        return this.get(this.selectOrganizationGetManualLanguageItemName);
    }

    /**
    /* "Component.NavigationWidget.Previous" (Previous)
    */
    public get componentNavigationWidgetPrevious() : string {
        return this.get(this.componentNavigationWidgetPreviousLanguageItemName);
    }

    /**
    /* "Component.NavigationWidget.ReturnToPrevious" (Return to previous step)
    */
    public get componentNavigationWidgetReturnToPrevious() : string {
        return this.get(this.componentNavigationWidgetReturnToPreviousLanguageItemName);
    }

    /**
    /* "Component.NavigationWidget.Next" (Next)
    */
    public get componentNavigationWidgetNext() : string {
        return this.get(this.componentNavigationWidgetNextLanguageItemName);
    }

    /**
    /* "Component.NavigationWidget.GoToNext" (Go to next step)
    */
    public get componentNavigationWidgetGoToNext() : string {
        return this.get(this.componentNavigationWidgetGoToNextLanguageItemName);
    }

    /**
    /* "Task.AdditionalEquipments" (Additional equipments)
    */
    public get taskAdditionalEquipments() : string {
        return this.get(this.taskAdditionalEquipmentsLanguageItemName);
    }

    /**
    /* "Task.AdditionalEquipmentsDescription" (Need to add equipments to the task)
    */
    public get taskAdditionalEquipmentsDescription() : string {
        return this.get(this.taskAdditionalEquipmentsDescriptionLanguageItemName);
    }

    /**
    /* "Task.Hours" (Hours)
    */
    public get taskHours() : string {
        return this.get(this.taskHoursLanguageItemName);
    }

    /**
    /* "Task.HoursDescription" (Amount of hours spent for the task)
    */
    public get taskHoursDescription() : string {
        return this.get(this.taskHoursDescriptionLanguageItemName);
    }

    /**
    /* "Task.InProgress" (In progress)
    */
    public get taskInProgress() : string {
        return this.get(this.taskInProgressLanguageItemName);
    }

    /**
    /* "Task.Done" (Done)
    */
    public get taskDone() : string {
        return this.get(this.taskDoneLanguageItemName);
    }

    /**
    /* "Task.TaskStatus" (Task status)
    */
    public get taskTaskStatus() : string {
        return this.get(this.taskTaskStatusLanguageItemName);
    }

    /**
    /* "Task.TaskStatusDescription" (Indicates whether task is finished or not)
    */
    public get taskTaskStatusDescription() : string {
        return this.get(this.taskTaskStatusDescriptionLanguageItemName);
    }

    /**
    /* "Task.Approve" (Approve)
    */
    public get taskApprove() : string {
        return this.get(this.taskApproveLanguageItemName);
    }

    /**
    /* "Task.ApproveDescription" (Approve the task by customer)
    */
    public get taskApproveDescription() : string {
        return this.get(this.taskApproveDescriptionLanguageItemName);
    }

    /**
    /* "Task.Confirm" (Confirm)
    */
    public get taskConfirm() : string {
        return this.get(this.taskConfirmLanguageItemName);
    }

    /**
    /* "Task.GetManual" (Checkout each task You have been working on today by selecting amount of hours spent on it (for extra tasks only) \nand adjust current status of the task by using widgets.\n\nPress sign-out button to finish Your workday.)
    */
    public get taskGetManual() : string {
        return this.get(this.taskGetManualLanguageItemName);
    }

    /**
    /* "SelectConstructionSite.GetManual" (Select construction site from dropdown menu by clicking on Construction site widget, or use QR code scanner widget. By default the closest construction site is chosen accordion to Your current location.)
    */
    public get selectConstructionSiteGetManual() : string {
        return this.get(this.selectConstructionSiteGetManualLanguageItemName);
    }

    /**
    /* "SelectConstructionSite.ConstructionSite" (Construction site)
    */
    public get selectConstructionSiteConstructionSite() : string {
        return this.get(this.selectConstructionSiteConstructionSiteLanguageItemName);
    }

    /**
    /* "SelectConstructionSite.ConstructionSiteDescription" (Press to select construction site)
    */
    public get selectConstructionSiteConstructionSiteDescription() : string {
        return this.get(this.selectConstructionSiteConstructionSiteDescriptionLanguageItemName);
    }

    /**
    /* "Signature.ApprovalType" (Approval type)
    */
    public get signatureApprovalType() : string {
        return this.get(this.signatureApprovalTypeLanguageItemName);
    }

    /**
    /* "Signature.ApprovalTypeDescription" (Choose approval type)
    */
    public get signatureApprovalTypeDescription() : string {
        return this.get(this.signatureApprovalTypeDescriptionLanguageItemName);
    }

    /**
    /* "Signature.Signature" (Signature)
    */
    public get signatureSignature() : string {
        return this.get(this.signatureSignatureLanguageItemName);
    }

    /**
    /* "Signature.SignatureDescription" (Ask customer to draw his signature to approve)
    */
    public get signatureSignatureDescription() : string {
        return this.get(this.signatureSignatureDescriptionLanguageItemName);
    }

    /**
    /* "Signature.GetManual" (Adjust Your travel distance and amount of passengers with Travel distance and Passengers widgets.)
    */
    public get signatureGetManual() : string {
        return this.get(this.signatureGetManualLanguageItemName);
    }

    /**
    /* "QrWidget.Scan.Error" (QR code scanner is not available, probably no permissions to camera on your mobile device.)
    */
    public get qrWidgetScanError() : string {
        return this.get(this.qrWidgetScanErrorLanguageItemName);
    }

    /**
    /* "Admin.Grid.NoInvitationsText" (No invitations has been sent)
    */
    public get adminGridNoInvitationsText() : string {
        return this.get(this.adminGridNoInvitationsTextLanguageItemName);
    }

    /**
    /* "Admin.Button.ResendInvitation" (Resend invitation)
    */
    public get adminButtonResendInvitation() : string {
        return this.get(this.adminButtonResendInvitationLanguageItemName);
    }

    /**
    /* "Admin.Button.ResetPassword" (Reset password)
    */
    public get adminButtonResetPassword() : string {
        return this.get(this.adminButtonResetPasswordLanguageItemName);
    }

    /**
    /* "Admin.Label.AuthenticationType" (Authentication type)
    */
    public get adminLabelAuthenticationType() : string {
        return this.get(this.adminLabelAuthenticationTypeLanguageItemName);
    }

    /**
    /* "Enum.AuthType.Email" (Email)
    */
    public get enumAuthTypeEmail() : string {
        return this.get(this.enumAuthTypeEmailLanguageItemName);
    }

    /**
    /* "Enum.AuthType.Phone" (SMS)
    */
    public get enumAuthTypePhone() : string {
        return this.get(this.enumAuthTypePhoneLanguageItemName);
    }

    /**
    /* "Admin.Tab.Invitations" (Invitations)
    */
    public get adminTabInvitations() : string {
        return this.get(this.adminTabInvitationsLanguageItemName);
    }

    /**
    /* "Admin.ConfirmationButton.ResetPassword" (Are you sure you want to reset password for user "{0}"?)
    */
    public get adminConfirmationButtonResetPassword() : string {
        return this.get(this.adminConfirmationButtonResetPasswordLanguageItemName);
    }

    /**
    /* "Admin.ConfirmationButton.ResendInvitation" (Are you sure you want to invite user "{0}"?)
    */
    public get adminConfirmationButtonResendInvitation() : string {
        return this.get(this.adminConfirmationButtonResendInvitationLanguageItemName);
    }

    /**
    /* "Admin.Alert.UserPasswordInfo" (User account "{0}" does not have a password.)
    */
    public get adminAlertUserPasswordInfo() : string {
        return this.get(this.adminAlertUserPasswordInfoLanguageItemName);
    }

    /**
    /* "Admin.Grid.CreatedBy" (Created by)
    */
    public get adminGridCreatedBy() : string {
        return this.get(this.adminGridCreatedByLanguageItemName);
    }

    /**
    /* "Admin.Grid.Type" (Type)
    */
    public get adminGridType() : string {
        return this.get(this.adminGridTypeLanguageItemName);
    }

    /**
    /* "Admin.Grid.CreatedAt" (Created at)
    */
    public get adminGridCreatedAt() : string {
        return this.get(this.adminGridCreatedAtLanguageItemName);
    }

    /**
    /* "Admin.Grid.ExpiresAt" (Expires at)
    */
    public get adminGridExpiresAt() : string {
        return this.get(this.adminGridExpiresAtLanguageItemName);
    }

    /**
    /* "Admin.Grid.ProcessedAt" (Processed At)
    */
    public get adminGridProcessedAt() : string {
        return this.get(this.adminGridProcessedAtLanguageItemName);
    }

    /**
    /* "Admin.Grid.Reusable" (Reusable)
    */
    public get adminGridReusable() : string {
        return this.get(this.adminGridReusableLanguageItemName);
    }

    /**
    /* "Admin.Grid.AuthType" (Auth type)
    */
    public get adminGridAuthType() : string {
        return this.get(this.adminGridAuthTypeLanguageItemName);
    }

    /**
    /* "OrganizationPanel.ExternalAddress" (External address)
    */
    public get organizationPanelExternalAddress() : string {
        return this.get(this.organizationPanelExternalAddressLanguageItemName);
    }

    /**
    /* "OrganizationPanel.Name" (Name)
    */
    public get organizationPanelName() : string {
        return this.get(this.organizationPanelNameLanguageItemName);
    }

    /**
    /* "OrganizationPanel.TransactionIdentifier" (E-invoice address)
    */
    public get organizationPanelTransactionIdentifier() : string {
        return this.get(this.organizationPanelTransactionIdentifierLanguageItemName);
    }

    /**
    /* "OrganizationPanel.Intermediator" (Intermediator)
    */
    public get organizationPanelIntermediator() : string {
        return this.get(this.organizationPanelIntermediatorLanguageItemName);
    }

    /**
    /* "OrganizationPanel.VirtualAddress" (Virtual address (Postal box))
    */
    public get organizationPanelVirtualAddress() : string {
        return this.get(this.organizationPanelVirtualAddressLanguageItemName);
    }

    /**
    /* "Admin.AlertMessage.AccountSaved" (User account "{0}" saved successfully.)
    */
    public get adminAlertMessageAccountSaved() : string {
        return this.get(this.adminAlertMessageAccountSavedLanguageItemName);
    }

    /**
    /* "Admin.AlertError.AccountExist" (User account "{0}" already exist.)
    */
    public get adminAlertErrorAccountExist() : string {
        return this.get(this.adminAlertErrorAccountExistLanguageItemName);
    }

    /**
    /* "Admin.AlertError.WorkCardIdExists" (Work card id "{0}" is already registered for another user account.)
    */
    public get adminAlertErrorWorkCardIdExists() : string {
        return this.get(this.adminAlertErrorWorkCardIdExistsLanguageItemName);
    }

    /**
    /* "Admin.AlertError.PhoneNumberInvalid" (Phone number is invalid.)
    */
    public get adminAlertErrorPhoneNumberInvalid() : string {
        return this.get(this.adminAlertErrorPhoneNumberInvalidLanguageItemName);
    }

    /**
    /* "ForgotPassword.UsernameInput" (Email or phone number)
    */
    public get forgotPasswordUsernameInput() : string {
        return this.get(this.forgotPasswordUsernameInputLanguageItemName);
    }

    /**
    /* "Enum.InvitationType.Invitation" (Invitation)
    */
    public get enumInvitationTypeInvitation() : string {
        return this.get(this.enumInvitationTypeInvitationLanguageItemName);
    }

    /**
    /* "Enum.InvitationType.ResetPassword" (Reset password)
    */
    public get enumInvitationTypeResetPassword() : string {
        return this.get(this.enumInvitationTypeResetPasswordLanguageItemName);
    }

    /**
    /* "Enum.InvitationType.ForgotPassword" (Forgot password)
    */
    public get enumInvitationTypeForgotPassword() : string {
        return this.get(this.enumInvitationTypeForgotPasswordLanguageItemName);
    }

    /**
    /* "Admin.ConfirmationButton.Rollback" (Are you sure that you want to rollback unsaved changes?)
    */
    public get adminConfirmationButtonRollback() : string {
        return this.get(this.adminConfirmationButtonRollbackLanguageItemName);
    }

    /**
    /* "WorkDayPanel.NoReportedHours" (No reported hours)
    */
    public get workDayPanelNoReportedHours() : string {
        return this.get(this.workDayPanelNoReportedHoursLanguageItemName);
    }

    /**
    /* "WorkDayPanel.SiteOrWarehouseColumn.Title" ("Manager: {0}\nAddress: {1}  ")
    */
    public get workDayPanelSiteOrWarehouseColumnTitle() : string {
        return this.get(this.workDayPanelSiteOrWarehouseColumnTitleLanguageItemName);
    }

    /**
    /* "KnownSettings.MileagePrice" (Default kilometer allowance, €/m)
    */
    public get knownSettingsMileagePrice() : string {
        return this.get(this.knownSettingsMileagePriceLanguageItemName);
    }

    /**
    /* "KnownSettings.HourPrice" (Default hourly price, €/h)
    */
    public get knownSettingsHourPrice() : string {
        return this.get(this.knownSettingsHourPriceLanguageItemName);
    }

    /**
    /* "LocationPickerModal.Title" (Location picker)
    */
    public get locationPickerModalTitle() : string {
        return this.get(this.locationPickerModalTitleLanguageItemName);
    }

    /**
    /* "LocationPickerModal.Subtitle" (Choose location on map)
    */
    public get locationPickerModalSubtitle() : string {
        return this.get(this.locationPickerModalSubtitleLanguageItemName);
    }

    /**
    /* "LocationPickerModal.SetLocation" (Set location)
    */
    public get locationPickerModalSetLocation() : string {
        return this.get(this.locationPickerModalSetLocationLanguageItemName);
    }

    /**
    /* "TasksPage.TaskStatus.Any" (All)
    */
    public get tasksPageTaskStatusAny() : string {
        return this.get(this.tasksPageTaskStatusAnyLanguageItemName);
    }

    /**
    /* "TasksPage.TaskStatus.Any.Subtext" (All tasks)
    */
    public get tasksPageTaskStatusAnySubtext() : string {
        return this.get(this.tasksPageTaskStatusAnySubtextLanguageItemName);
    }

    /**
    /* "TasksPage.TaskStatus.Further" (Further)
    */
    public get tasksPageTaskStatusFurther() : string {
        return this.get(this.tasksPageTaskStatusFurtherLanguageItemName);
    }

    /**
    /* "TasksPage.TaskStatus.Further.Subtext" (Further tasks)
    */
    public get tasksPageTaskStatusFurtherSubtext() : string {
        return this.get(this.tasksPageTaskStatusFurtherSubtextLanguageItemName);
    }

    /**
    /* "TasksPage.TaskStatus.Ongoing" (Ongoing)
    */
    public get tasksPageTaskStatusOngoing() : string {
        return this.get(this.tasksPageTaskStatusOngoingLanguageItemName);
    }

    /**
    /* "TasksPage.TaskStatus.Ongoing.Subtext" (Ongoing tasks)
    */
    public get tasksPageTaskStatusOngoingSubtext() : string {
        return this.get(this.tasksPageTaskStatusOngoingSubtextLanguageItemName);
    }

    /**
    /* "TasksPage.TaskStatus" (Task status)
    */
    public get tasksPageTaskStatus() : string {
        return this.get(this.tasksPageTaskStatusLanguageItemName);
    }

    /**
    /* "TasksPage.NotAssigned" (Show unassigned)
    */
    public get tasksPageNotAssigned() : string {
        return this.get(this.tasksPageNotAssignedLanguageItemName);
    }

    /**
    /* "ConfirmationDialog.Comment" (Please leave a comment)
    */
    public get confirmationDialogComment() : string {
        return this.get(this.confirmationDialogCommentLanguageItemName);
    }

    /**
    /* "Component.ConfirmationDialog.AreYouSure" (Are you sure?)
    */
    public get componentConfirmationDialogAreYouSure() : string {
        return this.get(this.componentConfirmationDialogAreYouSureLanguageItemName);
    }

    /**
    /* "RentaTasks.Controller.SignInExpirationAlert" (The working session is expired!\nPlease sign-in to the construction site again to continue work.)
    */
    public get rentaTasksControllerSignInExpirationAlert() : string {
        return this.get(this.rentaTasksControllerSignInExpirationAlertLanguageItemName);
    }

    /**
    /* "Widget.Pwa.Install" (Install)
    */
    public get widgetPwaInstall() : string {
        return this.get(this.widgetPwaInstallLanguageItemName);
    }

    /**
    /* "Widget.Pwa.Description" (Add application to the home screen)
    */
    public get widgetPwaDescription() : string {
        return this.get(this.widgetPwaDescriptionLanguageItemName);
    }

    /**
    /* "Admin.OrganizationContracts.Label" (Organization Contracts)
    */
    public get adminOrganizationContractsLabel() : string {
        return this.get(this.adminOrganizationContractsLabelLanguageItemName);
    }

    /**
    /* "TasksPanel.AddExtraChargeModal.Description" (Comment)
    */
    public get tasksPanelAddExtraChargeModalDescription() : string {
        return this.get(this.tasksPanelAddExtraChargeModalDescriptionLanguageItemName);
    }

    /**
    /* "AddWorkReportModal.Delete.Confirm" (Do you really want to delete this work report?)
    */
    public get addWorkReportModalDeleteConfirm() : string {
        return this.get(this.addWorkReportModalDeleteConfirmLanguageItemName);
    }

    /**
    /* "ConstructionSites.Confirmation.ActivateSite" (Are you sure, you want to activate construction site \n "{0}"?)
    */
    public get constructionSitesConfirmationActivateSite() : string {
        return this.get(this.constructionSitesConfirmationActivateSiteLanguageItemName);
    }

    /**
    /* "ConstructionSites.Confirmation.DeactivateSite" (Are you sure, you want to deactivate construction site \n "{0}"?)
    */
    public get constructionSitesConfirmationDeactivateSite() : string {
        return this.get(this.constructionSitesConfirmationDeactivateSiteLanguageItemName);
    }

    /**
    /* "AddConstructionSite.InvoiceReference" (Invoice reference)
    */
    public get addConstructionSiteInvoiceReference() : string {
        return this.get(this.addConstructionSiteInvoiceReferenceLanguageItemName);
    }

    /**
    /* "AddConstructionSite.Reference" (ERP Reference)
    */
    public get addConstructionSiteReference() : string {
        return this.get(this.addConstructionSiteReferenceLanguageItemName);
    }

    /**
    /* "AddConstructionSite.HourPrice" (Default hour price)
    */
    public get addConstructionSiteHourPrice() : string {
        return this.get(this.addConstructionSiteHourPriceLanguageItemName);
    }

    /**
    /* "AddConstructionSite.MileagePrice" (Default mileage price)
    */
    public get addConstructionSiteMileagePrice() : string {
        return this.get(this.addConstructionSiteMileagePriceLanguageItemName);
    }

    /**
    /* "WorkOrders.ShowDetailsTitle" (Show equipment)
    */
    public get workOrdersShowDetailsTitle() : string {
        return this.get(this.workOrdersShowDetailsTitleLanguageItemName);
    }

    /**
    /* "WorkOrderEquipment.Name" (Product)
    */
    public get workOrderEquipmentName() : string {
        return this.get(this.workOrderEquipmentNameLanguageItemName);
    }

    /**
    /* "WorkOrderEquipment.Description" (Description)
    */
    public get workOrderEquipmentDescription() : string {
        return this.get(this.workOrderEquipmentDescriptionLanguageItemName);
    }

    /**
    /* "WorkOrderEquipment.Amount" (Amount)
    */
    public get workOrderEquipmentAmount() : string {
        return this.get(this.workOrderEquipmentAmountLanguageItemName);
    }

    /**
    /* "WorkOrderEquipment.AddProduct" (Add product)
    */
    public get workOrderEquipmentAddProduct() : string {
        return this.get(this.workOrderEquipmentAddProductLanguageItemName);
    }

    /**
    /* "WorkOrders.CustomerGridHeader" (Customer)
    */
    public get workOrdersCustomerGridHeader() : string {
        return this.get(this.workOrdersCustomerGridHeaderLanguageItemName);
    }

    /**
    /* "WorkOrders.CustomerApprover" (Customer Approver)
    */
    public get workOrdersCustomerApprover() : string {
        return this.get(this.workOrdersCustomerApproverLanguageItemName);
    }

    /**
    /* "WorkOrders.CustomerOrderer" (Orderer)
    */
    public get workOrdersCustomerOrderer() : string {
        return this.get(this.workOrdersCustomerOrdererLanguageItemName);
    }

    /**
    /* "WorkOrders.Manager" (Manager)
    */
    public get workOrdersManager() : string {
        return this.get(this.workOrdersManagerLanguageItemName);
    }

    /**
    /* "WorkOrders.InvoiceReference" (Invoice reference)
    */
    public get workOrdersInvoiceReference() : string {
        return this.get(this.workOrdersInvoiceReferenceLanguageItemName);
    }

    /**
    /* "Component.HoursWidget.HoursSpent" (Hours spent for task)
    */
    public get componentHoursWidgetHoursSpent() : string {
        return this.get(this.componentHoursWidgetHoursSpentLanguageItemName);
    }

    /**
    /* "Component.HoursWidget.AddOvertime" (Add overtime)
    */
    public get componentHoursWidgetAddOvertime() : string {
        return this.get(this.componentHoursWidgetAddOvertimeLanguageItemName);
    }

    /**
    /* "Component.HoursWidget.NormalHours" (Normal)
    */
    public get componentHoursWidgetNormalHours() : string {
        return this.get(this.componentHoursWidgetNormalHoursLanguageItemName);
    }

    /**
    /* "WorkOrders.EquipmentsTab.Title" (Products)
    */
    public get workOrdersEquipmentsTabTitle() : string {
        return this.get(this.workOrdersEquipmentsTabTitleLanguageItemName);
    }

    /**
    /* "WorkOrders.HoursTab.Title" (Hours)
    */
    public get workOrdersHoursTabTitle() : string {
        return this.get(this.workOrdersHoursTabTitleLanguageItemName);
    }

    /**
    /* "WorkOrderDetails.AddHours" (Add hours)
    */
    public get workOrderDetailsAddHours() : string {
        return this.get(this.workOrderDetailsAddHoursLanguageItemName);
    }

    /**
    /* "WorkOrderDetails.HoursGrid.Day" (Day)
    */
    public get workOrderDetailsHoursGridDay() : string {
        return this.get(this.workOrderDetailsHoursGridDayLanguageItemName);
    }

    /**
    /* "WorkOrderDetails.HoursGrid.User" (User)
    */
    public get workOrderDetailsHoursGridUser() : string {
        return this.get(this.workOrderDetailsHoursGridUserLanguageItemName);
    }

    /**
    /* "WorkOrderDetails.HoursGrid.HoursHeader" (Hours)
    */
    public get workOrderDetailsHoursGridHoursHeader() : string {
        return this.get(this.workOrderDetailsHoursGridHoursHeaderLanguageItemName);
    }

    /**
    /* "WorkOrderDetails.HoursGrid.NormalHours" (Normal)
    */
    public get workOrderDetailsHoursGridNormalHours() : string {
        return this.get(this.workOrderDetailsHoursGridNormalHoursLanguageItemName);
    }

    /**
    /* "WorkOrderDetails.HoursGrid.OverTime50" (Overtime 50%)
    */
    public get workOrderDetailsHoursGridOverTime50() : string {
        return this.get(this.workOrderDetailsHoursGridOverTime50LanguageItemName);
    }

    /**
    /* "WorkOrderDetails.HoursGrid.OverTime100" (Overtime 100%)
    */
    public get workOrderDetailsHoursGridOverTime100() : string {
        return this.get(this.workOrderDetailsHoursGridOverTime100LanguageItemName);
    }

    /**
    /* "WorkOrderEquipment.Price" (Price)
    */
    public get workOrderEquipmentPrice() : string {
        return this.get(this.workOrderEquipmentPriceLanguageItemName);
    }

    /**
    /* "WorkOrderDetailsHoursGrid.Price" (Price)
    */
    public get workOrderDetailsHoursGridPrice() : string {
        return this.get(this.workOrderDetailsHoursGridPriceLanguageItemName);
    }

    /**
    /* "SummaryWidget.Title" (Work report summary)
    */
    public get summaryWidgetTitle() : string {
        return this.get(this.summaryWidgetTitleLanguageItemName);
    }

    /**
    /* "SummaryWidget.Orderer" (Orderer:)
    */
    public get summaryWidgetOrderer() : string {
        return this.get(this.summaryWidgetOrdererLanguageItemName);
    }

    /**
    /* "SummaryWidget.Approver" (Approver:)
    */
    public get summaryWidgetApprover() : string {
        return this.get(this.summaryWidgetApproverLanguageItemName);
    }

    /**
    /* "SummaryWidget.Button.CreateApprover" (Create new approver)
    */
    public get summaryWidgetButtonCreateApprover() : string {
        return this.get(this.summaryWidgetButtonCreateApproverLanguageItemName);
    }

    /**
    /* "SummaryWidget.WorkOrderName" (Work report name:)
    */
    public get summaryWidgetWorkOrderName() : string {
        return this.get(this.summaryWidgetWorkOrderNameLanguageItemName);
    }

    /**
    /* "SummaryWidget.WorkOrderDescription" (Description:)
    */
    public get summaryWidgetWorkOrderDescription() : string {
        return this.get(this.summaryWidgetWorkOrderDescriptionLanguageItemName);
    }

    /**
    /* "Generic.NoData" (No data)
    */
    public get genericNoData() : string {
        return this.get(this.genericNoDataLanguageItemName);
    }

    /**
    /* "CreateContractPersonModal.Subtitle" (Create new approver)
    */
    public get createContractPersonModalSubtitle() : string {
        return this.get(this.createContractPersonModalSubtitleLanguageItemName);
    }

    /**
    /* "WorkOrders.ApprovalType" (Approval)
    */
    public get workOrdersApprovalType() : string {
        return this.get(this.workOrdersApprovalTypeLanguageItemName);
    }

    /**
    /* "WorkOrders.SentAt" (The time when the work order has been approved by the customer or sent to the customer for approval)
    */
    public get workOrdersSentAt() : string {
        return this.get(this.workOrdersSentAtLanguageItemName);
    }

    /**
    /* "WorkOrders.ApproveAction" (Approve)
    */
    public get workOrdersApproveAction() : string {
        return this.get(this.workOrdersApproveActionLanguageItemName);
    }

    /**
    /* "WorkOrders.DeclineAction" (Decline)
    */
    public get workOrdersDeclineAction() : string {
        return this.get(this.workOrdersDeclineActionLanguageItemName);
    }

    /**
    /* "WorkOrders.Page.Title" (Work orders)
    */
    public get workOrdersPageTitle() : string {
        return this.get(this.workOrdersPageTitleLanguageItemName);
    }

    /**
    /* "WorkOrders.ActiveList.Title" (Active work orders: {0}.)
    */
    public get workOrdersActiveListTitle() : string {
        return this.get(this.workOrdersActiveListTitleLanguageItemName);
    }

    /**
    /* "WorkOrders.ActiveList.NoOrders" (No active work orders.)
    */
    public get workOrdersActiveListNoOrders() : string {
        return this.get(this.workOrdersActiveListNoOrdersLanguageItemName);
    }

    /**
    /* "WorkOrders.CompletedList.Title" (Completed work orders: {0}.)
    */
    public get workOrdersCompletedListTitle() : string {
        return this.get(this.workOrdersCompletedListTitleLanguageItemName);
    }

    /**
    /* "WorkOrders.CompletedList.NoOrders" (No completed work orders.)
    */
    public get workOrdersCompletedListNoOrders() : string {
        return this.get(this.workOrdersCompletedListNoOrdersLanguageItemName);
    }

    /**
    /* "WorkOrders.Filters.Name" (Work order name)
    */
    public get workOrdersFiltersName() : string {
        return this.get(this.workOrdersFiltersNameLanguageItemName);
    }

    /**
    /* "WorkOrders.Filters.Statuses" (Work order statuses)
    */
    public get workOrdersFiltersStatuses() : string {
        return this.get(this.workOrdersFiltersStatusesLanguageItemName);
    }

    /**
    /* "WorkOrders.Filters.Customer" (Customer)
    */
    public get workOrdersFiltersCustomer() : string {
        return this.get(this.workOrdersFiltersCustomerLanguageItemName);
    }

    /**
    /* "WorkOrders.Filters.ConstructionSite" (Construction site)
    */
    public get workOrdersFiltersConstructionSite() : string {
        return this.get(this.workOrdersFiltersConstructionSiteLanguageItemName);
    }

    /**
    /* "WorkOrders.Filters.From" (From)
    */
    public get workOrdersFiltersFrom() : string {
        return this.get(this.workOrdersFiltersFromLanguageItemName);
    }

    /**
    /* "WorkOrders.Filters.To" (To)
    */
    public get workOrdersFiltersTo() : string {
        return this.get(this.workOrdersFiltersToLanguageItemName);
    }

    /**
    /* "WorkOrders.Filters.Date" (Date)
    */
    public get workOrdersFiltersDate() : string {
        return this.get(this.workOrdersFiltersDateLanguageItemName);
    }

    /**
    /* "WorkOrders.FiltersButton.Apply" (Apply)
    */
    public get workOrdersFiltersButtonApply() : string {
        return this.get(this.workOrdersFiltersButtonApplyLanguageItemName);
    }

    /**
    /* "WorkOrders.FiltersButton.Clear" (Clear)
    */
    public get workOrdersFiltersButtonClear() : string {
        return this.get(this.workOrdersFiltersButtonClearLanguageItemName);
    }

    /**
    /* "Enum.WorkOrderStatus.Created" (Created)
    */
    public get enumWorkOrderStatusCreated() : string {
        return this.get(this.enumWorkOrderStatusCreatedLanguageItemName);
    }

    /**
    /* "Enum.WorkOrderStatus.InProgress" (In progress)
    */
    public get enumWorkOrderStatusInProgress() : string {
        return this.get(this.enumWorkOrderStatusInProgressLanguageItemName);
    }

    /**
    /* "Enum.WorkOrderStatus.Completed" (Completed)
    */
    public get enumWorkOrderStatusCompleted() : string {
        return this.get(this.enumWorkOrderStatusCompletedLanguageItemName);
    }

    /**
    /* "Enum.WorkOrderStatus.ApprovedByManager" (Approved by manager)
    */
    public get enumWorkOrderStatusApprovedByManager() : string {
        return this.get(this.enumWorkOrderStatusApprovedByManagerLanguageItemName);
    }

    /**
    /* "Enum.WorkOrderStatus.DeclinedByManager" (Declined by manager)
    */
    public get enumWorkOrderStatusDeclinedByManager() : string {
        return this.get(this.enumWorkOrderStatusDeclinedByManagerLanguageItemName);
    }

    /**
    /* "Enum.WorkOrderStatus.SentToCustomer" (Sent to customer)
    */
    public get enumWorkOrderStatusSentToCustomer() : string {
        return this.get(this.enumWorkOrderStatusSentToCustomerLanguageItemName);
    }

    /**
    /* "Enum.WorkOrderStatus.ApprovedByCustomer" (Approved by customer)
    */
    public get enumWorkOrderStatusApprovedByCustomer() : string {
        return this.get(this.enumWorkOrderStatusApprovedByCustomerLanguageItemName);
    }

    /**
    /* "Enum.WorkOrderStatus.DeclinedByCustomer" (Declined by customer)
    */
    public get enumWorkOrderStatusDeclinedByCustomer() : string {
        return this.get(this.enumWorkOrderStatusDeclinedByCustomerLanguageItemName);
    }

    /**
    /* "Enum.WorkOrderStatus.Invoiced" (Invoiced)
    */
    public get enumWorkOrderStatusInvoiced() : string {
        return this.get(this.enumWorkOrderStatusInvoicedLanguageItemName);
    }

    /**
    /* "Enum.WorkOrderStatus.Deleted" (Deleted)
    */
    public get enumWorkOrderStatusDeleted() : string {
        return this.get(this.enumWorkOrderStatusDeletedLanguageItemName);
    }

    /**
    /* "Enum.WorkOrderStatus.Unknown" (Unknown)
    */
    public get enumWorkOrderStatusUnknown() : string {
        return this.get(this.enumWorkOrderStatusUnknownLanguageItemName);
    }

    /**
    /* "Enum.TaskStatusFilter.Unscheduled" (Unscheduled)
    */
    public get enumTaskStatusFilterUnscheduled() : string {
        return this.get(this.enumTaskStatusFilterUnscheduledLanguageItemName);
    }

    /**
    /* "Enum.TaskStatusFilter.InProgress" (In process)
    */
    public get enumTaskStatusFilterInProgress() : string {
        return this.get(this.enumTaskStatusFilterInProgressLanguageItemName);
    }

    /**
    /* "Enum.TaskStatusFilter.Upcoming" (Upcoming)
    */
    public get enumTaskStatusFilterUpcoming() : string {
        return this.get(this.enumTaskStatusFilterUpcomingLanguageItemName);
    }

    /**
    /* "Enum.TaskStatusFilter.Completed" (Completed)
    */
    public get enumTaskStatusFilterCompleted() : string {
        return this.get(this.enumTaskStatusFilterCompletedLanguageItemName);
    }

    /**
    /* "Enum.TaskStatusFilter.SentToCustomer" (Sent to customer)
    */
    public get enumTaskStatusFilterSentToCustomer() : string {
        return this.get(this.enumTaskStatusFilterSentToCustomerLanguageItemName);
    }

    /**
    /* "Enum.TaskStatusFilter.ApprovedByCustomer" (Approver by customer)
    */
    public get enumTaskStatusFilterApprovedByCustomer() : string {
        return this.get(this.enumTaskStatusFilterApprovedByCustomerLanguageItemName);
    }

    /**
    /* "Enum.TaskStatusFilter.DeclinedByCustomer" (Declined by customer)
    */
    public get enumTaskStatusFilterDeclinedByCustomer() : string {
        return this.get(this.enumTaskStatusFilterDeclinedByCustomerLanguageItemName);
    }

    /**
    /* "Enum.TaskStatusFilter.ReadyForInvoicing" (Ready for invocing)
    */
    public get enumTaskStatusFilterReadyForInvoicing() : string {
        return this.get(this.enumTaskStatusFilterReadyForInvoicingLanguageItemName);
    }

    /**
    /* "WorkOrdersFiltersModal.Title.Active" (Active work orders filters)
    */
    public get workOrdersFiltersModalTitleActive() : string {
        return this.get(this.workOrdersFiltersModalTitleActiveLanguageItemName);
    }

    /**
    /* "WorkOrdersFiltersModal.Title.Completed" (Completed work orders filters)
    */
    public get workOrdersFiltersModalTitleCompleted() : string {
        return this.get(this.workOrdersFiltersModalTitleCompletedLanguageItemName);
    }

    /**
    /* "WorkOrders.Modal.Actions.Activate" (Activate)
    */
    public get workOrdersModalActionsActivate() : string {
        return this.get(this.workOrdersModalActionsActivateLanguageItemName);
    }

    /**
    /* "WorkOrders.Modal.Actions.Complete" (Complete)
    */
    public get workOrdersModalActionsComplete() : string {
        return this.get(this.workOrdersModalActionsCompleteLanguageItemName);
    }

    /**
    /* "WorkOrders.Modal.Actions.Edit" (Edit)
    */
    public get workOrdersModalActionsEdit() : string {
        return this.get(this.workOrdersModalActionsEditLanguageItemName);
    }

    /**
    /* "WorkOrders.Modal.Actions.Approve" (Approve)
    */
    public get workOrdersModalActionsApprove() : string {
        return this.get(this.workOrdersModalActionsApproveLanguageItemName);
    }

    /**
    /* "WorkOrdersActionsModal.Title" (Work order actions)
    */
    public get workOrdersActionsModalTitle() : string {
        return this.get(this.workOrdersActionsModalTitleLanguageItemName);
    }

    /**
    /* "WorkOrders.AlertMessage.WorkOrderActivated" (Work order "{0}" has been activated)
    */
    public get workOrdersAlertMessageWorkOrderActivated() : string {
        return this.get(this.workOrdersAlertMessageWorkOrderActivatedLanguageItemName);
    }

    /**
    /* "WorkOrders.AlertMessage.WorkOrderCompleted" (Work order "{0}" has been completed)
    */
    public get workOrdersAlertMessageWorkOrderCompleted() : string {
        return this.get(this.workOrdersAlertMessageWorkOrderCompletedLanguageItemName);
    }

    /**
    /* "WorkOrders.DefaultPricesGroup" (Default prices)
    */
    public get workOrdersDefaultPricesGroup() : string {
        return this.get(this.workOrdersDefaultPricesGroupLanguageItemName);
    }

    /**
    /* "WorkOrders.HourPrice" (€/h)
    */
    public get workOrdersHourPrice() : string {
        return this.get(this.workOrdersHourPriceLanguageItemName);
    }

    /**
    /* "WorkOrders.MileagePrice" (€/km)
    */
    public get workOrdersMileagePrice() : string {
        return this.get(this.workOrdersMileagePriceLanguageItemName);
    }

    /**
    /* "RentaTasksController.NewWorkOrderName" (New work order)
    */
    public get rentaTasksControllerNewWorkOrderName() : string {
        return this.get(this.rentaTasksControllerNewWorkOrderNameLanguageItemName);
    }

    /**
    /* "RentaTasksController.Alerts.Created" (Work order "{0}" created successfully.)
    */
    public get rentaTasksControllerAlertsCreated() : string {
        return this.get(this.rentaTasksControllerAlertsCreatedLanguageItemName);
    }

    /**
    /* "RentaTasksController.Alerts.SignOutFromSite" (You have been sign-out from the construction site.)
    */
    public get rentaTasksControllerAlertsSignOutFromSite() : string {
        return this.get(this.rentaTasksControllerAlertsSignOutFromSiteLanguageItemName);
    }

    /**
    /* "RentaTasksController.Alerts.Approved" (Work order "{0}" approved successfully.)
    */
    public get rentaTasksControllerAlertsApproved() : string {
        return this.get(this.rentaTasksControllerAlertsApprovedLanguageItemName);
    }

    /**
    /* "RentaTasksController.Alerts.SentToCustomer" (Work report "{0}" has been sent to a customer.)
    */
    public get rentaTasksControllerAlertsSentToCustomer() : string {
        return this.get(this.rentaTasksControllerAlertsSentToCustomerLanguageItemName);
    }

    /**
    /* "RentaTasksController.Steps.TitleHoursAndDistance" (Hours & distances)
    */
    public get rentaTasksControllerStepsTitleHoursAndDistance() : string {
        return this.get(this.rentaTasksControllerStepsTitleHoursAndDistanceLanguageItemName);
    }

    /**
    /* "RentaTasksController.Steps.TitleApproving" (Approving)
    */
    public get rentaTasksControllerStepsTitleApproving() : string {
        return this.get(this.rentaTasksControllerStepsTitleApprovingLanguageItemName);
    }

    /**
    /* "RentaTasksController.Steps.TitleSummary" (Summary)
    */
    public get rentaTasksControllerStepsTitleSummary() : string {
        return this.get(this.rentaTasksControllerStepsTitleSummaryLanguageItemName);
    }

    /**
    /* "DailyHoursModal.Subtitle" (Work order working hours)
    */
    public get dailyHoursModalSubtitle() : string {
        return this.get(this.dailyHoursModalSubtitleLanguageItemName);
    }

    /**
    /* "DailyHoursModal.Labels.Mounter" (Mounter)
    */
    public get dailyHoursModalLabelsMounter() : string {
        return this.get(this.dailyHoursModalLabelsMounterLanguageItemName);
    }

    /**
    /* "DailyHoursModal.Labels.Date" (Date)
    */
    public get dailyHoursModalLabelsDate() : string {
        return this.get(this.dailyHoursModalLabelsDateLanguageItemName);
    }

    /**
    /* "DailyHoursModal.Labels.NormalHours" (Normal hours)
    */
    public get dailyHoursModalLabelsNormalHours() : string {
        return this.get(this.dailyHoursModalLabelsNormalHoursLanguageItemName);
    }

    /**
    /* "DailyHoursModal.Labels.Overtime50Hours" (Overtime 50%)
    */
    public get dailyHoursModalLabelsOvertime50Hours() : string {
        return this.get(this.dailyHoursModalLabelsOvertime50HoursLanguageItemName);
    }

    /**
    /* "DailyHoursModal.Labels.Overtime100Hours" (Overtime 100%)
    */
    public get dailyHoursModalLabelsOvertime100Hours() : string {
        return this.get(this.dailyHoursModalLabelsOvertime100HoursLanguageItemName);
    }

    /**
    /* "DailyHoursWidget.Label" (All hours)
    */
    public get dailyHoursWidgetLabel() : string {
        return this.get(this.dailyHoursWidgetLabelLanguageItemName);
    }

    /**
    /* "DailyHoursWidget.Description" (Total work order working hours)
    */
    public get dailyHoursWidgetDescription() : string {
        return this.get(this.dailyHoursWidgetDescriptionLanguageItemName);
    }

    /**
    /* "DailyHoursWidget.Buttons.AddHours" (Add user hours)
    */
    public get dailyHoursWidgetButtonsAddHours() : string {
        return this.get(this.dailyHoursWidgetButtonsAddHoursLanguageItemName);
    }

    /**
    /* "DailyHoursWidget.Labels.Normal" (Normal)
    */
    public get dailyHoursWidgetLabelsNormal() : string {
        return this.get(this.dailyHoursWidgetLabelsNormalLanguageItemName);
    }

    /**
    /* "DistanceModal.Subtitle" (Work order kilometer)
    */
    public get distanceModalSubtitle() : string {
        return this.get(this.distanceModalSubtitleLanguageItemName);
    }

    /**
    /* "DistanceModal.Labels.Date" (Date)
    */
    public get distanceModalLabelsDate() : string {
        return this.get(this.distanceModalLabelsDateLanguageItemName);
    }

    /**
    /* "DistanceModal.Labels.Vehicles" (Vehicles amount)
    */
    public get distanceModalLabelsVehicles() : string {
        return this.get(this.distanceModalLabelsVehiclesLanguageItemName);
    }

    /**
    /* "DistanceModal.Labels.Value" (Total distance, km)
    */
    public get distanceModalLabelsValue() : string {
        return this.get(this.distanceModalLabelsValueLanguageItemName);
    }

    /**
    /* "DistanceWidget.Label" (Distance)
    */
    public get distanceWidgetLabel() : string {
        return this.get(this.distanceWidgetLabelLanguageItemName);
    }

    /**
    /* "DistanceWidget.Description" (Total work order distance amount)
    */
    public get distanceWidgetDescription() : string {
        return this.get(this.distanceWidgetDescriptionLanguageItemName);
    }

    /**
    /* "DistanceWidget.Buttons.AddKilometers" (Add kilometers)
    */
    public get distanceWidgetButtonsAddKilometers() : string {
        return this.get(this.distanceWidgetButtonsAddKilometersLanguageItemName);
    }

    /**
    /* "WorkOrder.Labels.MyHours" (My hours)
    */
    public get workOrderLabelsMyHours() : string {
        return this.get(this.workOrderLabelsMyHoursLanguageItemName);
    }

    /**
    /* "SummaryWidget.Labels.Distance" (Distance: <mark>{0} km</mark>)
    */
    public get summaryWidgetLabelsDistance() : string {
        return this.get(this.summaryWidgetLabelsDistanceLanguageItemName);
    }

    /**
    /* "SummaryWidget.Labels.Hours" (Working hours: <mark>{0:0.0} h ({1:0.0}/{2:0.0}/{3:0.0})</mark>)
    */
    public get summaryWidgetLabelsHours() : string {
        return this.get(this.summaryWidgetLabelsHoursLanguageItemName);
    }

    /**
    /* "Summary.Manual" (This is the work report summary. Review the summary carefully before approval.)
    */
    public get summaryManual() : string {
        return this.get(this.summaryManualLanguageItemName);
    }

    /**
    /* "WorkHoursWidget.Summary" (Working hours: {0:0.0})
    */
    public get workHoursWidgetSummary() : string {
        return this.get(this.workHoursWidgetSummaryLanguageItemName);
    }

    /**
    /* "AssignMounters.Manual" (Assign mounters to the work order, swipe right, or press next when you finished. You can also leave it open for everyone by not specifying any mounter.)
    */
    public get assignMountersManual() : string {
        return this.get(this.assignMountersManualLanguageItemName);
    }

    /**
    /* "CheckInsPanel.NoDataText" (No sign-ins or check-ins are registered)
    */
    public get checkInsPanelNoDataText() : string {
        return this.get(this.checkInsPanelNoDataTextLanguageItemName);
    }

    /**
    /* "AddMounterModal.Labels.Overtime50Hours" (Overtime 50%)
    */
    public get addMounterModalLabelsOvertime50Hours() : string {
        return this.get(this.addMounterModalLabelsOvertime50HoursLanguageItemName);
    }

    /**
    /* "AddMounterModal.Labels.Overtime100Hours" (Overtime 100%)
    */
    public get addMounterModalLabelsOvertime100Hours() : string {
        return this.get(this.addMounterModalLabelsOvertime100HoursLanguageItemName);
    }

    /**
    /* "WorkOrders.ValidationError.ApproverCreationRejected" (Cannot create approver "{0}". Please contact administrator.)
    */
    public get workOrdersValidationErrorApproverCreationRejected() : string {
        return this.get(this.workOrdersValidationErrorApproverCreationRejectedLanguageItemName);
    }

    /**
    /* "WorkOrders.Approved.Alert" (Work order marked as approved)
    */
    public get workOrdersApprovedAlert() : string {
        return this.get(this.workOrdersApprovedAlertLanguageItemName);
    }

    /**
    /* "SendWorkOrderModal.Button.SendOrApprove" (Send or Approve)
    */
    public get sendWorkOrderModalButtonSendOrApprove() : string {
        return this.get(this.sendWorkOrderModalButtonSendOrApproveLanguageItemName);
    }

    /**
    /* "ApproveWorkReport.Title" (Mark as approved)
    */
    public get approveWorkReportTitle() : string {
        return this.get(this.approveWorkReportTitleLanguageItemName);
    }

    /**
    /* "WorkOrders.Owner.SelectConstructionSite" (Select a construction site)
    */
    public get workOrdersOwnerSelectConstructionSite() : string {
        return this.get(this.workOrdersOwnerSelectConstructionSiteLanguageItemName);
    }

    /**
    /* "WorkOrders.Actions.Lock" (Lock for invoicing)
    */
    public get workOrdersActionsLock() : string {
        return this.get(this.workOrdersActionsLockLanguageItemName);
    }

    /**
    /* "WorkOrders.Actions.Invoice" (Invoice)
    */
    public get workOrdersActionsInvoice() : string {
        return this.get(this.workOrdersActionsInvoiceLanguageItemName);
    }

    /**
    /* "WorkOrders.Actions.Send" (Send to customer)
    */
    public get workOrdersActionsSend() : string {
        return this.get(this.workOrdersActionsSendLanguageItemName);
    }

    /**
    /* "ConstructionSiteManagement.Tabs.WorkOrders" (Work orders)
    */
    public get constructionSiteManagementTabsWorkOrders() : string {
        return this.get(this.constructionSiteManagementTabsWorkOrdersLanguageItemName);
    }

    /**
    /* "ConstructionSiteManagement.Tabs.Contract" (Customer contract)
    */
    public get constructionSiteManagementTabsContract() : string {
        return this.get(this.constructionSiteManagementTabsContractLanguageItemName);
    }

    /**
    /* "ConstructionSitePanel.ExternalAddress" (External address)
    */
    public get constructionSitePanelExternalAddress() : string {
        return this.get(this.constructionSitePanelExternalAddressLanguageItemName);
    }

    /**
    /* "ConstructionSitePanel.ExternalName" (ERP name)
    */
    public get constructionSitePanelExternalName() : string {
        return this.get(this.constructionSitePanelExternalNameLanguageItemName);
    }

    /**
    /* "Dashboard.GetManual" (This is Dashboard page with widgets based on Your access role.)
    */
    public get dashboardGetManual() : string {
        return this.get(this.dashboardGetManualLanguageItemName);
    }

    /**
    /* "ConstructionSiteManagement.GetManual" (This is a page for RentaTask managers, where they can create new or operate existing construction sites, modules and tasks.)
    */
    public get constructionSiteManagementGetManual() : string {
        return this.get(this.constructionSiteManagementGetManualLanguageItemName);
    }

    /**
    /* "RoleName.Manager" (Manager)
    */
    public get roleNameManager() : string {
        return this.get(this.roleNameManagerLanguageItemName);
    }

    /**
    /* "RoleName.BusinessManager" (Business Manager)
    */
    public get roleNameBusinessManager() : string {
        return this.get(this.roleNameBusinessManagerLanguageItemName);
    }

    /**
    /* "WorkOrdersPanel.NewWorkOrder" (New Work Order)
    */
    public get workOrdersPanelNewWorkOrder() : string {
        return this.get(this.workOrdersPanelNewWorkOrderLanguageItemName);
    }

    /**
    /* "RentaTasks.WorkOrders.GetManual" (This page shows lists of active and completed work orders. You can filter them, activate, edit, complete and approve.)
    */
    public get rentaTasksWorkOrdersGetManual() : string {
        return this.get(this.rentaTasksWorkOrdersGetManualLanguageItemName);
    }

    /**
    /* "WorkOrder.Actions.ConfirmCompletedActivation" (Are you sure you want to activate a completed and approved by customer work order? After activation, the re-confirmation will be needed.)
    */
    public get workOrderActionsConfirmCompletedActivation() : string {
        return this.get(this.workOrderActionsConfirmCompletedActivationLanguageItemName);
    }

    /**
    /* "WorkOrder.Actions.ConfirmActivation" (Are you sure you want to activate the work order <mark>{0}</mark>?)
    */
    public get workOrderActionsConfirmActivation() : string {
        return this.get(this.workOrderActionsConfirmActivationLanguageItemName);
    }

    /**
    /* "WorkOrder.Actions.ConfirmCompletion" (Are you sure you want to complete the work order <mark>{0}</mark>?)
    */
    public get workOrderActionsConfirmCompletion() : string {
        return this.get(this.workOrderActionsConfirmCompletionLanguageItemName);
    }

    /**
    /* "WorkOrder.Actions.Unlock" (Unlock the work order to enable editing)
    */
    public get workOrderActionsUnlock() : string {
        return this.get(this.workOrderActionsUnlockLanguageItemName);
    }

    /**
    /* "WorkOrder.Actions.ConfirmInvoice" (Are you sure you want to mark the work order as invoiced? \nThis is a reversible operation and cannot be reversed.)
    */
    public get workOrderActionsConfirmInvoice() : string {
        return this.get(this.workOrderActionsConfirmInvoiceLanguageItemName);
    }

    /**
    /* "SendWorkOrderModal.Button.Assign" (Assign)
    */
    public get sendWorkOrderModalButtonAssign() : string {
        return this.get(this.sendWorkOrderModalButtonAssignLanguageItemName);
    }

    /**
    /* "SendWorkOrderModal.Button.Tooltip.Assign" (Assign contact person for work order)
    */
    public get sendWorkOrderModalButtonTooltipAssign() : string {
        return this.get(this.sendWorkOrderModalButtonTooltipAssignLanguageItemName);
    }

    /**
    /* "SendWorkOrderModal.Approver.Title" (Customer approver)
    */
    public get sendWorkOrderModalApproverTitle() : string {
        return this.get(this.sendWorkOrderModalApproverTitleLanguageItemName);
    }

    /**
    /* "SendWorkOrderModal.Approver.Subtitle" (Assign, create or modify the customer approver)
    */
    public get sendWorkOrderModalApproverSubtitle() : string {
        return this.get(this.sendWorkOrderModalApproverSubtitleLanguageItemName);
    }

    /**
    /* "SendWorkOrderModal.Orderer.Title" (Customer orderer)
    */
    public get sendWorkOrderModalOrdererTitle() : string {
        return this.get(this.sendWorkOrderModalOrdererTitleLanguageItemName);
    }

    /**
    /* "SendWorkOrderModal.Orderer.Subtitle" (Assign, create or modify the customer orderer)
    */
    public get sendWorkOrderModalOrdererSubtitle() : string {
        return this.get(this.sendWorkOrderModalOrdererSubtitleLanguageItemName);
    }

    /**
    /* "WorkOrders.CustomerApprover.Action.Tooltip" (Choose, fill, or create work order approver)
    */
    public get workOrdersCustomerApproverActionTooltip() : string {
        return this.get(this.workOrdersCustomerApproverActionTooltipLanguageItemName);
    }

    /**
    /* "WorkOrders.CustomerOrderer.Action.Tooltip" (Choose, fill, or create work order orderer)
    */
    public get workOrdersCustomerOrdererActionTooltip() : string {
        return this.get(this.workOrdersCustomerOrdererActionTooltipLanguageItemName);
    }

    /**
    /* "WorkOrders.Grid.NoDataText" (No work reports found according to filters)
    */
    public get workOrdersGridNoDataText() : string {
        return this.get(this.workOrdersGridNoDataTextLanguageItemName);
    }

    /**
    /* "WorkDayPanel.Grid.Aggregates.NoDataText" (No reported hours)
    */
    public get workDayPanelGridAggregatesNoDataText() : string {
        return this.get(this.workDayPanelGridAggregatesNoDataTextLanguageItemName);
    }

    /**
    /* "WorkOrderDetailsPanel.Grid.ProductUnit" (Unit)
    */
    public get workOrderDetailsPanelGridProductUnit() : string {
        return this.get(this.workOrderDetailsPanelGridProductUnitLanguageItemName);
    }

    /**
    /* "WorkOrderDetailsPanel.Grid.Equipment.NoDataText" (No equipment)
    */
    public get workOrderDetailsPanelGridEquipmentNoDataText() : string {
        return this.get(this.workOrderDetailsPanelGridEquipmentNoDataTextLanguageItemName);
    }

    /**
    /* "WorkOrderDetailsPanel.Grid.Hours.NoDataText" (No reported hours)
    */
    public get workOrderDetailsPanelGridHoursNoDataText() : string {
        return this.get(this.workOrderDetailsPanelGridHoursNoDataTextLanguageItemName);
    }

    /**
    /* "WorkOrderDetailsPanel.Grid.Hours.HoursPrice.InfoTitle" (Default hours price)
    */
    public get workOrderDetailsPanelGridHoursHoursPriceInfoTitle() : string {
        return this.get(this.workOrderDetailsPanelGridHoursHoursPriceInfoTitleLanguageItemName);
    }

    /**
    /* "WorkOrderDetailsPanel.Grid.Equipment.Price.InfoTitle" (Default product price)
    */
    public get workOrderDetailsPanelGridEquipmentPriceInfoTitle() : string {
        return this.get(this.workOrderDetailsPanelGridEquipmentPriceInfoTitleLanguageItemName);
    }

    /**
    /* "WorkOrderDetailsPanel.Grid.Equipment.ConfirmDelete" (Are you sure you want to delete the equipment \"{0}\"?)
    */
    public get workOrderDetailsPanelGridEquipmentConfirmDelete() : string {
        return this.get(this.workOrderDetailsPanelGridEquipmentConfirmDeleteLanguageItemName);
    }

    /**
    /* "WorkOrderDetailsPanel.Grid.Distances.Day" (Day)
    */
    public get workOrderDetailsPanelGridDistancesDay() : string {
        return this.get(this.workOrderDetailsPanelGridDistancesDayLanguageItemName);
    }

    /**
    /* "WorkOrderDetailsPanel.Grid.Distances.Vehicles" (Vehicles)
    */
    public get workOrderDetailsPanelGridDistancesVehicles() : string {
        return this.get(this.workOrderDetailsPanelGridDistancesVehiclesLanguageItemName);
    }

    /**
    /* "WorkOrderDetailsPanel.Grid.Distances.Distance" (Distance, km)
    */
    public get workOrderDetailsPanelGridDistancesDistance() : string {
        return this.get(this.workOrderDetailsPanelGridDistancesDistanceLanguageItemName);
    }

    /**
    /* "WorkOrderDetailsPanel.Grid.Distances.Price" (Price, €/km)
    */
    public get workOrderDetailsPanelGridDistancesPrice() : string {
        return this.get(this.workOrderDetailsPanelGridDistancesPriceLanguageItemName);
    }

    /**
    /* "WorkOrderDetailsPanel.Grid.Distances.Cost" (Cost, €)
    */
    public get workOrderDetailsPanelGridDistancesCost() : string {
        return this.get(this.workOrderDetailsPanelGridDistancesCostLanguageItemName);
    }

    /**
    /* "WorkOrderDetailsPanel.Grid.Distances.ConfirmDelete" (Are you sure you want to delete {0} km from date {1:dd.MM.yyyy}?)
    */
    public get workOrderDetailsPanelGridDistancesConfirmDelete() : string {
        return this.get(this.workOrderDetailsPanelGridDistancesConfirmDeleteLanguageItemName);
    }

    /**
    /* "WorkOrderDetailsPanel.Grid.Distances.NoDataText" (No distances reported)
    */
    public get workOrderDetailsPanelGridDistancesNoDataText() : string {
        return this.get(this.workOrderDetailsPanelGridDistancesNoDataTextLanguageItemName);
    }

    /**
    /* "WorkOrderDetails.AddDistance" (Add distance)
    */
    public get workOrderDetailsAddDistance() : string {
        return this.get(this.workOrderDetailsAddDistanceLanguageItemName);
    }

    /**
    /* "WorkOrderDetails.DistancesTab.Title" (Mileages)
    */
    public get workOrderDetailsDistancesTabTitle() : string {
        return this.get(this.workOrderDetailsDistancesTabTitleLanguageItemName);
    }

    /**
    /* "ContactSupportPage.MessageSent" (Your request was sent to support team.)
    */
    public get contactSupportPageMessageSent() : string {
        return this.get(this.contactSupportPageMessageSentLanguageItemName);
    }

    /**
    /* "ContactSupportPage.MessageWithIdSent" (Your request with id "{0}" was sent to support team.)
    */
    public get contactSupportPageMessageWithIdSent() : string {
        return this.get(this.contactSupportPageMessageWithIdSentLanguageItemName);
    }

    /**
    /* "RentaTasks.WorkOrder.SignIn.Confirm" (The work order is not active yet.\nAre you sure you want to activate and sign in?)
    */
    public get rentaTasksWorkOrderSignInConfirm() : string {
        return this.get(this.rentaTasksWorkOrderSignInConfirmLanguageItemName);
    }

    /**
    /* "RentaTasks.WorkOrder.SignIn.Alert" (You have successfully signed in to the work order.)
    */
    public get rentaTasksWorkOrderSignInAlert() : string {
        return this.get(this.rentaTasksWorkOrderSignInAlertLanguageItemName);
    }

    /**
    /* "RentaTasks.WorkOrder.Manual.Title" (Work order description)
    */
    public get rentaTasksWorkOrderManualTitle() : string {
        return this.get(this.rentaTasksWorkOrderManualTitleLanguageItemName);
    }

    /**
    /* "RentaTasks.WorkOrder.Label.CustomerName" (Customer name)
    */
    public get rentaTasksWorkOrderLabelCustomerName() : string {
        return this.get(this.rentaTasksWorkOrderLabelCustomerNameLanguageItemName);
    }

    /**
    /* "RentaTasks.WorkOrder.Label.ConstructionSite" (Construction site)
    */
    public get rentaTasksWorkOrderLabelConstructionSite() : string {
        return this.get(this.rentaTasksWorkOrderLabelConstructionSiteLanguageItemName);
    }

    /**
    /* "RentaTasks.WorkOrder.Label.Address" (Address)
    */
    public get rentaTasksWorkOrderLabelAddress() : string {
        return this.get(this.rentaTasksWorkOrderLabelAddressLanguageItemName);
    }

    /**
    /* "RentaTasks.WorkOrder.Label.Orderer" (Orderer)
    */
    public get rentaTasksWorkOrderLabelOrderer() : string {
        return this.get(this.rentaTasksWorkOrderLabelOrdererLanguageItemName);
    }

    /**
    /* "RentaTasks.WorkOrder.Label.OrdererPhone" (Orderer phone)
    */
    public get rentaTasksWorkOrderLabelOrdererPhone() : string {
        return this.get(this.rentaTasksWorkOrderLabelOrdererPhoneLanguageItemName);
    }

    /**
    /* "RentaTasks.WorkOrder.Label.Approver" (Approver)
    */
    public get rentaTasksWorkOrderLabelApprover() : string {
        return this.get(this.rentaTasksWorkOrderLabelApproverLanguageItemName);
    }

    /**
    /* "RentaTasks.WorkOrder.Label.ApproverPhone" (Approver phone)
    */
    public get rentaTasksWorkOrderLabelApproverPhone() : string {
        return this.get(this.rentaTasksWorkOrderLabelApproverPhoneLanguageItemName);
    }

    /**
    /* "RentaTasks.WorkOrder.Label.Manager" (Manager)
    */
    public get rentaTasksWorkOrderLabelManager() : string {
        return this.get(this.rentaTasksWorkOrderLabelManagerLanguageItemName);
    }

    /**
    /* "RentaTasks.WorkOrder.Label.ManagerPhone" (Manager phone)
    */
    public get rentaTasksWorkOrderLabelManagerPhone() : string {
        return this.get(this.rentaTasksWorkOrderLabelManagerPhoneLanguageItemName);
    }

    /**
    /* "RentaTasks.WorkOrder.Label.Distance" (Distance)
    */
    public get rentaTasksWorkOrderLabelDistance() : string {
        return this.get(this.rentaTasksWorkOrderLabelDistanceLanguageItemName);
    }

    /**
    /* "Generic.Km" ({0} km)
    */
    public get genericKm() : string {
        return this.get(this.genericKmLanguageItemName);
    }

    /**
    /* "RentaTasks.WorkOrder.Label.WorkingHours" (Working hours)
    */
    public get rentaTasksWorkOrderLabelWorkingHours() : string {
        return this.get(this.rentaTasksWorkOrderLabelWorkingHoursLanguageItemName);
    }

    /**
    /* "Generic.Hours" ({0:0.0} h ({1:0.0}/{2:0.0}/{3:0.0}))
    */
    public get genericHours() : string {
        return this.get(this.genericHoursLanguageItemName);
    }

    /**
    /* "RentaTasks.WorkOrder.Label.Status" (Status:)
    */
    public get rentaTasksWorkOrderLabelStatus() : string {
        return this.get(this.rentaTasksWorkOrderLabelStatusLanguageItemName);
    }

    /**
    /* "RentaTasks.WorkOrder.Label.ActivationDate" (Activation date:)
    */
    public get rentaTasksWorkOrderLabelActivationDate() : string {
        return this.get(this.rentaTasksWorkOrderLabelActivationDateLanguageItemName);
    }

    /**
    /* "RentaTasks.WorkOrder.Label.CompletionDate" (Completion date:)
    */
    public get rentaTasksWorkOrderLabelCompletionDate() : string {
        return this.get(this.rentaTasksWorkOrderLabelCompletionDateLanguageItemName);
    }

    /**
    /* "RentaTasks.WorkOrder.Button.Label.SignIn" (Sign in)
    */
    public get rentaTasksWorkOrderButtonLabelSignIn() : string {
        return this.get(this.rentaTasksWorkOrderButtonLabelSignInLanguageItemName);
    }

    /**
    /* "RentaTasks.WorkOrder.Button.Label.SignOut" (Sign out)
    */
    public get rentaTasksWorkOrderButtonLabelSignOut() : string {
        return this.get(this.rentaTasksWorkOrderButtonLabelSignOutLanguageItemName);
    }

    /**
    /* "RentaTasks.WorkOrder.Button.Label.AddEquipment" (Add equipment)
    */
    public get rentaTasksWorkOrderButtonLabelAddEquipment() : string {
        return this.get(this.rentaTasksWorkOrderButtonLabelAddEquipmentLanguageItemName);
    }

    /**
    /* "RentaTasks.WorkOrder.Button.Label.Back" (Back)
    */
    public get rentaTasksWorkOrderButtonLabelBack() : string {
        return this.get(this.rentaTasksWorkOrderButtonLabelBackLanguageItemName);
    }

    /**
    /* "RentaTasks.Dashboard.RouteWidget.MyWorkOrder" (My work order)
    */
    public get rentaTasksDashboardRouteWidgetMyWorkOrder() : string {
        return this.get(this.rentaTasksDashboardRouteWidgetMyWorkOrderLanguageItemName);
    }

    /**
    /* "RentaTasks.Dashboard.RouteWidget.WorkOrders" (Work orders)
    */
    public get rentaTasksDashboardRouteWidgetWorkOrders() : string {
        return this.get(this.rentaTasksDashboardRouteWidgetWorkOrdersLanguageItemName);
    }

    /**
    /* "RentaTasks.WorkOrder.SignOut.Alert" (You have successfully signed out from the work order.)
    */
    public get rentaTasksWorkOrderSignOutAlert() : string {
        return this.get(this.rentaTasksWorkOrderSignOutAlertLanguageItemName);
    }

    /**
    /* "RentaTasks.WorkOrder.Save.Alert" (The work order is saved successfully.)
    */
    public get rentaTasksWorkOrderSaveAlert() : string {
        return this.get(this.rentaTasksWorkOrderSaveAlertLanguageItemName);
    }

    /**
    /* "RentaTasks.WorkOrder.UpdateEquipment.Alert" (The work order equipment is updated successfully.)
    */
    public get rentaTasksWorkOrderUpdateEquipmentAlert() : string {
        return this.get(this.rentaTasksWorkOrderUpdateEquipmentAlertLanguageItemName);
    }

    /**
    /* "RentaTasks.WorkOrder.Complete.Alert" (The work order completed successfully.)
    */
    public get rentaTasksWorkOrderCompleteAlert() : string {
        return this.get(this.rentaTasksWorkOrderCompleteAlertLanguageItemName);
    }

    /**
    /* "WorkOrders.Filters.Employees" (Employees)
    */
    public get workOrdersFiltersEmployees() : string {
        return this.get(this.workOrdersFiltersEmployeesLanguageItemName);
    }

    /**
    /* "WorkOrders.Filters.Managers" (Managers)
    */
    public get workOrdersFiltersManagers() : string {
        return this.get(this.workOrdersFiltersManagersLanguageItemName);
    }

    /**
    /* "RentaTasks.Dashboard.RouteWidget.WorkOrders.Description" (Check active work orders)
    */
    public get rentaTasksDashboardRouteWidgetWorkOrdersDescription() : string {
        return this.get(this.rentaTasksDashboardRouteWidgetWorkOrdersDescriptionLanguageItemName);
    }

    /**
    /* "WorkOrders.Rows.NoAddress" (No address)
    */
    public get workOrdersRowsNoAddress() : string {
        return this.get(this.workOrdersRowsNoAddressLanguageItemName);
    }

    /**
    /* "EditContactPersonModal.Button.Label.SaveChanges" (Save changes)
    */
    public get editContactPersonModalButtonLabelSaveChanges() : string {
        return this.get(this.editContactPersonModalButtonLabelSaveChangesLanguageItemName);
    }

    /**
    /* "EditContactPersonModal.Subtitle" (Fill in missing information)
    */
    public get editContactPersonModalSubtitle() : string {
        return this.get(this.editContactPersonModalSubtitleLanguageItemName);
    }

    /**
    /* "SummaryWidget.Button.EditApprover" (Fill in missing approver info)
    */
    public get summaryWidgetButtonEditApprover() : string {
        return this.get(this.summaryWidgetButtonEditApproverLanguageItemName);
    }

    /**
    /* "SummaryWidget.Dropdown.NothingSelected" (Select customer approver)
    */
    public get summaryWidgetDropdownNothingSelected() : string {
        return this.get(this.summaryWidgetDropdownNothingSelectedLanguageItemName);
    }

    /**
    /* "Managers.NewOrderer" (Create new orderer)
    */
    public get managersNewOrderer() : string {
        return this.get(this.managersNewOrdererLanguageItemName);
    }

    /**
    /* "Managers.OrdererSavedSuccessfully" (Orderer has been saved successfully.)
    */
    public get managersOrdererSavedSuccessfully() : string {
        return this.get(this.managersOrdererSavedSuccessfullyLanguageItemName);
    }

    /**
    /* "RentaTasksController.Steps.TitleEdit" (Edit task)
    */
    public get rentaTasksControllerStepsTitleEdit() : string {
        return this.get(this.rentaTasksControllerStepsTitleEditLanguageItemName);
    }

    /**
    /* "RentaTasksController.Steps.TitleManagers" (Managers)
    */
    public get rentaTasksControllerStepsTitleManagers() : string {
        return this.get(this.rentaTasksControllerStepsTitleManagersLanguageItemName);
    }

    /**
    /* "ManagersStep.OrdererSave" (Orderer has been saved successfully.)
    */
    public get managersStepOrdererSave() : string {
        return this.get(this.managersStepOrdererSaveLanguageItemName);
    }

    /**
    /* "ManagersStep.ApproverSaved" (Approver has been saved successfully.)
    */
    public get managersStepApproverSaved() : string {
        return this.get(this.managersStepApproverSavedLanguageItemName);
    }

    /**
    /* "ManagersStep.OrdererNotSpecified" (Orderer data should be specified!)
    */
    public get managersStepOrdererNotSpecified() : string {
        return this.get(this.managersStepOrdererNotSpecifiedLanguageItemName);
    }

    /**
    /* "ManagersStep.ApproverNotSpecified" (Approver data should be specified!)
    */
    public get managersStepApproverNotSpecified() : string {
        return this.get(this.managersStepApproverNotSpecifiedLanguageItemName);
    }

    /**
    /* "ManagersStep.Manual" (Specify the work order manager, customer approver, and customer orderer. Customer contact information (email, phone, first and last name) should also be specified.)
    */
    public get managersStepManual() : string {
        return this.get(this.managersStepManualLanguageItemName);
    }

    /**
    /* "ManagersStep.Manager.Label" (Manager)
    */
    public get managersStepManagerLabel() : string {
        return this.get(this.managersStepManagerLabelLanguageItemName);
    }

    /**
    /* "ManagersStep.Manager.Description" (Choose a manager)
    */
    public get managersStepManagerDescription() : string {
        return this.get(this.managersStepManagerDescriptionLanguageItemName);
    }

    /**
    /* "ManagersStep.Orderer.Label" (Customer orderer)
    */
    public get managersStepOrdererLabel() : string {
        return this.get(this.managersStepOrdererLabelLanguageItemName);
    }

    /**
    /* "ManagersStep.Orderer.Description" (Choose or create an orderer)
    */
    public get managersStepOrdererDescription() : string {
        return this.get(this.managersStepOrdererDescriptionLanguageItemName);
    }

    /**
    /* "ManagersStep.Orderer.Add" (New orderer)
    */
    public get managersStepOrdererAdd() : string {
        return this.get(this.managersStepOrdererAddLanguageItemName);
    }

    /**
    /* "ManagersStep.Approver.Label" (Customer approver)
    */
    public get managersStepApproverLabel() : string {
        return this.get(this.managersStepApproverLabelLanguageItemName);
    }

    /**
    /* "ManagersStep.Approver.Description" (Choose or create an approver)
    */
    public get managersStepApproverDescription() : string {
        return this.get(this.managersStepApproverDescriptionLanguageItemName);
    }

    /**
    /* "ManagersStep.Approver.Add" (New approver)
    */
    public get managersStepApproverAdd() : string {
        return this.get(this.managersStepApproverAddLanguageItemName);
    }

    /**
    /* "RentaTasks.WorkOrderInfo.CheckboxWidget.Unscheduled" (Unscheduled)
    */
    public get rentaTasksWorkOrderInfoCheckboxWidgetUnscheduled() : string {
        return this.get(this.rentaTasksWorkOrderInfoCheckboxWidgetUnscheduledLanguageItemName);
    }

    /**
    /* "RentaTasks.WorkOrderInfo.CheckboxWidget.Unscheduled.Description" (Check to unschedule an activation date)
    */
    public get rentaTasksWorkOrderInfoCheckboxWidgetUnscheduledDescription() : string {
        return this.get(this.rentaTasksWorkOrderInfoCheckboxWidgetUnscheduledDescriptionLanguageItemName);
    }

    /**
    /* "RentaTasks.AddEquipment.CategoriesOrProducts.Searching" (Searching…)
    */
    public get rentaTasksAddEquipmentCategoriesOrProductsSearching() : string {
        return this.get(this.rentaTasksAddEquipmentCategoriesOrProductsSearchingLanguageItemName);
    }

    /**
    /* "RentaTasks.AddEquipment.CategoriesOrProducts.ProductsFound" ({0} products found:)
    */
    public get rentaTasksAddEquipmentCategoriesOrProductsProductsFound() : string {
        return this.get(this.rentaTasksAddEquipmentCategoriesOrProductsProductsFoundLanguageItemName);
    }

    /**
    /* "RentaTasks.AddEquipment.CategoriesOrProducts.NoProductsFound" (No products with given search term)
    */
    public get rentaTasksAddEquipmentCategoriesOrProductsNoProductsFound() : string {
        return this.get(this.rentaTasksAddEquipmentCategoriesOrProductsNoProductsFoundLanguageItemName);
    }

    /**
    /* "RentaTasks.AddEquipment.CategoriesOrProducts.TextInput.Placeholder.Search" (Search)
    */
    public get rentaTasksAddEquipmentCategoriesOrProductsTextInputPlaceholderSearch() : string {
        return this.get(this.rentaTasksAddEquipmentCategoriesOrProductsTextInputPlaceholderSearchLanguageItemName);
    }

    /**
    /* "RentaTasks.AddEquipment.CategoriesOrProducts.SearchResult" (Search results: {0})
    */
    public get rentaTasksAddEquipmentCategoriesOrProductsSearchResult() : string {
        return this.get(this.rentaTasksAddEquipmentCategoriesOrProductsSearchResultLanguageItemName);
    }

    /**
    /* "RentaTasks.AddEquipment.CategoriesOrProductsModal.Title.Equipment" (Equipment)
    */
    public get rentaTasksAddEquipmentCategoriesOrProductsModalTitleEquipment() : string {
        return this.get(this.rentaTasksAddEquipmentCategoriesOrProductsModalTitleEquipmentLanguageItemName);
    }

    /**
    /* "RentaTasks.AddEquipment.CategoriesOrProductsModal.Subtitle.ChooseEquipment" (Choose product to add to equipment list)
    */
    public get rentaTasksAddEquipmentCategoriesOrProductsModalSubtitleChooseEquipment() : string {
        return this.get(this.rentaTasksAddEquipmentCategoriesOrProductsModalSubtitleChooseEquipmentLanguageItemName);
    }

    /**
    /* "TaskTooltips.TaskUnscheduled" (Work order is unscheduled.\nActivation date is not specified.)
    */
    public get taskTooltipsTaskUnscheduled() : string {
        return this.get(this.taskTooltipsTaskUnscheduledLanguageItemName);
    }

    /**
    /* "WorkOrderStatus.Unscheduled" (Unscheduled)
    */
    public get workOrderStatusUnscheduled() : string {
        return this.get(this.workOrderStatusUnscheduledLanguageItemName);
    }

    /**
    /* "RentaTasks.AddEquipment.CategoriesOrProducts.AddEquipment" (Add equipment)
    */
    public get rentaTasksAddEquipmentCategoriesOrProductsAddEquipment() : string {
        return this.get(this.rentaTasksAddEquipmentCategoriesOrProductsAddEquipmentLanguageItemName);
    }

    /**
    /* "RentaTasks.AddEquipment.AddEquipmentDataProvider.Category.Favorite" (FAVORITE)
    */
    public get rentaTasksAddEquipmentAddEquipmentDataProviderCategoryFavorite() : string {
        return this.get(this.rentaTasksAddEquipmentAddEquipmentDataProviderCategoryFavoriteLanguageItemName);
    }

    /**
    /* "RentaTasks.AddEquipment.CategoriesOrProducts.NoProducts" (No products)
    */
    public get rentaTasksAddEquipmentCategoriesOrProductsNoProducts() : string {
        return this.get(this.rentaTasksAddEquipmentCategoriesOrProductsNoProductsLanguageItemName);
    }

    /**
    /* "RentaTasks.Controller.WorkOrderConcurrencyAlert" (The work order was modified by "{0}" at "{1:D}". Please check the WO details and continue.)
    */
    public get rentaTasksControllerWorkOrderConcurrencyAlert() : string {
        return this.get(this.rentaTasksControllerWorkOrderConcurrencyAlertLanguageItemName);
    }

    /**
    /* "RentaTasks.WorkOrder.SignIn.FailedAlert" (Cannot sign-in to the work order. The work order status has been changed.)
    */
    public get rentaTasksWorkOrderSignInFailedAlert() : string {
        return this.get(this.rentaTasksWorkOrderSignInFailedAlertLanguageItemName);
    }

    /**
    /* "RentaTasks.WorkOrder.Label.InvoiceReference" (Reference)
    */
    public get rentaTasksWorkOrderLabelInvoiceReference() : string {
        return this.get(this.rentaTasksWorkOrderLabelInvoiceReferenceLanguageItemName);
    }

    /**
    /* "SummaryWidget.Reference" (Reference:)
    */
    public get summaryWidgetReference() : string {
        return this.get(this.summaryWidgetReferenceLanguageItemName);
    }
}

//Singleton
export default new Localizer();