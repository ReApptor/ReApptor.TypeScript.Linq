<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>netcoreapp3.1</TargetFramework>
        <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
        <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
        <IsPackable>false</IsPackable>
        <SpaRoot />
        <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
      <DebugType>full</DebugType>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="AWSXRayRecorder" Version="2.9.0" />
        <PackageReference Include="Microsoft.AspNetCore.Authentication.MicrosoftAccount" Version="3.1.5" />
        <PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="3.1.5" />
        <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.5" />
        <PackageReference Include="Microsoft.IdentityModel.Tokens" Version="6.6.0" />
        <PackageReference Include="Newtonsoft.Json" Version="12.0.3" />
        <PackageReference Include="NLog.Extensions.Logging" Version="1.6.4" />
        <PackageReference Include="NLog.Web.AspNetCore" Version="4.9.3" />
        <PackageReference Include="WeAre.Athenaeum.Services.Cache" Version="1.0.143" />
        <PackageReference Include="WebEssentials.AspNetCore.PWA" Version="1.0.65" />
    </ItemGroup>
    
    <ItemGroup>
        <!-- Don't publish the SPA source files, but do show them in the project files list -->
        <Content Remove="$(SpaRoot)**" />
        <Content Include="appsettings.json" />
        <Content Include="nlog.config">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <Content Update="nlog.debug.config">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <Content Include="nlog.debug.config">
            <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <Content Remove="src\lib\**" />
        <Content Include="package.json" />
        <Content Include="tsconfig.json" />
        <Content Include="tsconfig.paths.json" />
        <Content Include="tslint.json" />
        <Content Remove="build\**" />
    </ItemGroup>

    <ItemGroup>
        <Compile Remove="obj\**" />
        <Compile Remove="bin\**" />
        <Compile Remove="src\localization\**" />
        <Compile Remove="src\lib\**" />
        <Compile Remove="build\**" />
    </ItemGroup>

    <ItemGroup>
      <ProjectReference Include="..\Renta.TestApplication.Common\Renta.TestApplication.Common.csproj" />
      <ProjectReference Include="..\Renta.TestApplication.WebUI.Server\Renta.TestApplication.WebUI.Server.csproj" />
    </ItemGroup>

    <ItemGroup>
      <EmbeddedResource Remove="src\lib\**" />
      <EmbeddedResource Remove="build\**" />
    </ItemGroup>

    <ItemGroup>
      <None Remove="src\lib\**" />
      <None Remove="build\**" />
    </ItemGroup>

    <ItemGroup>
      <TypeScriptCompile Include="src\module.d.ts" />
    </ItemGroup>

    <ItemGroup>
      <_ContentIncludedByDefault Remove="build\manifest.json" />
    </ItemGroup>

    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
        <!-- Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    </Target>

    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
        <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="CI=false npm run build" />

        <!-- Include the newly-built files in the publish output -->
        <ItemGroup>
            <DistFiles Include="$(SpaRoot)build\**" />
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>%(DistFiles.Identity)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>
    
</Project>
