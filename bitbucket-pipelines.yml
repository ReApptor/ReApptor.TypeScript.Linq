options:
  docker: true

pipelines:
  branches:
    master: # Pipelines that will be triggered automatically
      - parallel:
          - step:
              name: Athenaeum React Toolkit build
              image: node:10.15.0
              script:
                # Update npm settings
                - echo $BITBUCKET_BUILD_NUMBER
                - cd WeAre.Athenaeum.React.Toolkit
                - npm config set strict-ssl true
                - npm config set ca ""
                # Install dependencies
                - npm install
                # Dependencies for documentation create
                - npm install -g @microsoft/api-extractor
                # Run tests
                # - npm test
                # Run build
                - npm run build
                # Create documentation
                - mkdir ./etc
                - api-extractor run --local
                # Create .npmrc file
                - echo registry=https://${MYGET_NPM_REGISTRY_URL} > ~/.npmrc
                - echo always-auth=true >> ~/.npmrc
                - echo //${MYGET_NPM_REGISTRY_URL}:_authToken=${MYGET_NPM_APIKEY} >> ~/.npmrc
                # Create package
                - npm pack
                # Change version number
                - npm version 1.0.${BITBUCKET_BUILD_NUMBER}
                # Publish to MyGet
                - npm publish
          - step:
              name: Athenaeum React Common build
              image: node:10.15.0
              script:
                # Update npm settings
                - echo $BITBUCKET_BUILD_NUMBER
                - cd WeAre.Athenaeum.React.Common
                - npm config set strict-ssl true
                - npm config set ca ""
                - npm config set @weare:registry ${MYGET_NPM_SOURCE}
                # Install dependencies
                - npm install
                 # Dependencies for documentation create
                - npm install -g @microsoft/api-extractor
                # Run tests
                # - npm test
                # Run build
                - npm run build
                # Create documentation
                - mkdir ./etc
                - api-extractor run --local
                # Create .npmrc file
                - echo registry=https://${MYGET_NPM_REGISTRY_URL} > ~/.npmrc
                - echo always-auth=true >> ~/.npmrc
                - echo //${MYGET_NPM_REGISTRY_URL}:_authToken=${MYGET_NPM_APIKEY} >> ~/.npmrc
                # Create package
                - npm pack
                # Change version number
                - npm version 1.0.${BITBUCKET_BUILD_NUMBER}
                # Publish to MyGet
                - npm publish
          - step:
              name: Athenaeum React Components build
              image: node:10.15.0
              script:
                # Update npm settings
                - echo $BITBUCKET_BUILD_NUMBER
                - cd WeAre.Athenaeum.React.Components
                - npm config set strict-ssl true
                - npm config set ca ""
                - npm config set @weare:registry ${MYGET_NPM_SOURCE}
                # Install dependencies
                - npm install
                ## Dependencies for documentation create
                #- npm install -g @microsoft/api-extractor
                #- npm install -g @microsoft/api-documenter
                ## Run tests
                # - npm test
                # Run build
                - npm run build
                ## Create documentation
                #- mkdir ./etc
                #- api-extractor run --local
                #- api-documenter markdown -i ./temp/ -o ../Documentation/docs/
                # Create .npmrc file
                - echo registry=https://${MYGET_NPM_REGISTRY_URL} > ~/.npmrc
                - echo always-auth=true >> ~/.npmrc
                - echo //${MYGET_NPM_REGISTRY_URL}:_authToken=${MYGET_NPM_APIKEY} >> ~/.npmrc
                # Create package
                - npm pack
                # Change version number
                - npm version 1.0.${BITBUCKET_BUILD_NUMBER}
                # Publish to MyGet
                - npm publish
          - step:
              name: Athenaeum Toolkit build
              image: mcr.microsoft.com/dotnet/core/sdk:3.1-alpine
              size: 2x # Double resources available for this step.
              script:
                - echo $BITBUCKET_BUILD_NUMBER
                - dotnet pack -p:PackageVersion=1.0.${BITBUCKET_BUILD_NUMBER} ./WeAre.Athenaeum.Toolkit/WeAre.Athenaeum.Toolkit.csproj -o obj/weare-athenaeum-toolkit/publish
                - dotnet nuget push obj/weare-athenaeum-toolkit/publish/WeAre.Athenaeum.Toolkit.1.0.${BITBUCKET_BUILD_NUMBER}.nupkg -k ${MYGET_API_KEY} -s https://www.myget.org/F/renta-apps/api/v2/package
              services:
                - docker
              caches:
                - dotnetcore
          - step:
              name: Athenaeum Redis build
              image: mcr.microsoft.com/dotnet/core/sdk:3.1-alpine
              size: 2x # Double resources available for this step.
              script:
                - echo $BITBUCKET_BUILD_NUMBER
                - dotnet pack -p:PackageVersion=1.0.${BITBUCKET_BUILD_NUMBER} ./WeAre.Athenaeum.Services.Cache/WeAre.Athenaeum.Services.Cache.csproj -o obj/weare-athenaeum-cache/publish
                - dotnet nuget push obj/weare-athenaeum-cache/publish/WeAre.Athenaeum.Services.Cache.1.0.${BITBUCKET_BUILD_NUMBER}.nupkg -k ${MYGET_API_KEY} -s https://www.myget.org/F/renta-apps/api/v2/package
              services:
                - docker
              caches:
                - dotnetcore
          - step:
              name: UI Toolkit tests
              image: node:10.15.0
              script:
                - echo $BITBUCKET_BUILD_NUMBER
                - cd WeAre.Athenaeum.React.Toolkit
                - npm install
                - npm test
              caches:
                - node
          - step:
              name: WeAre Athenaeum Common build
              image: mcr.microsoft.com/dotnet/core/sdk:3.1-alpine
              size: 2x # Double resources available for this step.
              script:
                - echo $BITBUCKET_BUILD_NUMBER
                - dotnet pack -p:PackageVersion=1.0.${BITBUCKET_BUILD_NUMBER} ./WeAre.Athenaeum.Common/WeAre.Athenaeum.Common.csproj -o obj/weare-athenaeum-common/publish
                - dotnet nuget push obj/weare-athenaeum-common/publish/WeAre.Athenaeum.Common.1.0.${BITBUCKET_BUILD_NUMBER}.nupkg -k ${MYGET_API_KEY} -s https://www.myget.org/F/renta-apps/api/v2/package
              services:
                - docker
              caches:
                - dotnetcore
          - step:
              name: Renta Apps Common build
              image: mcr.microsoft.com/dotnet/core/sdk:3.1-alpine
              size: 2x # Double resources available for this step.
              script:
                - echo $BITBUCKET_BUILD_NUMBER
                - dotnet pack -p:PackageVersion=1.0.${BITBUCKET_BUILD_NUMBER} ./Renta.Apps.Common/Renta.Apps.Common.csproj -o obj/renta-apps-common/publish
                - dotnet nuget push obj/renta-apps-common/publish/Renta.Apps.Common.1.0.${BITBUCKET_BUILD_NUMBER}.nupkg -k ${MYGET_API_KEY} -s https://www.myget.org/F/renta-apps/api/v2/package
              services:
                - docker
              caches:
                - dotnetcore       
      - step:
          name: Athenaeum Documentation build
          image: node:10.15.0
          script:
            #Prepare Documentation folder
            - cd Documentation
            - mkdir input
            #Prepare npm stuff
            - npm config set strict-ssl true
            - npm config set ca ""
            - npm install -g @microsoft/api-documenter
            - npm install -g @microsoft/api-extractor
            # Toolkit documentation build
            - cd ../WeAre.Athenaeum.React.Toolkit/
            - npm run build
            - mkdir ./etc
            - api-extractor run --local
            # Copy toolkit documentation to Documentation/input
            - cp -a ./temp/. ../Documentation/input/
            # React.Common documentation build
            - cd ../WeAre.Athenaeum.React.Common/
            - npm run build
            - mkdir ./etc
            - api-extractor run --local
            - cp -a ./temp/. ../Documentation/input/
            # Documentation creation from input files to Documentation/docs
            - cd ../Documentation
            - api-documenter markdown -i ./input/ -o ./docs/
            - cp ./index.html ./docs/index.html
            - cd ./docs/
            - mv index.md README.md
            # TODO somehow server static page from docs folder
definitions:
  caches:
    dotnetcore: ~/.nuget/packages
  services:
    docker:
      memory: 2048
