options:
  docker: true
  size: 2x # Double resources available for this step.

pipelines:
  branches:
    master: # Pipelines that will be triggered automatically
      - parallel:
          - step:
              name: ReApptor React Toolkit Build
              image: node:14
              caches:
                - node
              script:
                # Update npm settings
                - echo $BITBUCKET_BUILD_NUMBER
                - cd WeAre.ReApptor.React.Toolkit
                - node -v && npm -v
                - npm config set strict-ssl true
                - npm config set ca ""
                - npm config set @weare:registry ${MYGET_NPM_SOURCE}
                # Install dependencies
                - npm install --prefix ..
                - npm run postinstall --prefix ..
                # Dependencies for documentation create
                - npm install -g @microsoft/api-extractor@7.12.1
                # Run tests
                - npm run test
                # Change version number
                - npm version 1.0.${BITBUCKET_BUILD_NUMBER}
                # Run build
                - npm run build
                # Create documentation
                - mkdir ./etc
#                - api-extractor run --local
                # Create .npmrc file
                - cd dist
                - echo registry=https://${MYGET_NPM_REGISTRY_URL} > ~/.npmrc
                - echo always-auth=true >> ~/.npmrc
                - echo //${MYGET_NPM_REGISTRY_URL}:_authToken=${MYGET_NPM_APIKEY} >> ~/.npmrc
                # Create package
                - npm pack
                # Publish to MyGet
                - npm publish
              artifacts:
                - WeAre.ReApptor.React.Toolkit/temp/**
          - step:
              name: ReApptor React Common Build
              image: node:14
              caches:
                - node
              script:
                # Update npm settings
                - echo $BITBUCKET_BUILD_NUMBER
                - cd WeAre.ReApptor.React.Common
                - node -v && npm -v
                - npm config set strict-ssl true
                - npm config set ca ""
                - npm config set @weare:registry ${MYGET_NPM_SOURCE}
                # Install dependencies
                - npm install --prefix ..
                - npm run postinstall --prefix ..
                 # Dependencies for documentation create
                - npm install -g @microsoft/api-extractor@7.12.1
                # Run tests
                - npm run test
                # Change version number
                - npm version 1.0.${BITBUCKET_BUILD_NUMBER}
                # Change toolkit version number
                - npm version 1.0.${BITBUCKET_BUILD_NUMBER} --prefix ../WeAre.ReApptor.React.Toolkit
                # Run build
                - npm run build
                # Create documentation
                - mkdir ./etc
#                - api-extractor run --local
                # Create .npmrc file
                - cd dist
                - echo registry=https://${MYGET_NPM_REGISTRY_URL} > ~/.npmrc
                - echo always-auth=true >> ~/.npmrc
                - echo //${MYGET_NPM_REGISTRY_URL}:_authToken=${MYGET_NPM_APIKEY} >> ~/.npmrc
                # Create package
                - npm pack
                # Publish to MyGet
                - npm publish
              artifacts:
                - WeAre.ReApptor.React.Common/temp/**
          - step:
              name: ReApptor React Components Localization Build
              image: node:14
              caches:
                - node
              script:
                # Update npm settings
                - echo $BITBUCKET_BUILD_NUMBER
                - cd WeAre.ReApptor.React.Components.Localization
                - node -v && npm -v
                - npm config set strict-ssl true
                - npm config set ca ""
                - npm config set @weare:registry ${MYGET_NPM_SOURCE}
                # Install dependencies
                - npm install --prefix ..
                - npm run postinstall --prefix ..
                # Dependencies for documentation create
                - npm install -g @microsoft/api-extractor@7.12.1
                # Run tests
                - npm run test
                # Change version number
                - npm version 1.0.${BITBUCKET_BUILD_NUMBER}
                # Run build
                - npm run build
                ## Create documentation
                #- mkdir ./etc
                #- api-extractor run --local
                #- api-documenter markdown -i ./temp/ -o ../Documentation/docs/
                # Create .npmrc file
                - cd dist
                - echo registry=https://${MYGET_NPM_REGISTRY_URL} > ~/.npmrc
                - echo always-auth=true >> ~/.npmrc
                - echo //${MYGET_NPM_REGISTRY_URL}:_authToken=${MYGET_NPM_APIKEY} >> ~/.npmrc
                # Create package
                - npm pack
                # Publish to MyGet
                - npm publish
          - step:
              name: ReApptor React Components Build
              image: node:14
              caches:
                - node
              script:
                # Update npm settings
                - echo $BITBUCKET_BUILD_NUMBER
                - cd WeAre.ReApptor.React.Components
                - node -v && npm -v
                - npm config set strict-ssl true
                - npm config set ca ""
                - npm config set @weare:registry ${MYGET_NPM_SOURCE}
                # Install dependencies
                - npm install --prefix ..
                - npm run postinstall --prefix ..
                ## Dependencies for documentation create
                #- npm install -g @microsoft/api-extractor@7.12.1
                #- npm install -g @microsoft/api-documenter
                ## Run tests
                - npm run test --prefix ./src
                # Change version number
                - npm version 1.0.${BITBUCKET_BUILD_NUMBER} --prefix ./src
                # Change toolkit version number
                - npm version 1.0.${BITBUCKET_BUILD_NUMBER} --prefix ../WeAre.ReApptor.React.Toolkit
                # Change common version number
                - npm version 1.0.${BITBUCKET_BUILD_NUMBER} --prefix ../WeAre.ReApptor.React.Common
                # Run build
                - npm run build --prefix ./src
                ## Create documentation
                #- mkdir ./etc
                #- api-extractor run --local
                #- api-documenter markdown -i ./temp/ -o ../Documentation/docs/
                # Create .npmrc file
                - cd dist
                - echo registry=https://${MYGET_NPM_REGISTRY_URL} > ~/.npmrc
                - echo always-auth=true >> ~/.npmrc
                - echo //${MYGET_NPM_REGISTRY_URL}:_authToken=${MYGET_NPM_APIKEY} >> ~/.npmrc
                # Create package
                - npm pack
                # Publish to MyGet
                - npm publish
          - step:
              name: ReApptor Toolkit Build
              image: mcr.microsoft.com/dotnet/core/sdk:3.1-alpine
              caches:
                - dotnetcore
              script:
                - echo $BITBUCKET_BUILD_NUMBER
                - dotnet pack -p:PackageVersion=1.0.${BITBUCKET_BUILD_NUMBER} ./WeAre.ReApptor.Toolkit/WeAre.ReApptor.Toolkit.csproj -o obj/weare-reapptor-toolkit/publish
                - dotnet nuget push obj/weare-reapptor-toolkit/publish/WeAre.ReApptor.Toolkit.1.0.${BITBUCKET_BUILD_NUMBER}.nupkg -k ${MYGET_API_KEY} -s https://www.myget.org/F/reapptor-apps/api/v2/package
          - step:
              name: ReApptor Redis Build
              image: mcr.microsoft.com/dotnet/core/sdk:3.1-alpine
              caches:
                - dotnetcore
              script:
                - echo $BITBUCKET_BUILD_NUMBER
                - dotnet pack -p:PackageVersion=1.0.${BITBUCKET_BUILD_NUMBER} ./WeAre.ReApptor.Services.Cache/WeAre.ReApptor.Services.Cache.csproj -o obj/weare-reapptor-cache/publish
                - dotnet nuget push obj/weare-reapptor-cache/publish/WeAre.ReApptor.Services.Cache.1.0.${BITBUCKET_BUILD_NUMBER}.nupkg -k ${MYGET_API_KEY} -s https://www.myget.org/F/reapptor-apps/api/v2/package
          - step:
              name: ReApptor Sms Build
              image: mcr.microsoft.com/dotnet/core/sdk:3.1-alpine
              caches:
                - dotnetcore
              script:
                - echo $BITBUCKET_BUILD_NUMBER
                - dotnet pack -p:PackageVersion=1.0.${BITBUCKET_BUILD_NUMBER} ./WeAre.ReApptor.Services.Sms/WeAre.ReApptor.Services.Sms.csproj -o obj/weare-reapptor-sms/publish
                - dotnet nuget push obj/weare-reapptor-sms/publish/WeAre.ReApptor.Services.Sms.1.0.${BITBUCKET_BUILD_NUMBER}.nupkg -k ${MYGET_API_KEY} -s https://www.myget.org/F/reapptor-apps/api/v2/package
          - step:
              name: ReApptor ACM Build
              image: mcr.microsoft.com/dotnet/core/sdk:3.1-alpine
              caches:
                - dotnetcore
              script:
                - echo $BITBUCKET_BUILD_NUMBER
                - dotnet pack -p:PackageVersion=1.0.${BITBUCKET_BUILD_NUMBER} ./WeAre.ReApptor.Services.ACM/WeAre.ReApptor.Services.ACM.csproj -o obj/weare-reapptor-acm/publish
                - dotnet nuget push obj/weare-reapptor-acm/publish/WeAre.ReApptor.Services.ACM.1.0.${BITBUCKET_BUILD_NUMBER}.nupkg -k ${MYGET_API_KEY} -s https://www.myget.org/F/reapptor-apps/api/v2/package
          - step:
              name: UI Toolkit Tests
              image: node:14
              caches:
                - node
              script:
                - echo $BITBUCKET_BUILD_NUMBER
                - cd WeAre.ReApptor.React.Toolkit
                - node -v && npm -v
                - npm install --prefix ..
                - npm test
          - step:
              name: WeAre ReApptor Common Build
              image: mcr.microsoft.com/dotnet/core/sdk:3.1-alpine
              caches:
                - dotnetcore
              script:
                - echo $BITBUCKET_BUILD_NUMBER
                - dotnet pack -p:PackageVersion=1.0.${BITBUCKET_BUILD_NUMBER} ./WeAre.ReApptor.Common/WeAre.ReApptor.Common.csproj -o obj/weare-reapptor-common/publish
                - dotnet nuget push obj/weare-reapptor-common/publish/WeAre.ReApptor.Common.1.0.${BITBUCKET_BUILD_NUMBER}.nupkg -k ${MYGET_API_KEY} -s https://www.myget.org/F/reapptor-apps/api/v2/package
          - step:
              name: WeAre ReApptor Tools Localization Check CLI Build
              image: node:14
              caches:
                - node
              script:
                # Update npm settings
                - echo $BITBUCKET_BUILD_NUMBER
                - cd WeAre.ReApptor.Tools.LocalizationCheck
                - node -v && npm -v
                - npm config set strict-ssl true
                - npm config set ca ""
                - npm config set @weare:registry ${MYGET_NPM_SOURCE}
                # Install dependencies
                - npm install
                ## Dependencies for documentation create
                #- npm install -g @microsoft/api-extractor@7.12.1
                #- npm install -g @microsoft/api-documenter
                ## Run tests
                # - npm test
                # Run build
                - npm run build
                ## Create documentation
                #- mkdir ./etc
                #- api-extractor run --local
                #- api-documenter markdown -i ./temp/ -o ../Documentation/docs/
                # Create .npmrc file
                - echo registry=https://${MYGET_NPM_REGISTRY_URL} > ~/.npmrc
                - echo always-auth=true >> ~/.npmrc
                - echo //${MYGET_NPM_REGISTRY_URL}:_authToken=${MYGET_NPM_APIKEY} >> ~/.npmrc
                # Create package
                - npm pack
                # Change version number
                - npm version 1.0.${BITBUCKET_BUILD_NUMBER}
                # Publish to MyGet
                - npm publish
          - step:
              name: WeAre ReApptor Tools CodeGenerator
              image: mcr.microsoft.com/dotnet/core/sdk:3.1-alpine
              caches:
                - dotnetcore
              script:
                - echo $BITBUCKET_BUILD_NUMBER
                - dotnet pack -p:PackageVersion=1.0.${BITBUCKET_BUILD_NUMBER} ./WeAre.ReApptor.Tools.CodeGenerator/WeAre.ReApptor.Tools.CodeGenerator.csproj -o obj/weare-reapptor-tools-codegenerator/publish
                - dotnet nuget push obj/weare-reapptor-tools-codegenerator/publish/WeAre.ReApptor.Tools.CodeGenerator.1.0.${BITBUCKET_BUILD_NUMBER}.nupkg -k ${MYGET_API_KEY} -s https://www.myget.org/F/reapptor-apps/api/v2/package
          - step:
              name: WeAre Apps Common Build
              image: mcr.microsoft.com/dotnet/core/sdk:3.1-alpine
              caches:
                - dotnetcore
              script:
                - echo $BITBUCKET_BUILD_NUMBER
                - dotnet pack -p:PackageVersion=1.0.${BITBUCKET_BUILD_NUMBER} ./WeAre.Apps.Common/WeAre.Apps.Common.csproj -o obj/reapptor-apps-common/publish
                - dotnet nuget push obj/reapptor-apps-common/publish/WeAre.Apps.Common.1.0.${BITBUCKET_BUILD_NUMBER}.nupkg -k ${MYGET_API_KEY} -s https://www.myget.org/F/reapptor-apps/api/v2/package
#      - step:
#          name: Build Documentation
#          image: node:14
#          caches:
#            - node
#          script:
#            - node -v && npm -v
#            - npm config set strict-ssl true
#            - npm config set ca ""
#            - npm install -g @microsoft/api-documenter
#            - cd Documentation
#            - mkdir input
#            - cp -a ../WeAre.ReApptor.React.Toolkit/temp/. ./input/
#            - cp -a ../WeAre.ReApptor.React.Common/temp/. ./input/
#            - api-documenter markdown -i ./input/ -o ./docs/
#            - cp index.html ./docs/index.html
#            - mv ./docs/index.md ./docs/README.md
#          artifacts:
#            - Documentation/docs/**
#      - step:
#          name: Deploy Documentation
#          image: amazon/aws-cli
#          caches:
#            - docker
#          script:
#            - export VERSION=latest
#            # Print version from AWS CLI & Python
#            - aws --version && python -V
#            # Deploy documentation
#            - cd Documentation
#            # Build container image and push to ECR repository
#            - aws ecr get-login-password --region ${AWS_REGION} | docker login --password-stdin --username AWS "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"
#            - docker build -t ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${REPOSITORY}:$VERSION -f Dockerfile .
#            - docker tag ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${REPOSITORY}:$VERSION ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${REPOSITORY}:$VERSION
#            - docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${REPOSITORY}:$VERSION
#          services:
#            - docker
#      - step:
#          name: Deploy Dev ReApptor Documentation to FARGATE
#          deployment: dev-reapptor-doc-deploy
#          image: alpine:3.9
#          script:
#            - apk add --no-cache curl
#            - 'curl -X POST -is -H "Authorization: Basic Y2ljZHdlYXJldXNlcjpoNXZISk04NnpzblI4S3VGcmFoNg==" -H "Content-Type: application/json" -d "{\"target\":{\"ref_type\":\"branch\",\"type\":\"pipeline_ref_target\",\"ref_name\":\"master\"}}" https://api.bitbucket.org/2.0/repositories/wearesolutions/reapptor-documentation-deploy/pipelines/'
definitions:
  caches:
    dotnetcore: ~/.nuget/packages
    node: ./node_modules
    lock: ./package-lock.json
  services:
    docker:
      memory: 2048
