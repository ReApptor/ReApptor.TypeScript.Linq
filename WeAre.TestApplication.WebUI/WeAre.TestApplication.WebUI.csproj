<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>netcoreapp3.1</TargetFramework>
        <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
        <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
        <IsPackable>false</IsPackable>
        <SpaRoot />
        <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
      <DebugType>full</DebugType>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="AWSXRayRecorder" Version="2.9.0" />
        <PackageReference Include="Microsoft.AspNetCore.Authentication.MicrosoftAccount" Version="3.1.5" />
        <PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="3.1.5" />
        <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.5" />
        <PackageReference Include="Microsoft.IdentityModel.Tokens" Version="6.6.0" />
        <PackageReference Include="Newtonsoft.Json" Version="12.0.3" />
        <PackageReference Include="NLog.Extensions.Logging" Version="1.6.4" />
        <PackageReference Include="NLog.Web.AspNetCore" Version="4.9.3" />
        <PackageReference Include="WebEssentials.AspNetCore.PWA" Version="1.0.65" />
    </ItemGroup>
    
    <ItemGroup>
        <!-- Don't publish the SPA source files, but do show them in the project files list -->
        <Content Remove="$(SpaRoot)**" />
        <Content Include="appsettings.json" />
        <Content Include="nlog.config">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <Content Update="nlog.debug.config">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <Content Include="nlog.debug.config">
            <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <Content Remove="build\**" />
        <Content Remove="src\@weare\**" />
        <Content Include="src\lib\.DS_Store" />
        <Content Include="src\lib\dinpro\.DS_Store" />
        <Content Include="src\lib\dinpro\webfonts\DINPro-Bold.ttf" />
        <Content Include="src\lib\dinpro\webfonts\DINPro-Medium.ttf" />
        <Content Include="src\lib\fa\css\all.min.css" />
        <Content Include="src\lib\fa\webfonts\fa-brands-400.eot" />
        <Content Include="src\lib\fa\webfonts\fa-brands-400.svg" />
        <Content Include="src\lib\fa\webfonts\fa-brands-400.ttf" />
        <Content Include="src\lib\fa\webfonts\fa-brands-400.woff" />
        <Content Include="src\lib\fa\webfonts\fa-brands-400.woff2" />
        <Content Include="src\lib\fa\webfonts\fa-light-300.eot" />
        <Content Include="src\lib\fa\webfonts\fa-light-300.svg" />
        <Content Include="src\lib\fa\webfonts\fa-light-300.ttf" />
        <Content Include="src\lib\fa\webfonts\fa-light-300.woff" />
        <Content Include="src\lib\fa\webfonts\fa-light-300.woff2" />
        <Content Include="src\lib\fa\webfonts\fa-regular-400.eot" />
        <Content Include="src\lib\fa\webfonts\fa-regular-400.svg" />
        <Content Include="src\lib\fa\webfonts\fa-regular-400.ttf" />
        <Content Include="src\lib\fa\webfonts\fa-regular-400.woff" />
        <Content Include="src\lib\fa\webfonts\fa-regular-400.woff2" />
        <Content Include="src\lib\fa\webfonts\fa-solid-900.eot" />
        <Content Include="src\lib\fa\webfonts\fa-solid-900.svg" />
        <Content Include="src\lib\fa\webfonts\fa-solid-900.ttf" />
        <Content Include="src\lib\fa\webfonts\fa-solid-900.woff" />
        <Content Include="src\lib\fa\webfonts\fa-solid-900.woff2" />
        <Content Include="src\manifest.json" />
        <Content Remove="dist\**" />
        <Content Include="tsconfig.app.json" />
        <Content Include="tsconfig.json" />
        <Content Include="tsconfig.spec.json" />
    </ItemGroup>

    <ItemGroup>
        <Compile Remove="obj\**" />
        <Compile Remove="bin\**" />
        <Compile Remove="build\**" />
        <Compile Remove="src\@weare\**" />
        <Compile Remove="dist\**" />
    </ItemGroup>

    <ItemGroup>
      <ProjectReference Include="..\WeAre.TestApplication.Common\WeAre.TestApplication.Common.csproj" />
      <ProjectReference Include="..\WeAre.TestApplication.WebUI.Server\WeAre.TestApplication.WebUI.Server.csproj" />
    </ItemGroup>

    <ItemGroup>
      <EmbeddedResource Remove="build\**" />
      <EmbeddedResource Remove="src\@weare\**" />
      <EmbeddedResource Remove="dist\**" />
    </ItemGroup>

    <ItemGroup>
      <None Remove="build\**" />
      <None Remove="src\@weare\**" />
      <None Remove=".babelrc" />
      <None Remove=".gitignore" />
      <None Remove=".browserslistrc" />
      <None Remove="dist\**" />
      <None Include="package.json" />
    </ItemGroup>

    <ItemGroup>
      <TypeScriptCompile Include="src\app\pages\AnonymousPage.ts" />
      <TypeScriptCompile Include="src\app\pages\AuthorizedPage.ts" />
      <TypeScriptCompile Include="src\app\pages\AuthorizedTestWithParameters\AuthorizedTestWithParameters.tsx" />
      <TypeScriptCompile Include="src\app\pages\Error\Error.tsx" />
      <TypeScriptCompile Include="src\app\pages\PageDefinitions.ts" />
      <TypeScriptCompile Include="src\app\pages\AuthorizedTest\AuthorizedTest.tsx" />
      <TypeScriptCompile Include="src\app\pages\TestApplicationController.ts" />
      <TypeScriptCompile Include="src\app\pages\AnonymousTestWithParameters\AnonymousTestWithParameters.tsx" />
      <TypeScriptCompile Include="src\app\pages\Tests\FileInputTests\FileInputTests.tsx" />
      <TypeScriptCompile Include="src\app\pages\Tests\ModalTests\sampleImage.ts" />
      <TypeScriptCompile Include="src\app\pages\Tests\ModalTests\samplePdf.ts" />
      <TypeScriptCompile Include="src\app\pages\Tests\RouteWidgetTests\RouteWidgetTests.tsx" />
      <TypeScriptCompile Include="src\app\pages\Tests\Tests.tsx" />
      <TypeScriptCompile Include="src\app\providers\TransformProvider.ts" />
      <TypeScriptCompile Include="src\lib\fa\fa.ts" />
      <TypeScriptCompile Include="src\module.d.ts" />
      <TypeScriptCompile Include="src\polyfills.ts" />
    </ItemGroup>

    <ItemGroup>
      <_ContentIncludedByDefault Remove="build\manifest.json" />
      <_ContentIncludedByDefault Remove="dist\manifest.json" />
    </ItemGroup>

    <ItemGroup>
      <Folder Include="src\localization" />
    </ItemGroup>

    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
        <!-- Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    </Target>

    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
        <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="CI=false npm run build" />

        <!-- Include the newly-built files in the publish output -->
        <ItemGroup>
            <DistFiles Include="$(SpaRoot)build\**" />
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>%(DistFiles.Identity)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>
    
</Project>
